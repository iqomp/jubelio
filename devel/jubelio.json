{
  "openapi": "3.0.0",
  "info": {
    "title": "Jubelio API Documentation",
    "version": "0.1.0",
    "x-logo": {
      "url": "logo.png"
    }
  },
  "servers": [
    {
      "url": "https://api.jubelio.com/"
    }
  ],
  "tags": [
    {
      "name": "Introduction",
      "description": "Thank you for taking the time to look into our **Jubelio** REST API documentation.\nREST is a web-service protocol that lends itself to rapid development by using everyday HTTP and JSON technology.\n\nYou can also import the above Open Api specification into Postman collection. Just click the download button and then save\nthe json file into a local file and then import this file as new collection in Postman.\nWe are using token to authenticate our Users so you need to get new token when your saved token is expired. Please see the Flow Diagram: <br /> <img src='https://drive.google.com/uc?id=1MJxQc9ybbOULvKpQajU7uyvhvrw_hymN' alt='flow login diagram' />\n"
    },
    {
      "name": "Error Codes",
      "description": "| Code      |          Condition Name         |                                    Explanations                                                           |\n|:---------:|---------------------------------|-----------------------------------------------------------------------------------------------------------|\n| 23502     | not_null_violation              | Will happen when some required field not filed                                                            |\n| 23503     | foreign_key_violation           | Will happen when using ID that not exists or Record (that will be deleted) is used in another transaction |\n| 23505     | unique_violation                | Will happen if Record Number like Sales Order Number, Purchase Order Number, etc have already been exists |\n| 23113     | journal_unbalance               | Will happen if Transaction Credit and Debit not same                                                      |\n| 23114     | error_transaction               | Will happen if down payment has been deducted from the bill payment                                       |\n| 10001     | error_transaction               | Will happen if cannot add, change or delete transactions within a locked period.                          |\n| 23100     | error_inventory                 | Will happen when the inventory of the transaction value is set to be minus.                               |\n| 23101     | error_inventory                 | Will happen if the inventory qty of the transaction is set to be 0 but not the inventory value to be 0.   |\n| 23102     | error_transaction               | Will happen when the transaction is set to be minus.                                                      |\n| 23504     | error_transaction               | Will happen if the product bundle contents use another product bundle.                                    |\n| 23103     | error_transaction               | Will happen if there have been payments whose value exceeds the value of this bill.                       |\n| 23108     | error_transaction               | Will happen if there has been a payment that exceeds the value of this invoice.                           |\n| 23115     | error_transaction               | Will happen if down payment has been deducted from the invoice payment.                                   |\n| 23116     | error_transaction               | Will happen if return Qty exceeds in the invoice.                                                         |\n| 23104     | error_transaction               | Will happen if payment exceeds invoice value.                                                             |\n| 23106     | error_transaction               | Will happen if payment exceeds bill value.                                                                |\n| 23105     | error_return_item               | Will happen if refund exceeds the return value.                                                           |\n| 23107     | error_return_item               | Will happen if refund exceeds the return value.                                                           |\n| 23109     | error_return_item               | Will happen when invoice deduction exceeds the return value.                                              |\n| 23111     | error_return_item               | Will happen when bill deduction exceeds the return value.                                                 |\n| 23110     | error_transaction               | Will happen when invoice deduction exceeds the invoice value.                                             |\n| 23112     | error_transaction               | Will happen when The bill deduction exceeds the bill value.                                               |\n| 20501     | error_promotion                 | Will happen if there is another promotion on that date.                                                   |\n| 90000     | error_auth                      | Will happen if username or password is invalid.                                                           |\n| 90001     | error_auth                      | Will happen when old password is invalid.                                                                 |\n| 90002     | error_courier                   | Will happen if this courier cannot be used for your account.                                              |\n| 90003     | error_product_bundle            | Will happen if products that have transactions cannot be made into product bundles.                       |\n| E000001   | error_data                      | Will happen if data does not exist in Jubelio system                                                      |\n| E000002   | error_promotion                 | Promotion overlapping with another promotion.                                                             |\n| E000003   | error_field                     | Missing required parameter                                                                                |\n| E000004   | error_transaction               | Will happen if transfer would be changed and it is already on the road (Print Road Mail).                 |\n| E000005   | error_order                     | Will happen if order status does not support label printing.                                              |\n| E000006   | error_integration               | Will happen if there is no channel is integrated. At least 1 integrated channel.                          |\n| E000007   | error_page                      | Will happen if the page has changed since you last opened.                                                |\n"
    },
    {
      "name": "Sequence Introduction",
      "description": "Please see the Sequence Diagram: <a href=\"https://docs.google.com/presentation/d/11C28RO0gpnIoaMEEhSgPmJYUg7HHIcluRHJO3A5-xI0/\">Here</a>\n"
    },
    {
      "name": "Webhooks",
      "description": "Jubelio Webhooks will be called on some process like Product Creation, Stock Update, etc.\nWebhook will have try for 3 times when the URL not give expected result.\nTo set up Webhook Settings, Login to Your Account in Jubelio and update the settings on Settings -> Developer -> Webhook.\n"
    },
    {
      "name": "Authentication",
      "description": "User Authentication"
    },
    {
      "name": "Inventory",
      "description": "Inventory API is to manage inventory. There are 10 endpoints for Inventory API. <br>\nInventory management is the process of managing inventory from on hand to available. <br>\nThere are 4 types of inventory management in Jubelio system.\n<ul>\n  <li>On hand - The items we currently have. Some are not related to the order or reservation</li>\n  <li>On order - Items that are being ordered by the customer. The stock in On Order will be reduced if the invoice is printed</li>\n  <li>On reserved - The item that is being created becomes a backup. On hand goods are different from on reserved goods.</li>\n  <li>Available - Total items that have been deducted from on hand, on order and reserved.\n      <ul>\n        <li>Example: We have 100 items available (150 = on hand, 0 = on order, 50 = on reserved). Then when someone\n            orders the 50 items, it will become 150 items on hand, 50 on order, 50 on reserved and the available items will be\n            50. The formula for Available is On Hand - On Order - On Reserved.\n        </li>\n      </ul>\n  </li>\n</ul>\n<ul>\n  <li>\n    For more explanation about adjustment: <a href=\"https://drive.google.com/uc?id=16T6em483gkDGzcDI6P3EboXCplBrUbcI\" target=\"_blank\">Here</a>\n  </li>\n  <li>\n    For more explanation about create stock transfer: <a href=\"https://drive.google.com/uc?id=12FsiVCiXCRQPS6zsuIAQCAlztV4NF-2_\" target=\"_blank\">Here</a> <br>\n  </li>\n</ul>\n"
    },
    {
      "name": "Product",
      "description": "Product API is to manage Product Catalogue, Bundles, Prices and Promotion. There are 28 endpoints for Product API.\n<ul>\n  <li>\n    Product Catalog is collection of products and their pricing information. For more explanation about Create Products: <a href=\"https://drive.google.com/uc?id=18snSEyBqzLYAKiWgHBxna_uKKYumbdA3\" target=\"_blank\">Here</a>\n  </li>\n  <li>\n    Bundles are offering several products for sale as one combined product. For more explanation about Bundles: <a href=\"https://drive.google.com/uc?id=1k2K96FL1wgd5rTncov52hwZ8slWNqFI-\" target=\"_blank\">Here</a>\n  </li>\n  <li>\n    Prices are tied to products and can be set in this API. For more explanation about Prices: <a href=\"https://drive.google.com/uc?id=10fW_TKRy4ubI34qaudGVNZk8nLQ0M8zq\" target=\"_blank\">Here</a> <br>\n  </li>\n  <li>\n    Promotion regulates the price that will be deducted in the marketplace if the product has a promotion For more explanation about Create Promotions: <a href=\"https://drive.google.com/uc?id=1PcQe5VsGh4BLd08l62BAEoIkLS251bOY\" target=\"_blank\">Here</a> <br>\n  </li>\n</ul>\n"
    },
    {
      "name": "Contact",
      "description": "Manage Customer and Vendors"
    },
    {
      "name": "Location",
      "description": "Manage Locations (Warehouses).\n"
    },
    {
      "name": "Couriers",
      "description": "Manage 3rd Party Logistics for Product Shipment"
    },
    {
      "name": "Sales",
      "description": "Sales API is to manage Orders, Picklist, Invoice, and Returns. There are 49 endpoints in Sales API. <br>\nFor more explanation about create sales order: <a href=\"https://drive.google.com/uc?id=1eqm6bVEpID-k46kUrkFhJbOTx17W925z\" target=\"_blank\">Here</a>\n"
    },
    {
      "name": "Purchasing",
      "description": "Manage Purchase Orders, Good Receives, Invoice and Returns <br>\nFor more explanation about create sales order: <a href=\"https://drive.google.com/uc?id=1TFvH_KLVkV7Esuhx3LJ6M4ndtMGwKagO\" target=\"_blank\">Here</a>\n"
    },
    {
      "name": "Channels",
      "description": "Manage Channel Stores and Store Mapping"
    }
  ],
  "x-alt-definitions": {
    "attribute_value": {
      "$ref": "#/components/schemas/schema1"
    }
  },
  "paths": {
    "/accounts/lookup/all": {
      "get": {
        "tags": [
          "Journal"
        ],
        "summary": "Get Account Lookup",
        "operationId": "getAccountLookupAll",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAccountLookupResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/cashbank/payments/": {
      "get": {
        "tags": [
          "Cash & Bank"
        ],
        "summary": "Get Payments",
        "operationId": "getPayments",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/transactionDateFrom"
          },
          {
            "$ref": "#/components/parameters/transactionDateTo"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCashbankReceivesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/cashbank/payments/id": {
      "get": {
        "tags": [
          "Cash & Bank"
        ],
        "summary": "Get Payment By Id",
        "operationId": "getPaymentsById",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCashbankPaymentByIdResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/cashbank/receives/": {
      "get": {
        "tags": [
          "Cash & Bank"
        ],
        "summary": "Get Receives",
        "operationId": "getReceives",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/transactionDateFrom"
          },
          {
            "$ref": "#/components/parameters/transactionDateTo"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCashbankReceivesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/cashbank/receives/id": {
      "get": {
        "tags": [
          "Cash & Bank"
        ],
        "summary": "Get Receive By Id",
        "operationId": "getReceivesById",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCashbankReceiveByIdResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/contact/category/": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get Contact Category",
        "operationId": "getContactCategory",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Category Code/Category Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getContactCategoryResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get All Contacts",
        "operationId": "getContacts",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "$ref": "#/components/parameters/createdSince"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Contact Name/Primary Contact/Phone/Email]",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getContactsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Create/Edit Contact",
        "operationId": "postContacts",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveContactRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Save Status",
                      "example": "ok"
                    },
                    "contact_id": {
                      "type": "number",
                      "description": "Contact ID",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contact"
        ],
        "summary": "Delete Contact",
        "operationId": "deleteContacts",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/deleteNumberRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get Contact",
        "operationId": "getContactsId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Contact ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getContactResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/customers-suppliers/": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get Customers and Vendors",
        "operationId": "getContactsCustomerssuppliers",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Contact Name/Primary Contact/Phone]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getContactsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/customers/": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get Customers",
        "operationId": "getContactsCustomers",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Contact Name/Primary Contact/Phone]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getContactsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/suppliers/": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get Vendors",
        "operationId": "getContactsSuppliers",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Contact Name/Primary Contact/Phone]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getContactsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/couriers": {
      "get": {
        "tags": [
          "Couriers"
        ],
        "summary": "Get All Couriers",
        "operationId": "getCouriers",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCouriersResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/couriers/{id}": {
      "get": {
        "tags": [
          "Couriers"
        ],
        "summary": "Get Courier",
        "operationId": "getCouriersId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Courier ID",
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCourierResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/couriers/tenant/{id}": {
      "get": {
        "tags": [
          "Couriers"
        ],
        "summary": "Get Tenant Courier",
        "operationId": "getCouriersTenantId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Courier ID",
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCourierResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get All Products Stock",
        "operationId": "getInventory",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Item Name/Item Code]",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getInventoryResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/activity/": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get Inventory Product Stock History",
        "operationId": "getInventoryProductActivity",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/dateTo"
          },
          {
            "name": "itemId",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "description": "Item Id",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getInventoryActivityResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/adjustments/": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get All Stock Adjustments",
        "operationId": "getInventoryAdjustments",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Item Adjustment Number]",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAllStockAdjustmentsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "Create/Edit Stock Adjustment",
        "description": "This API is used to create/edit adjustment stock to Market Place.\n",
        "operationId": "postInventoryAdjustments",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/adjusmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Inventory"
        ],
        "summary": "Delete Stock Adjustment",
        "operationId": "deleteInventoryAdjustments",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/deleteNumberRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/adjustments/{id}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get Stock Adjustment",
        "operationId": "getInventoryAdjustmentsId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Adjustment ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getStockAdjustmentResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/catalog/for-listing/{id}": {
      "get": {
        "tags": [
          "Product Listing"
        ],
        "summary": "Product Listing",
        "operationId": "getProductListing",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Item ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getProductListingResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/catalog/id": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create/Edit Product",
        "description": "This API is used to create Product in Jubelio.\nExample Upload Product Payload:\n  - [Single](https://codebeautify.org/jsonviewer/cbb79c23)\n  - [Variant](https://codebeautify.org/jsonviewer/cb1b9024)\n  - [Multi Variant](https://codebeautify.org/jsonviewer/cbffaa61)\n",
        "operationId": "postInventoryCatalog",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveProductNew"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Save Status",
                      "example": "ok"
                    },
                    "id": {
                      "type": "number",
                      "description": "Item Group ID",
                      "example": 1
                    },
                    "item_ids": {
                      "type": "array",
                      "description": "List Item ID",
                      "items": {
                        "type": "number",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get Item Catalog",
        "operationId": "getItemCatalogId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Adjustment ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getItemCatalogResponse"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/catalog/listing": {
      "post": {
        "tags": [
          "Product Listing"
        ],
        "summary": "Save Product Listing",
        "description": "Before uploading the product to the MP, do save the product listing based on MP that is chosen.\n",
        "operationId": "saveProductListing",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveProductListing"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveProductListingResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/catalog/upload": {
      "post": {
        "tags": [
          "Product Listing"
        ],
        "summary": "Upload Product Listing",
        "description": "After saving the product listing, make sure do upload product listing to MP by hitting this API.<br>\n<a href=\"https://drive.google.com/uc?id=18OfN8CCanhZ6cTHu8FzGfLRawhyZgugn\" target=\"_blank\">Flow</a>\n",
        "operationId": "uploadProductListing",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/uploadProductListing"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "description": "Status",
                      "example": "ok"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/categories/{channel_id}/store-categories/{store_id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Store Categories",
        "operationId": "getStoreCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "channel_id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Channel ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          },
          {
            "name": "store_id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Store ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getStoreCategoriesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/categories/{id}/attribute-values/": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Attributes Values",
        "operationId": "getAttributeValues",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Category ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAttributeValuesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/categories/{id}/attributes/": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Category Attributes",
        "operationId": "getCategoryAttributes",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Category ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCategoryAttributesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/categories/{id}/variations/": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Category Variants",
        "operationId": "getCategoryVariants",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Category ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCategoryVariantsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/categories/category-map/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Category Mapping to Marketplace",
        "operationId": "getCategoryMap",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Category ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCategoryMappingResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/categories/channel-categories/{parent_id}": {
      "get": {
        "tags": [
          "Product Listing"
        ],
        "summary": "Channel Categories",
        "operationId": "getChannelCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "parent_id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Parent Category ID",
            "example": 0,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "style": "simple",
            "explode": true,
            "description": "Category ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getChannelCategoriesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/categories/item-categories/": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get All Categories",
        "operationId": "getInventoryCategoriesItemcategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCategoriesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/categories/item-categories/information/{id}/": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Category Information",
        "operationId": "getInventoryCategoriesItemcategoriesInformationId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Category ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCategoryResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/images/": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Upload Product Images",
        "deprecated": true,
        "operationId": "postInventoryImages",
        "description": "This endpoint is deprecated, Please use <a href=\"#operation/postInventoryImagesNew\">New Endpoint</a>",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/saveImageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveImageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/item-bundles/": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get All Bundles",
        "operationId": "getInventoryItembundles",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter By [item_code/item_name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channelId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Item on Channel ID",
            "schema": {
              "type": "number",
              "format": "int32"
            }
          },
          {
            "name": "isFavourite",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Is Favorite Item [true/false]",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getBundlesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/items/": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get All Product Groups",
        "operationId": "getInventoryItems",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter By [item_code/item_name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channelId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Item on Channel ID",
            "schema": {
              "type": "number",
              "format": "int32"
            }
          },
          {
            "name": "isFavourite",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Is Favorite Item [true/false]",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getProductsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete Product",
        "operationId": "deleteInventoryItems",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/deleteNumberRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create/Edit Product Bundle",
        "operationId": "postProductBundle",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveProductBundleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Save Status",
                      "example": "ok"
                    },
                    "id": {
                      "type": "number",
                      "description": "Item Group ID",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/items/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Product",
        "operationId": "getInventoryItemsId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Item ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getProductResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/items/{id}/batch-number": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get Item Batch Number",
        "operationId": "getItemBatchNumber",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Item ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getItemBatchNumberResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/items/all-stocks/": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Get Product Stocks by Ids",
        "operationId": "productInventory",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/itemIdsRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getInventoryResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/items/by-sku/{sku}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Product by Sku",
        "operationId": "getInventoryItemsByskuSku",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Item Code",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getProductResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/items/channel-category-attributes/": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get All Channel Attributes",
        "operationId": "getChannelAttributes",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "description": "Channel Category ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channel_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "description": "Channel ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getChannelAttributesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/items/channel-category-tree/": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get All Channel Category Tree",
        "operationId": "getChannelCategory",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "description": "Channel Category ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channel_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "description": "Channel ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getChannelCategoryResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/items/complete-return/": {
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Set Item to Not Return",
        "operationId": "setItemToNotReturn",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/itemIdsRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/items/errors/": {
      "get": {
        "tags": [
          "Product Listing"
        ],
        "summary": "Upload Failed",
        "operationId": "getUploadErrors",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter By [item_code/item_name]",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getUploadProductErrorsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/items/group/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Product Group",
        "operationId": "getInventoryItemsGroupId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Item Group ID",
            "schema": {
              "minimum": 1,
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getProductResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/items/prices": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Get Product Prices by Ids",
        "operationId": "productPrices",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/itemIdsRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getPriceListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/items/reject-return/": {
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Reject Return Request",
        "operationId": "rejectReturnRequest",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/rejectReturnRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/items/to-adjust/": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get Item Cost and Stock",
        "operationId": "setItemToAdjust",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "ids"
                ],
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "description": "List Item ID",
                    "required": true,
                    "items": {
                      "type": "number",
                      "example": 1
                    }
                  },
                  "location_id": {
                    "description": "Location Id",
                    "type": "number",
                    "example": -1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/setItemToAdjustResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/items/to-return/": {
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Set Item to Return",
        "operationId": "setItemToReturn",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/itemIdsRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/items/to-sell/": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get Items To Sell",
        "operationId": "getItemsToSell",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getItemsToSellResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/price-list/": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get All Product Prices",
        "operationId": "getInventoryPricelist",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Item Name/Item Code]",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getPriceListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Edit Product Prices",
        "operationId": "postInventoryPricelist",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/savePriceListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ok"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/promotions/": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get All Promotions",
        "operationId": "getInventoryPromotions",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Promotion Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getPromotionsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create/Edit Promotion",
        "operationId": "postInventoryPromotions",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/savePromotionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/savePromotionResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete Promotion",
        "operationId": "deleteInventoryPromotions",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/deleteNumberRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/promotions/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Promotion",
        "operationId": "getInventoryPromotionsId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Promotion ID",
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getPromotionResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/revaluations/": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "Create/Edit Amount Adjustment",
        "description": "This API is used to create/edit adjustment amount.\n",
        "operationId": "postInventoryAmountAdjustments",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/adjustmentAmountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/search-brands/": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get All Brands",
        "operationId": "getInventorySearchbrands",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Brand Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getBrandsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/transfer/mark-printed": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "Mark Item Transfer as Printed",
        "operationId": "inventoryTransferMarkPrinted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item_transfer_id": {
                      "type": "number",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/transfers/": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "Create/Edit Stock Transfer",
        "operationId": "postInventoryTransfers",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/inventoryTransferRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Inventory"
        ],
        "summary": "Delete Stock Transfer",
        "operationId": "deleteInventoryTransfers",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/deleteNumberRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/transfers/{id}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get Stock Transfer",
        "operationId": "getInventoryTransfersId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Transfer ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getInventoryTransferResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/transfers/in": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get Stock Transfer In",
        "operationId": "getInventoryTransfersIn",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getInventoryTransferInResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/transfers/out": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get Stock Transfer Out",
        "operationId": "getInventoryTransfersOut",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getInventoryTransferOutResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/transfers/transit": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get Stock Transfer Transit",
        "operationId": "getInventoryTransfersTransit",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getInventoryTransferOutResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/inventory/upload-image": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Upload Product Image",
        "operationId": "postInventoryImagesNew",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/saveImageRequestNew"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveImageResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/journal/": {
      "get": {
        "tags": [
          "Journal"
        ],
        "summary": "Get All Journal",
        "operationId": "getJournal",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Contact Name/Primary Contact/Phone]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getJournalResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/journal/{id}": {
      "get": {
        "tags": [
          "Journal"
        ],
        "summary": "Get Journal By Id",
        "operationId": "getJournalById",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Location ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getJournalByIdResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/journal/manual-journal/": {
      "get": {
        "tags": [
          "Journal"
        ],
        "summary": "Get All Manual Journal",
        "operationId": "getJournalManual",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Contact Name/Primary Contact/Phone]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getJournalResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Journal"
        ],
        "summary": "Create/Edit Manual Journal",
        "operationId": "postManualJournal",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveManualJournalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/lazada/get-document/": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Print Lazada Invoice/Label",
        "operationId": "printLazadaInvoiceLabel",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "style": "array",
            "description": "List Sales Order ID",
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "document_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "shippingLabel",
                "invoice"
              ]
            },
            "description": "Type:\n  * `shippingLabel` - for Print Label\n  * `invoice` - for Print Invoice\n"
          },
          {
            "name": "store_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Store ID"
          },
          {
            "name": "title",
            "in": "query",
            "description": "Title",
            "schema": {
              "type": "string",
              "example": "Shipping Label Lazada"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response as HTML"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/locations/": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Get All Locations",
        "description": "This API is used to show all locations that the user has/saved.\nThe saved location can be used to store inventory or become a shipping address.\n",
        "operationId": "getLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Location Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getLocationsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Create/Edit Location",
        "description": "This API is used to create/edit location (warehouse).\n",
        "operationId": "postLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveLocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Location"
        ],
        "summary": "Delete Location",
        "operationId": "deleteLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/deleteNumberRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{id}": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Get Location",
        "operationId": "getLocationsId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Location ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getLocationResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/locations/pos": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Get All Locations that have POS Outlets",
        "operationId": "getLocationsPos",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "$ref": "#/components/parameters/q"
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getLocationsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/locations/store/": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Get Location Store Mapping",
        "operationId": "getLocationsStore",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "$ref": "#/components/parameters/q"
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getLocationStoresResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login",
        "description": "Login API is used to get Token. And the Token is to used to call other API.",
        "operationId": "postLogin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginResponse"
                }
              }
            }
          },
          "500": {
            "description": "Invalid Username or Password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginError"
                }
              }
            }
          }
        }
      }
    },
    "/marketplace/store/": {
      "get": {
        "tags": [
          "Channels"
        ],
        "summary": "Get All Stores",
        "operationId": "getMarketplaceStore",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAllStoresResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/": {
      "delete": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Delete Purchase Return",
        "operationId": "deletePurchase",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/deleteStringRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/bills/": {
      "get": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Get All Bills",
        "operationId": "getPurchaseBills",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Contact Name/Primary Contact/Phone]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getBillsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Create/Edit Bill",
        "operationId": "postPurchaseBills",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveBillRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "Object ID",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Delete Bill",
        "operationId": "deletePurchaseBills",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/deleteNumberRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/bills/{id}": {
      "get": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Get Bill",
        "operationId": "getPurchaseBillsId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Bill ID",
            "example": 3,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getBillResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/bills/overdue/": {
      "get": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Get All 'Due' Bills",
        "operationId": "getPurchaseBillsOverdue",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Contact Name/Primary Contact/Phone]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getBillsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/bills/unpaid/": {
      "get": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Get All 'Outstanding' Bills",
        "operationId": "getPurchaseBillsUnpaid",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Contact Name/Primary Contact/Phone]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getBillsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/orders/": {
      "get": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Get All Purchase Orders",
        "operationId": "getPurchaseOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Purchase Order Number/Supplier Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getPurchaseOrdersResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Create/Edit Purchase Order",
        "description": "This API is used to create Purchase Order to stock up on supplies.\n",
        "operationId": "postPurchaseOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/savePurchaseOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Delete Purchase Order",
        "operationId": "deletePurchaseOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/deleteNumberRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/orders/{id}": {
      "get": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Get Purchase Order",
        "operationId": "getPurchaseOrdersId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Purchase Order ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getPurchaseOrderResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/payments/": {
      "get": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Get All Bill Payments",
        "operationId": "getPurchasePayments",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Purchase Order Number/Supplier Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getPurchaseOrdersResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Create/Edit Bill Payment",
        "operationId": "postPurchasePayments",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/savePurchasePayment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Delete Bill Payment",
        "operationId": "deletePurchasePayments",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/deleteNumberRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/payments/{id}": {
      "get": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Get Bill Payment",
        "operationId": "getPurchasePaymentsId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Payment ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getPurchasePaymentResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/purchase-returns/": {
      "get": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Get All Purchase Returns",
        "operationId": "getPurchasePurchasereturns",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Purchase Return Number/Supplier Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getPurchaseReturnsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Create/Edit Purchase Return",
        "operationId": "postPurchasePurchasereturns",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/savePurchaseReturnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/purchase-returns/{id}": {
      "get": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Get Purchase Return",
        "operationId": "getPurchasePurchasereturnsId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Return ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getPurchaseReturnResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/purchase-returns/unpaid/": {
      "get": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Get All 'Outstanding' Purchase Returns",
        "operationId": "getPurchasePurchasereturnsUnpaid",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Purchase Return Number/Supplier Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getPurchaseReturnsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/return-settlements/": {
      "delete": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Delete Purchase Return Settlement",
        "operationId": "deletePurchaseReturnsettlements",
        "requestBody": {
          "$ref": "#/components/requestBodies/deleteStringRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/return-settlements/bills/": {
      "get": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Get All Purchase Return Settlement Bills",
        "operationId": "getPurchaseReturnsettlementsBills",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Purchase Order Number/Supplier Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getPurchaseReturnSettlementBillsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Create/Edit Purchase Return Settlement Bill",
        "operationId": "postPurchaseReturnsettlementsBills",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveReturnSettlementBillRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/return-settlements/bills/{id}": {
      "get": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Get Purchase Return Settlement Bill",
        "operationId": "getPurchaseReturnsettlementsBillsId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Purchase Return Settlement ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getPurchaseReturnSettlementBillResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/return-settlements/refunds/": {
      "get": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Get All Purchase Return Settlement Refund",
        "operationId": "getPurchaseReturnsettlementsRefunds",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Purchase Return Number/Supplier Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getPurchaseReturnSettlementBillsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Create/Edit Purchase Return Settlement Refund",
        "operationId": "postPurchaseReturnsettlementsRefunds",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/savePurchaseReturnSettlementRefundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/purchase/return-settlements/refunds/{id}": {
      "get": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Get Purchase Return Settlement Refund",
        "operationId": "getPurchaseReturnsettlementsRefundsId",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/reports/lable/print/": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Print Shipping Label",
        "description": "This API returns the URL shipping lable in inside object or the HTML for Lazada. <br>\n**This only can use for one Id since Lazada returns the HTML by itself.**\n",
        "operationId": "reportShippingLabelPrint",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "style": "array",
            "description": "Sales Order ID <br> Example: [255200]",
            "schema": {
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportShippingLabel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/reports/shipping-label/": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Print Shipping Label",
        "deprecated": true,
        "operationId": "reportShippingLabel",
        "description": "This endpoint is deprecated, Please use <a href=\"#operation/reportShippingLabelPrint\">New Endpoint</a>",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "ids[]",
            "in": "query",
            "required": false,
            "style": "array",
            "description": "List Order ID",
            "schema": {
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportShippingLabel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All Sales",
        "operationId": "getSales",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sale Number/Customer Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getInvoicesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sales"
        ],
        "summary": "Delete Sales Return/Invoice",
        "operationId": "deleteSales",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/deleteStringRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/invoices/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All Invoices",
        "operationId": "getSalesInvoices",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Invoice Number/Customer Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getInvoicesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Create/Edit Invoice",
        "operationId": "postSalesInvoices",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveInvoiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/invoices/{id}": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get Invoice",
        "operationId": "getSalesInvoicesId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Invoice ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getInvoiceResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/invoices/overdue/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All 'Due' Invoices",
        "operationId": "getSalesInvoicesOverdue",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Order Number/Customer Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getInvoicesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/invoices/summary/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All Invoices Based on Store",
        "operationId": "getSalesInvoicesSummary",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/dateFrom"
          },
          {
            "$ref": "#/components/parameters/dateTo"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getInvoicesSummaryResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/invoices/unpaid/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All 'Outstanding' Invoices",
        "operationId": "getSalesInvoicesUnpaid",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Order Number/Customer Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getInvoicesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/orders/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All Sales Orders",
        "description": "This API is used to get all Orders from Market Place that has been integrated to your Jubelio account.\n",
        "operationId": "getSalesOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Order Number/Customer Name/Channel Name/Item Code/Item Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          },
          {
            "$ref": "#/components/parameters/lastModifiedSince"
          },
          {
            "name": "invoiceCreatedSince",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Invoice Created Since",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "isInvoiced",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Is invoice printed",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSalesOrdersResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Create/Edit Sales Order",
        "description": "This API is used to create order based on source that has been integrated to your Jubelio account.<br>\nFor Sales Order Calculation: <a href=\"https://drive.google.com/file/d/1SrR_rdCURfOsXs-FOJDwM_jUnsdix3UW/view?usp=sharing\" target=\"_blank\">Here</a>\n",
        "operationId": "postSalesOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveSalesOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveID"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sales"
        ],
        "summary": "Delete Sales Order",
        "operationId": "deleteSalesOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/deleteNumberRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/orders/{id}": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get Sales Order",
        "operationId": "getSalesOrdersId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Purchase Order ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSalesOrderResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/orders/cancel/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All 'Cancelled' Sales Orders",
        "operationId": "getSalesOrdersCancel",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Order Number/Customer Name/Channel Name/Item Code/Item Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSalesOrdersResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/orders/completed/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All 'Completed' Sales Orders",
        "operationId": "getSalesOrdersCompleted",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Order Number/Customer Name/Channel Name/Item Code/Item Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSalesOrdersResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/orders/delete-canceled": {
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Detele Cancelled items",
        "operationId": "postSalesOrdersDeleteCanceled",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveDeleteCanceledRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ok"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/orders/failed/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get 'Failed' Sales Orders",
        "operationId": "getSalesOrdersFailed",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Order Number/Customer Name/Channel Name/Item Code/Item Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSalesOrdersResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/orders/mark-as-complete": {
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Mark Sales Order as Complete",
        "operationId": "postSalesOrdersMarkascomplete",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/markCompleteRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ok"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/orders/ready-to-pick/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All 'Ready to Process' Sales Orders",
        "operationId": "getSalesOrdersReadytopick",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Order Number/Customer Name/Channel Name/Item Code/Item Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getPicklistResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/orders/returned-list/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get 'Returned' Sales Orders",
        "operationId": "getSalesOrdersReturned",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Order Number/Customer Name/Channel Name/Item Code/Item Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSalesOrdersReturnedResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/orders/save-airwaybill/": {
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Update Sales Order AWB",
        "operationId": "saveAirwayBill",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveAirwayBillRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ok"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/orders/save-received-date": {
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Update Sales Order Received Date",
        "operationId": "updateReceivedDateSalesOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveReceivedDateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ok"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/orders/set-as-paid": {
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Set Sales Order as Paid",
        "operationId": "setAsPaid",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/salesorderIdsRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ok"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/packlists/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All Packlist",
        "operationId": "getSalesPacklists",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Order Number/Customer Name/Channel Name/Item Code/Item Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getPacklistsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/packlists/{id}": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get Packlist",
        "operationId": "getSalesPacklistsId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Sales Order Detail ID",
            "example": 7,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getPacklistResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/packlists/create-invoice-payment": {
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Convert Sales Order to Invoice with Payment",
        "operationId": "createInvoicePayment",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createInvoiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createInvoiceResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/packlists/create-invoice": {
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Convert Sales Order to Invoice",
        "operationId": "createInvoice",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createInvoiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createInvoiceResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/packlists/shipped/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get 'Shipped' Sales Orders",
        "operationId": "getSalesPacklistsShipped",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Order Number/Customer Name/Channel Name/Item Code/Item Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getShippedOrdersResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/payments/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All Invoice Payments",
        "operationId": "getSalesPayments",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Order Number/Customer Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSalesPaymentsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Create/Edit Invoice Payment",
        "operationId": "postSalesPayments",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveSalesPaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sales"
        ],
        "summary": "Delete Invoice Payment",
        "operationId": "deleteSalesPayments",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/deleteNumberRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/payments/{id}": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get Invoice Payment",
        "operationId": "getSalesPaymentsId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Purchase Payment ID",
            "example": 17,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSalesPaymentResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/picklists/": {
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Create/Edit PickList",
        "operationId": "postPicklist",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/savePicklistRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/savePicklistResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/picklists/{id}": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get Picklist",
        "operationId": "getPicklist",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Picklist ID",
            "example": 7,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getPickResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/picklists/confirm-pick/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All Picklist",
        "operationId": "getSalesPicklistsConfirmpick",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Order Number/Customer Name/Channel Name/Item Code/Item Name]",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getConfirmPicksResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/picklists/items-to-pick/": {
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Get List Item to Pick",
        "operationId": "getItemsToPick",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/salesorderIdsRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getItemsToPickResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/request-awb-order/": {
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Request AWB Order",
        "operationId": "requestAwbOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "salesorder_id": {
                    "type": "numner",
                    "description": "Sales Order Id",
                    "example": 292
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/requestAwbOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/requestAwbOrderError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/return-settlements/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All Sales Return Settlements",
        "operationId": "getSalesReturnsettlements",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Order Number/Customer Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSalesReturnInvoicesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sales"
        ],
        "summary": "Delete Sales Return Settlement",
        "operationId": "deleteSalesReturnsettlements",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/deleteStringRequest"
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/return-settlements/invoices/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All Sales Return Settlement Invoice",
        "operationId": "getSalesReturnsettlementsInvoices",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Order Number/Customer Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSalesReturnInvoicesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Create/Edit Sales Return Settlement Invoice",
        "operationId": "postSalesReturnsettlementsInvoices",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveSalesReturnInvoiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/return-settlements/invoices/{id}": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get Sales Return Settlement Invoice",
        "operationId": "getSalesReturnsettlementsInvoicesId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Settlement ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSalesReturnInvoiceResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/return-settlements/refunds/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All Sales Return Settlement Refund",
        "operationId": "getSalesReturnsettlementsRefunds",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Order Number/Customer Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ok"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Create/Edit Sales Return Settlement Refund",
        "operationId": "postSalesReturnsettlementsRefunds",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveSalesReturnRefundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/return-settlements/refunds/{id}": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get Sales Return Settlement Refund",
        "operationId": "getSalesReturnsettlementsRefundsId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Refund ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ok"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/returns/items/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All Item Returns",
        "operationId": "getItemReturns",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Order Number/Customer Name/Channel/Status/SKU]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getReturnsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/returns/items/rejected/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get 'Rejected - Returned' Sales Orders",
        "operationId": "getRejectedItemReturns",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Order Number/Customer Name/Channel/Status/SKU]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getRejectedReturnsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/returns/items/resolved/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get 'Resolved/Approved - Returned' Sales Orders",
        "operationId": "getApprovedItemReturns",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Order Number/Customer Name/Channel Name/Item Code/Item Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getApprovedReturnsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/sales-returns/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All Sales Returns",
        "operationId": "getSalesSalesreturns",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Order Number/Customer Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSalesReturnsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Create/Edit Sales Return",
        "operationId": "postSalesSalesreturns",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveSalesReturnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/saveOK"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/sales-returns/{id}": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get Sales Return",
        "operationId": "getSalesSalesreturnsId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Sales Return ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSalesReturnResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/sales-returns/unpaid/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All 'Outstanding' Sales Returns",
        "operationId": "getSalesSalesreturnsUnpaid",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Order Number/Customer Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSalesReturnsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/settlements/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All Sales Settlements",
        "operationId": "getSalesSettlements",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Sales Order Number/Customer Name]",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/createdSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSalesSettlementsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/settlements/{id}": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get Sales Settlement",
        "operationId": "getSalesSettlement",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Contact ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getSalesSettlementResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/shipments/orders/": {
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Shipment Orders",
        "operationId": "shipmentOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "description": "List orders ids",
                    "items": {
                      "type": "Number",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shipmentsOrdersResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/sales/unfullfilled/": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get All Packlist",
        "operationId": "getSalesUnfullfilled",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 1,
              "type": "number",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 1,
              "type": "number",
              "format": "int32"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "csv",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdSince",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/shopee/logistics": {
      "get": {
        "tags": [
          "Product Listing"
        ],
        "summary": "Get Shopee Logistics",
        "description": "For shopee, we need to add the logistics before uploading product to the MP. <br>\nPick at least 1 logistic based on the response from this API.\n",
        "operationId": "getShopeeLogistics",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "store_id",
            "in": "query",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Store ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getShopeeLogisticResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/store-locations/": {
      "get": {
        "tags": [
          "System Setting"
        ],
        "summary": "Store Locations",
        "operationId": "storeLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/storeLocationsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/systemsetting/account-mapping": {
      "get": {
        "tags": [
          "System Setting"
        ],
        "summary": "Account Mapping",
        "operationId": "accountMappingSetting",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/systemsettingAccountMappingResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/systemsetting/webhook": {
      "post": {
        "tags": [
          "System Setting"
        ],
        "summary": "Create/Edit Webhook",
        "operationId": "postWebhook",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/saveWebhookRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ok"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/taxes/": {
      "get": {
        "tags": [
          "System Setting"
        ],
        "summary": "Taxes",
        "operationId": "taxes",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/systemsettingTaxesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/tokopedia/showcases": {
      "get": {
        "tags": [
          "Product Listing"
        ],
        "summary": "Get Tokopedia Showcases",
        "operationId": "getTokopediaShowcases",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "name": "store_id",
            "in": "query",
            "required": true,
            "style": "simple",
            "explode": false,
            "description": "Store ID",
            "example": 1,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getTokopediaShowcasesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/variations": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get All Variations",
        "operationId": "getAllVariations",
        "parameters": [
          {
            "$ref": "#/components/parameters/authorization"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/sortDirection"
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/csv"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "description": "Filter Query [Contact Name/Primary Contact/Phone]",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getVariations"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/invoice": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "New Invoice",
        "operationId": "getInvoicekWebhook",
        "description": "This Webhook will be called when Invoice created or updated from Application\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhookInvoice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ok"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/price": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Update Price",
        "operationId": "getPriceWebhook",
        "description": "This Webhook will be called when there is a price change from the application.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhookPrice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ok"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/product": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "New Product",
        "operationId": "getProductWebhook",
        "description": "This Webhook will be called when Product created or updated from Application.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhookProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ok"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/purchaseorder": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "New Purchase Order",
        "operationId": "getPurchaseOrderWebhook",
        "description": "This Webhook will be called when a new Purchase Order is created from Application\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhookPurchaseOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ok"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/salesorder": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Update Sales Order",
        "operationId": "getSalesOrderWebhook",
        "description": "This Webhook will be called when there are additions or changes to orders such as 'Created' to 'In Progress'\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhookSalesOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ok"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/salesreturn": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "New Sales Return",
        "operationId": "getSalesReturnWebhook",
        "description": "This Webhook will be called when a new Sales Return is created from Application.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhookSalesReturn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ok"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/stock": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Update Stock",
        "operationId": "getStockWebhook",
        "description": "This Webhook will be called when there is a stock change that can occur when there are orders, stock transfers, returns, etc.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhookStock"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ok"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/stocktransfer": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "New Stock Transfer",
        "operationId": "getStockTransferWebhook",
        "description": "This Webhook will be called when a new Stock Transfer is created from Application\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhookStockTransfer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ok"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "adjusmentRequest": {
        "required": [
          "item_adj_id",
          "is_opening_balance",
          "item_adj_no",
          "location_id",
          "transaction_date",
          "is_opening_balance",
          "items"
        ],
        "type": "object",
        "properties": {
          "item_adj_id": {
            "type": "number",
            "description": "Adjustment ID <br>\nTo create new adjustment => \"item_adj_id\": 0 <br>\nTo edit adjustment => \"item_adj_id\": {item_adj_id}\n",
            "example": 0
          },
          "item_adj_no": {
            "type": "string",
            "description": "Adjustment Number <br>\nTo create new adjustment => \"item_adj_no\": \"[auto]\" <br>\nTo edit adjustment => \"item_adj_no\": {item_adj_no}\n",
            "example": "[auto]"
          },
          "transaction_date": {
            "type": "string",
            "format": "date-time",
            "description": "Adjustment Transaction Date",
            "example": "2018-10-20T17:00:00.000Z"
          },
          "note": {
            "type": "string",
            "description": "Adjustment Note",
            "example": "Saldo Awal Persediaan"
          },
          "location_id": {
            "type": "number",
            "description": "Adjustment Location",
            "example": -1
          },
          "is_opening_balance": {
            "type": "boolean",
            "description": "Is Adjustment an Opening Balance",
            "example": false
          },
          "items": {
            "$ref": "#/components/schemas/items"
          }
        }
      },
      "adjustmentAmountRequest": {
        "required": [
          "item_adj_id",
          "is_opening_balance",
          "item_adj_no",
          "transaction_date",
          "items"
        ],
        "type": "object",
        "properties": {
          "adjustment_type": {
            "type": "number",
            "description": "Adjustment Type for Amount is 1",
            "example": 1
          },
          "item_adj_id": {
            "type": "number",
            "description": "Adjustment ID <br>\nTo create new adjustment => \"item_adj_id\": 0 <br>\nTo edit adjustment => \"item_adj_id\": {item_adj_id}\n",
            "example": 0
          },
          "item_adj_no": {
            "type": "string",
            "description": "Adjustment Number <br>\nTo create new adjustment => \"item_adj_no\": \"[auto]\" <br>\nTo edit adjustment => \"item_adj_no\": {item_adj_no}\n",
            "example": "[auto]"
          },
          "transaction_date": {
            "type": "string",
            "format": "date-time",
            "description": "Adjustment Transaction Date",
            "example": "2018-10-20T17:00:00.000Z"
          },
          "note": {
            "type": "string",
            "description": "Adjustment Note",
            "example": "Saldo Awal Persediaan"
          },
          "items": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "item_adj_detail_id": {
                  "type": "number",
                  "description": "Adjustment Detail ID [0 = create]",
                  "example": 0
                },
                "item_id": {
                  "type": "number",
                  "description": "Item Adjustment ID",
                  "example": 1
                },
                "cost": {
                  "type": "string",
                  "description": "Item Cost",
                  "example": 100
                },
                "amount": {
                  "type": "number",
                  "description": "Item Cost Amount",
                  "example": 100000
                },
                "account_id": {
                  "type": "number",
                  "description": "User Account that do the Adjustment [default is 75]",
                  "example": 75
                },
                "description": {
                  "type": "string",
                  "description": "Item Description",
                  "example": "Item Example Description"
                },
                "unit": {
                  "type": "string",
                  "description": "Unit Name",
                  "example": "Buah"
                }
              }
            }
          }
        }
      },
      "attributes": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Model_13"
        }
      },
      "bundles": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Model_11"
        }
      },
      "channel_info": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "channels": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Model_14"
        }
      },
      "createInvoiceRequest": {
        "required": [
          "salesorder_id"
        ],
        "type": "object",
        "properties": {
          "salesorder_id": {
            "type": "number",
            "description": "Sales Order ID",
            "example": 1
          }
        }
      },
      "createInvoiceResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Delete Status",
            "example": "ok"
          },
          "id": {
            "type": "number",
            "description": "Sales Invoice Number",
            "example": 8
          }
        }
      },
      "customerStatusRequest": {
        "type": "object",
        "properties": {
          "is_loyalty_member": {
            "type": "boolean",
            "description": "Wether Contact a Loyalty Member",
            "default": false
          }
        }
      },
      "deleteOK": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Delete Status",
            "example": "ok"
          }
        }
      },
      "details": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Model_27"
        }
      },
      "fulfillRedeemRequest": {
        "required": [
          "redeem_id"
        ],
        "type": "object",
        "properties": {
          "redeem_id": {
            "type": "number",
            "description": "Redeem Request ID",
            "example": 2
          },
          "status": {
            "type": "string",
            "description": "Redeem Request Status",
            "example": "requested"
          },
          "note": {
            "type": "string",
            "description": "Reedeem Request Note",
            "example": "Notes"
          }
        }
      },
      "getAccountLookupResponse": {
        "type": "object",
        "description": "Adjustment Items",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "account_code": {
                  "type": "string",
                  "description": "Account Code",
                  "example": "1-1000"
                },
                "account_id": {
                  "type": "number",
                  "description": "Account Id",
                  "example": 1
                },
                "account_name": {
                  "type": "string",
                  "description": "Account Name",
                  "example": "1-1000 - Kas"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getAllStockAdjustmentsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "adjustment_type": {
              "type": "string",
              "description": "Adjustment Type"
            },
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "item_adj_id": {
                  "type": "number",
                  "description": "Adjustment ID",
                  "example": -1
                },
                "item_adj_no": {
                  "type": "string",
                  "description": "Adjustment Number",
                  "example": "_ADJ-BB_"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Adjustment Transaction Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "created_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Adjustment Created Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "note": {
                  "type": "string",
                  "description": "Adjustment Note",
                  "example": "Saldo Awal Persediaan"
                },
                "is_opening_balance": {
                  "type": "boolean",
                  "description": "Is Adjustment an Opening Balance",
                  "example": true
                },
                "location_id": {
                  "type": "number",
                  "description": "Adjustment Location",
                  "example": -1
                },
                "created_by": {
                  "type": "string",
                  "description": "User that create Adjustment",
                  "example": "Saldo Awal Persediaan"
                },
                "location_name": {
                  "type": "string",
                  "description": "Adjustment Location Name",
                  "example": "Pusat"
                },
                "adjustment_type": {
                  "type": "string",
                  "description": "Adjustment type",
                  "example": null
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getAllStoresResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "channel_id": {
                  "type": "number",
                  "description": "Channel ID",
                  "example": 1
                },
                "store_id": {
                  "type": "number",
                  "description": "Store ID",
                  "example": 1
                },
                "store_name": {
                  "type": "string",
                  "description": "Store Name",
                  "example": "Jubelio"
                },
                "extra_info": {
                  "type": "object",
                  "description": "Store Extra Info"
                },
                "channel_user_id": {
                  "type": "string",
                  "description": "Channel User ID",
                  "example": "ck_f32377ac8c68fa9081"
                },
                "channel_user_secret": {
                  "type": "boolean",
                  "description": "Channel User Secret",
                  "example": "cs_751447bb22ad60a278dfb5a3"
                }
              }
            }
          }
        }
      },
      "getApprovedReturnsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "salesorder_id": {
                  "type": "number",
                  "description": "Sales Order ID",
                  "example": 39737
                },
                "salesorder_detail_id": {
                  "type": "number",
                  "description": "Sales Order Detail ID",
                  "example": 2991
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 4671
                },
                "qty_in_base": {
                  "type": "number",
                  "description": "Item Quantity",
                  "example": 1
                },
                "item_code": {
                  "type": "string",
                  "description": "Item Code",
                  "example": "SK-67565478"
                },
                "item_name": {
                  "type": "string",
                  "description": "Item Name",
                  "example": "VASELINE LOTION HIBA LIMITED EDITION JEPANG 200ML"
                },
                "reject_return_reason": {
                  "type": "string",
                  "description": "Reject Return Reason",
                  "example": "Ada sobekan"
                },
                "is_return_resolved": {
                  "type": "boolean",
                  "description": "Wether Return Resolved",
                  "example": true
                },
                "customer_name": {
                  "type": "string",
                  "description": "Contact Name (Customer)",
                  "example": "Andy"
                },
                "salesorder_no": {
                  "type": "string",
                  "description": "Sales order Number",
                  "example": "ZL-2418274"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "source_name": {
                  "type": "string",
                  "description": "Zalora",
                  "example": false
                },
                "store": {
                  "type": "string",
                  "description": "Store",
                  "example": "info@dodle.co.id"
                },
                "store_name": {
                  "type": "string",
                  "description": "Store Name",
                  "example": "Zalora - info@dodle.co.id"
                },
                "payment_method": {
                  "type": "string",
                  "description": "Payment method",
                  "example": null
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getAttributeValuesResponse": {
        "type": "array",
        "description": "List Items that exists in System",
        "items": {
          "type": "object",
          "properties": {
            "attribute_id": {
              "type": "number",
              "description": "Attribute Id",
              "example": 2637
            },
            "last_modified": {
              "type": "string",
              "format": "date",
              "description": "Last modified",
              "example": "2020-10-20T17:00:00.000Z"
            },
            "value_id": {
              "type": "number",
              "description": "Value Id",
              "example": 34233
            },
            "value_name": {
              "type": "string",
              "description": "Value Name",
              "example": "1 Month"
            }
          }
        }
      },
      "getBillResponse": {
        "type": "object",
        "properties": {
          "bill_id": {
            "type": "number",
            "description": "Bill ID",
            "example": 0
          },
          "bill_no": {
            "type": "string",
            "description": "Bill Number",
            "example": "[auto]"
          },
          "contact_id": {
            "type": "number",
            "description": "Contact ID",
            "example": 5
          },
          "purchaseorder_id": {
            "type": "number",
            "description": "Purchase Order ID",
            "example": 2
          },
          "purchaseorder_no": {
            "type": "number",
            "description": "Purchase Order Number",
            "example": "PO-000000004"
          },
          "supplier_name": {
            "type": "string",
            "description": "Supplier Name",
            "example": "PT.ANYWAY"
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2018-11-19T19:37:56.176Z"
          },
          "created_date": {
            "type": "string",
            "format": "date",
            "description": "Created Date",
            "example": "2018-11-19T19:37:56.176Z"
          },
          "due_date": {
            "type": "string",
            "format": "date",
            "description": "Due Date",
            "example": "2018-11-19T19:37:56.176Z"
          },
          "is_tax_included": {
            "type": "boolean",
            "description": "Wether Bill include Tax",
            "example": false
          },
          "note": {
            "type": "string",
            "description": "Bill Note",
            "example": "Penerimaan Barang yang sudah dipesan"
          },
          "sub_total": {
            "type": "number",
            "description": "Bill Sub Total",
            "example": 20000
          },
          "total_disc": {
            "type": "number",
            "description": "Total Discount",
            "example": 0
          },
          "total_tax": {
            "type": "number",
            "description": "Total Tax",
            "example": 0
          },
          "grand_total": {
            "type": "number",
            "description": "Bill Grand Total",
            "example": 20000
          },
          "payment_acct_id": {
            "type": "number",
            "description": "Payment Account ID",
            "example": false
          },
          "payment": {
            "type": "number",
            "description": "Payment",
            "example": 0
          },
          "ref_no": {
            "type": "string",
            "description": "Reference No",
            "example": 123654
          },
          "location_id": {
            "type": "number",
            "description": "Location ID",
            "example": -1
          },
          "location_name": {
            "type": "number",
            "description": "Location Name",
            "example": "Pusat"
          },
          "is_opening_balance": {
            "type": "boolean",
            "description": "Wether Bill for Opening Balance",
            "example": false
          },
          "last_modified": {
            "type": "date",
            "description": "Last modified",
            "example": null
          },
          "items": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bill_detail_id": {
                  "type": "number",
                  "description": "Bill Detail ID",
                  "example": 0
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 7
                },
                "item_code": {
                  "type": "number",
                  "description": "Item Code",
                  "example": 10000631
                },
                "item_name": {
                  "type": "number",
                  "description": "Item Name",
                  "example": "Aqua 1,5 L"
                },
                "description": {
                  "type": "string",
                  "description": "Item Description",
                  "example": "Aqua 1,5 L"
                },
                "invt_acct_id": {
                  "type": "number",
                  "description": "Inventory Account ID",
                  "example": 4
                },
                "tax_id": {
                  "type": "number",
                  "description": "Tax ID",
                  "example": -1
                },
                "price": {
                  "type": "number",
                  "description": "Item Price",
                  "example": 4000
                },
                "unit": {
                  "type": "string",
                  "description": "Unit Name",
                  "example": "Buah"
                },
                "qty_in_base": {
                  "type": "number",
                  "description": "Quantity that will be add",
                  "example": 5
                },
                "qty": {
                  "type": "string",
                  "description": "Item Quantity",
                  "example": 0
                },
                "uom_id": {
                  "type": "number",
                  "description": "Unit of Measure ID",
                  "example": -1
                },
                "disc": {
                  "type": "number",
                  "description": "Discount",
                  "example": 0
                },
                "disc_amount": {
                  "type": "number",
                  "description": "Total Discount Amount",
                  "example": 0
                },
                "tax_amount": {
                  "type": "number",
                  "description": "Tax Amount",
                  "example": 0
                },
                "amount": {
                  "type": "number",
                  "description": "Total Amount",
                  "example": 20000
                },
                "buy_price": {
                  "type": "string",
                  "description": "Item Buy Price",
                  "example": 750
                },
                "original_price": {
                  "type": "string",
                  "description": "Item Original Price",
                  "example": 350
                },
                "rate": {
                  "type": "string",
                  "description": "Rate",
                  "example": 0
                },
                "tax_name": {
                  "type": "string",
                  "description": "Tax Name",
                  "example": "No Tax"
                },
                "account_name": {
                  "type": "string",
                  "description": "Account Name",
                  "example": "1-1200 - Persediaan Barang"
                },
                "use_serial_number": {
                  "type": "boolean",
                  "description": "Wether use Serial Number",
                  "example": false
                },
                "is_serialnumber_printed": {
                  "type": "boolean",
                  "description": "Is Serial Number Printed",
                  "example": false
                },
                "purchaseorder_detail_id": {
                  "type": "number",
                  "description": "Purchase order detail ID",
                  "example": null
                },
                "use_batch_number": {
                  "type": "boolean",
                  "description": null,
                  "example": null
                }
              }
            }
          }
        }
      },
      "getBillsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "doc_id": {
                  "type": "number",
                  "description": "Document ID",
                  "example": 3
                },
                "doc_number": {
                  "type": "string",
                  "description": "Document Number",
                  "example": "BIL-000000001"
                },
                "contact_id": {
                  "type": "number",
                  "description": "Contact ID",
                  "example": 3
                },
                "supplier_name": {
                  "type": "string",
                  "description": "Bill Number",
                  "example": "PT.ANYWAY"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Bill Transaction Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "due_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Bill Due Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "is_opening_balance": {
                  "type": "boolean",
                  "description": "Is Bill a Opening Balance",
                  "example": false
                },
                "grand_total": {
                  "type": "string",
                  "description": "Bill Grand Total",
                  "example": 50000
                },
                "due": {
                  "type": "string",
                  "description": "Bill Due Payment",
                  "example": 0
                },
                "doc_type": {
                  "type": "string",
                  "description": "Document Type",
                  "example": "bill"
                },
                "age": {
                  "type": "number",
                  "description": "Bill Age",
                  "example": 83
                },
                "age_due": {
                  "type": "number",
                  "description": "Bill Due Age",
                  "example": 83
                },
                "serial_number": {
                  "type": "string",
                  "description": "Serial Number",
                  "example": "BSHH121848"
                },
                "purchaseorder_id": {
                  "type": "number",
                  "description": "Purchase order ID",
                  "example": null
                },
                "downpayment_amount": {
                  "type": "number",
                  "description": "Downpayment amount",
                  "example": null
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getBrandsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "brand_id": {
                  "type": "number",
                  "description": "Brand ID",
                  "example": 3
                },
                "brand_name": {
                  "type": "string",
                  "description": "Brand Name",
                  "example": "24K"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getBundlesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "item_group_id": {
                  "type": "number",
                  "description": "Item Group ID",
                  "example": 1931
                },
                "item_name": {
                  "type": "string",
                  "description": "Item Name",
                  "example": "Gelas Chopper dan Olive Oil Filippo"
                },
                "last_modified": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last Modified Time",
                  "example": "2019-01-07T07:53:35.100Z"
                },
                "item_category_id": {
                  "type": "number",
                  "description": "Item Category ID",
                  "example": 690
                },
                "variants": {
                  "type": "array",
                  "description": "List Item Variants",
                  "items": {
                    "type": "object",
                    "properties": {
                      "item_group_id": {
                        "type": "number",
                        "description": "Item Group ID",
                        "example": 1931
                      },
                      "item_id": {
                        "type": "number",
                        "description": "Item ID",
                        "example": 2976
                      },
                      "item_code": {
                        "type": "string",
                        "description": "Item Code/SKU",
                        "example": "chopper dan olive oil"
                      },
                      "end_qty": {
                        "type": "number",
                        "description": "Total Inventory on Hand",
                        "example": 10
                      },
                      "order_qty": {
                        "type": "number",
                        "description": "Total Inventory on Order",
                        "example": 0
                      },
                      "item_name": {
                        "type": "string",
                        "description": "Item Name",
                        "example": "Gelas Chopper dan Olive Oil Filippo"
                      },
                      "available_qty": {
                        "type": "number",
                        "description": "Total Available Inventory",
                        "example": 10
                      },
                      "sell_price": {
                        "type": "number",
                        "description": "Item Sell Price",
                        "example": 120000
                      },
                      "thumbnail": {
                        "type": "string",
                        "description": "Item Thumbnail",
                        "example": "https://jubelio.blob.core.windows.net/images/sng8ijwwqasgxnomjslrjw/4469a64e-8623-4a8d-9792-f777ff434e97_thumb.jpeg"
                      },
                      "tax_rate": {
                        "type": "number",
                        "description": "Item Tax Rate",
                        "example": 10
                      },
                      "store_names": {
                        "type": "array",
                        "description": "List Store Names where Item Exists",
                        "items": {
                          "type": "object",
                          "properties": {
                            "store_name": {
                              "type": "string",
                              "description": "Store Name",
                              "example": "Lazada"
                            }
                          }
                        }
                      },
                      "barcode": {
                        "type": "string",
                        "description": "Barcode",
                        "example": null
                      },
                      "is_bundle": {
                        "type": "boolean",
                        "description": "Is bundle",
                        "example": false
                      },
                      "variation_values": {
                        "type": "array",
                        "description": "Variants value",
                        "example": []
                      }
                    }
                  }
                },
                "online_status": {
                  "type": "array",
                  "description": "List Channel where Item Exists",
                  "items": {
                    "type": "object",
                    "properties": {
                      "channel_id": {
                        "type": "number",
                        "description": "Channel ID",
                        "example": 4
                      },
                      "store_id": {
                        "type": "number",
                        "description": "Store ID",
                        "example": 553
                      },
                      "store_name": {
                        "type": "string",
                        "description": "Store Name",
                        "example": "Lazada"
                      },
                      "channel_group_id": {
                        "type": "string",
                        "description": "Channel Group ID",
                        "example": 1931
                      },
                      "channel_url": {
                        "type": "number",
                        "description": "Channel URL",
                        "example": "http://www.lazada.co.id/-i402292239-s443195538.html"
                      },
                      "shop_id": {
                        "type": "number",
                        "description": "Shop ID",
                        "example": 1
                      }
                    }
                  }
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Item Thumbnail",
                  "example": "https://jubelio.blob.core.windows.net/images/sng8ijwwqasgxnomjslrjw/4469a64e-8623-4a8d-9792-f777ff434e97_thumb.jpeg"
                },
                "variations": {
                  "type": "string",
                  "description": "Variation",
                  "example": null
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getCashbankPaymentByIdResponse": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "account_id": {
                  "type": "number",
                  "description": "The account Id",
                  "example": 4
                },
                "account_name": {
                  "type": "string",
                  "description": "The account Name",
                  "example": "1-1200 - Persediaan Barang"
                },
                "credit": {
                  "type": "string",
                  "description": "The credit",
                  "example": "0.0000"
                },
                "debit": {
                  "type": "string",
                  "description": "Debit",
                  "example": "1000.0000"
                },
                "description": {
                  "type": "string",
                  "description": "The description of the journal",
                  "example": null
                },
                "journal_detail_id": {
                  "type": "number",
                  "description": "The journal detail Id",
                  "example": 21353
                }
              }
            }
          },
          "amount": {
            "type": "string",
            "description": "Amount",
            "example": "500000"
          },
          "cashbank_account_id": {
            "type": "number",
            "description": "Cashbank Account Id",
            "example": 2
          },
          "cashbank_account_name": {
            "type": "string",
            "description": "Cashbank Account Number",
            "example": "1-1001 - Bank"
          },
          "contact_id": {
            "type": "number",
            "description": "Contact Id",
            "example": 2
          },
          "contact_name": {
            "type": "string",
            "description": "Contact Name",
            "example": "PT. Name"
          },
          "note": {
            "type": "string",
            "description": "Note",
            "example": ""
          },
          "payment_id": {
            "type": "number",
            "description": "Contact Id",
            "example": 2260
          },
          "payment_no": {
            "type": "string",
            "description": "Payment Number",
            "example": "REC-000000100"
          },
          "payment_type": {
            "type": "number",
            "description": "Payment Type",
            "example": 4
          },
          "transaction_date": {
            "type": "string",
            "description": "The transaction date",
            "example": "2020-07-24T07:33:46.357Z"
          }
        }
      },
      "getCashbankPaymentsResponse": {
        "type": "object",
        "description": "Receives Data",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "account_id": {
                  "type": "number",
                  "description": "Account Id",
                  "example": 1
                },
                "account_name": {
                  "type": "string",
                  "description": "Account Name",
                  "example": "1-1000 - Kas"
                },
                "amount": {
                  "type": "string",
                  "description": "Amount",
                  "example": "500000"
                },
                "contact_id": {
                  "type": "number",
                  "description": "Contact Id",
                  "example": 1
                },
                "contact_name": {
                  "type": "string",
                  "description": "Contact Name",
                  "example": "PT. Name"
                },
                "doc_type": {
                  "type": "string",
                  "description": "Doc Type",
                  "example": "Pembayaran"
                },
                "payment_id": {
                  "type": "number",
                  "description": "Contact Id",
                  "example": 2260
                },
                "payment_no": {
                  "type": "string",
                  "description": "Payment Number",
                  "example": "REC-000000100"
                },
                "transaction_date": {
                  "type": "string",
                  "description": "The transaction date",
                  "example": "2021-02-22T09:00:21.964Z"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getCashbankReceiveByIdResponse": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "account_id": {
                  "type": "number",
                  "description": "The account Id",
                  "example": 4
                },
                "account_name": {
                  "type": "string",
                  "description": "The account Name",
                  "example": "1-1200 - Persediaan Barang"
                },
                "credit": {
                  "type": "string",
                  "description": "The credit",
                  "example": "0.0000"
                },
                "debit": {
                  "type": "string",
                  "description": "Debit",
                  "example": "1000.0000"
                },
                "description": {
                  "type": "string",
                  "description": "The description of the journal",
                  "example": null
                },
                "journal_detail_id": {
                  "type": "number",
                  "description": "The journal detail Id",
                  "example": 21353
                }
              }
            }
          },
          "amount": {
            "type": "string",
            "description": "Amount",
            "example": "500000"
          },
          "cashbank_account_id": {
            "type": "number",
            "description": "Cashbank Account Id",
            "example": 2
          },
          "cashbank_account_name": {
            "type": "string",
            "description": "Cashbank Account Number",
            "example": "1-1001 - Bank"
          },
          "contact_id": {
            "type": "number",
            "description": "Contact Id",
            "example": 2
          },
          "contact_name": {
            "type": "string",
            "description": "Contact Name",
            "example": "PT. Name"
          },
          "note": {
            "type": "string",
            "description": "Note",
            "example": ""
          },
          "payment_id": {
            "type": "number",
            "description": "Contact Id",
            "example": 2260
          },
          "payment_no": {
            "type": "string",
            "description": "Payment Number",
            "example": "REC-000000100"
          },
          "payment_type": {
            "type": "number",
            "description": "Payment Type",
            "example": 4
          },
          "transaction_date": {
            "type": "string",
            "description": "The transaction date",
            "example": "2020-07-24T07:33:46.357Z"
          }
        }
      },
      "getCashbankReceivesResponse": {
        "type": "object",
        "description": "Receives Data",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "account_id": {
                  "type": "number",
                  "description": "Account Id",
                  "example": 1
                },
                "account_name": {
                  "type": "string",
                  "description": "Account Name",
                  "example": "1-1000 - Kas"
                },
                "amount": {
                  "type": "string",
                  "description": "Amount",
                  "example": "500000"
                },
                "contact_id": {
                  "type": "number",
                  "description": "Contact Id",
                  "example": 1
                },
                "contact_name": {
                  "type": "string",
                  "description": "Contact Name",
                  "example": "PT. Name"
                },
                "doc_type": {
                  "type": "string",
                  "description": "Doc Type",
                  "example": "Penerimaan"
                },
                "payment_id": {
                  "type": "number",
                  "description": "Contact Id",
                  "example": 2260
                },
                "payment_no": {
                  "type": "string",
                  "description": "Payment Number",
                  "example": "REC-000000100"
                },
                "transaction_date": {
                  "type": "string",
                  "description": "The transaction date",
                  "example": "2021-02-22T09:00:21.964Z"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getCategoriesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "category_id": {
                  "type": "number",
                  "description": "Category ID",
                  "example": 1
                },
                "category_name": {
                  "type": "string",
                  "description": "Category Name",
                  "example": "Komputer"
                },
                "parent_id": {
                  "type": "number",
                  "description": "Category Parent ID",
                  "example": 0
                },
                "has_children": {
                  "type": "boolean",
                  "description": "Wether Category has Childern",
                  "example": true
                }
              }
            }
          }
        }
      },
      "getCategoryAttributesResponse": {
        "type": "array",
        "description": "List Items that exists in System",
        "items": {
          "type": "object",
          "properties": {
            "attribute_id": {
              "type": "number",
              "description": "Attribute Id",
              "example": 1
            },
            "attribute_name": {
              "type": "string",
              "description": "Attribute Name",
              "example": "Periode Garansi"
            }
          }
        }
      },
      "getCategoryMappingResponse": {
        "type": "array",
        "description": "List Items that exists in System",
        "items": {
          "type": "object",
          "properties": {
            "channel_id": {
              "type": "number",
              "description": "Channel ID",
              "example": 1707
            },
            "channel_category_id": {
              "type": "string",
              "description": "Channel Category ID",
              "example": 14730
            }
          }
        }
      },
      "getCategoryResponse": {
        "type": "object",
        "properties": {
          "category_id": {
            "type": "number",
            "description": "Category ID",
            "example": 1
          },
          "category_name": {
            "type": "string",
            "description": "Category Name",
            "example": "Komputer"
          },
          "parent_id": {
            "type": "number",
            "description": "Category Parent ID",
            "example": 0
          },
          "has_children": {
            "type": "boolean",
            "description": "Wether Category has Childern",
            "example": true
          }
        }
      },
      "getCategoryVariantsResponse": {
        "type": "array",
        "description": "List Items that exists in System",
        "items": {
          "type": "object",
          "properties": {
            "variant_name": {
              "type": "string",
              "description": "Ukuran",
              "example": 4
            },
            "variant_values": {
              "type": "array",
              "description": "Variant Values"
            }
          }
        }
      },
      "getChannelAttributesResponse": {
        "type": "array",
        "description": "List Items that exists in System",
        "items": {
          "type": "object",
          "properties": {
            "channel_id": {
              "type": "number",
              "description": "Channel ID",
              "example": 4
            },
            "attribute_name": {
              "type": "string",
              "description": "Attribute Name",
              "example": "color_family"
            },
            "attribute_type": {
              "type": "string",
              "description": "Attribute Type",
              "example": "normal"
            },
            "category_id": {
              "type": "string",
              "description": "Channel Category ID",
              "example": 14730
            },
            "default_value": {
              "type": "string",
              "description": "Default Value",
              "example": null
            },
            "display_name": {
              "type": "string",
              "description": "Display Name on Web",
              "example": "Warranty Period"
            },
            "input_type": {
              "type": "string",
              "description": "Input Type Attribute",
              "example": "singleSelect"
            },
            "is_required": {
              "type": "boolean",
              "description": "Is Attribute Required",
              "example": true
            },
            "attribute_values": {
              "type": "array",
              "description": "Attribute Values"
            }
          }
        }
      },
      "getChannelCategoriesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "channel_id": {
              "type": "number",
              "description": "Channel ID",
              "example": 2
            },
            "category_id": {
              "type": "number",
              "description": "Category ID",
              "example": 10100387
            },
            "category_name": {
              "type": "string",
              "description": "Category Name",
              "example": "Audio"
            },
            "url": {
              "type": "string",
              "description": "URL",
              "example": null
            },
            "parent_id": {
              "type": "number",
              "description": "Parent ID",
              "example": 0
            },
            "variants": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "is_variant": {
                    "description": "Is Variant",
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            },
            "category_name_alt": {
              "type": "string",
              "description": "Category Name",
              "example": "Audio"
            },
            "has_children": {
              "type": "boolean",
              "description": "Has Children",
              "example": true
            }
          }
        }
      },
      "getChannelCategoryResponse": {
        "type": "array",
        "description": "List Items that exists in System",
        "items": {
          "type": "object",
          "properties": {
            "category_id": {
              "type": "string",
              "description": "Channel Category ID",
              "example": 12652
            },
            "category_name": {
              "type": "string",
              "description": "Category Name",
              "example": "Spare Parts"
            },
            "parent_id": {
              "type": "string",
              "description": "Channel Parent Category ID",
              "example": 40
            }
          }
        }
      },
      "getConfirmPicksResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "picklist_id": {
                  "type": "number",
                  "description": "Picklist ID",
                  "example": 6
                },
                "salesorder_id": {
                  "type": "number",
                  "description": "Sales Order Id",
                  "example": 7
                },
                "picklist_no": {
                  "type": "string",
                  "description": "Picklist Number",
                  "example": "PICK-000000007"
                },
                "status": {
                  "type": "string",
                  "description": "Picklist Status",
                  "example": "Dalam Proses"
                },
                "salesorder_no": {
                  "type": "string",
                  "description": "Sales Order Number",
                  "example": "LZ-2290233663"
                },
                "source": {
                  "type": "string",
                  "description": "Picklist Source",
                  "example": 4
                },
                "store_id": {
                  "type": "number",
                  "description": "Store ID",
                  "example": 101
                },
                "source_name": {
                  "type": "string",
                  "description": "Source Name",
                  "example": "Lazada"
                },
                "store_name": {
                  "type": "string",
                  "description": "Store Name",
                  "example": "Lazada"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-11-19T01:46:21.000Z"
                },
                "location_name": {
                  "type": "string",
                  "description": "Location Name",
                  "example": "Pusat"
                },
                "customer_name": {
                  "type": "string",
                  "description": "Contact Name (Customer)",
                  "example": "Pusat"
                },
                "serial_number": {
                  "type": "string",
                  "description": "Serial Number",
                  "example": "SN-00001"
                },
                "shipper": {
                  "type": "string",
                  "description": "Shipper",
                  "example": "J&T Cashless"
                },
                "due_date": {
                  "type": "number",
                  "description": "Due Date",
                  "example": 0
                },
                "b_salesorder_no": {
                  "type": "string",
                  "description": null,
                  "example": null
                },
                "shipment_type": {
                  "type": "string",
                  "description": null,
                  "example": null
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getContactCategoryResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "category_id": {
                  "type": "number",
                  "description": "Category ID",
                  "example": 2
                },
                "contact_name": {
                  "type": "string",
                  "description": "Contact Name",
                  "example": "Radit"
                },
                "category_code": {
                  "type": "string",
                  "description": "Category Code",
                  "example": "01"
                },
                "created_by": {
                  "type": "string",
                  "description": "Created By",
                  "example": "support@jubelio.com"
                },
                "updated_by": {
                  "type": "string",
                  "description": "Updated By",
                  "example": "support@jubelio.com"
                },
                "contact_type": {
                  "type": "number",
                  "description": "Contact Type",
                  "example": 4
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getContactResponse": {
        "type": "object",
        "properties": {
          "contact_id": {
            "type": "number",
            "description": "Contact ID",
            "example": 2
          },
          "contact_name": {
            "type": "string",
            "description": "Contact Name",
            "example": "Radit"
          },
          "contact_type": {
            "type": "number",
            "description": "Contact Type [0 = Customer/1 = Vendor/2 = Customer and Vendor]",
            "example": 0
          },
          "primary_contact": {
            "type": "string",
            "description": "Primary Contact Name",
            "example": "Radit"
          },
          "contact_position": {
            "type": "string",
            "description": "Contact Position",
            "example": "Developer"
          },
          "email": {
            "type": "string",
            "description": "Contact Email",
            "example": "radit.developer@gmail.com"
          },
          "phone": {
            "type": "string",
            "description": "Contact Phone Number",
            "example": "082297772419"
          },
          "mobile": {
            "type": "string",
            "description": "Contact Mobile Phone Number",
            "example": "082297772419"
          },
          "fax": {
            "type": "string",
            "description": "Contact Fax Number",
            "example": "021547281"
          },
          "npwp": {
            "type": "string",
            "description": "Contact NPWP Number",
            "example": 1234567890
          },
          "payment_term": {
            "type": "number",
            "description": "Contact Payment Term [-1 = Cash/7 = 7 Days/15 = 15 Days/30 = 30 Days]",
            "example": -1
          },
          "notes": {
            "type": "string",
            "description": "Contact Note/Description",
            "example": "Radit like to be late when doing payment"
          },
          "s_address": {
            "type": "string",
            "description": "Shipping Full Address",
            "example": "Duri Kosambi No 11"
          },
          "s_area": {
            "type": "string",
            "description": "Shipping Address Area",
            "example": "Cengkareng"
          },
          "s_city": {
            "type": "string",
            "description": "Shipping Address City",
            "example": "Jakarta Barat"
          },
          "s_province": {
            "type": "string",
            "description": "Shipping Address Province",
            "example": "DKI Jakarta"
          },
          "s_post_code": {
            "type": "string",
            "description": "Shipping Address Post Code",
            "example": 11750
          },
          "b_address": {
            "type": "string",
            "description": "Biling Full Address",
            "example": "Duri Kosambi No 11"
          },
          "b_area": {
            "type": "string",
            "description": "Biling Address Area",
            "example": "Cengkareng"
          },
          "b_city": {
            "type": "string",
            "description": "Biling Address City",
            "example": "Jakarta Barat"
          },
          "b_province": {
            "type": "string",
            "description": "Biling Address Province",
            "example": "DKI Jakarta"
          },
          "b_post_code": {
            "type": "string",
            "description": "Biling Address Post Code",
            "example": 11750
          },
          "location_id": {
            "type": "number",
            "description": "Location ID",
            "example": -1
          },
          "is_loyalty_member": {
            "type": "boolean",
            "description": "Is Contact a Loyalty Member",
            "example": -1
          },
          "b_sex": {
            "type": "string",
            "description": "Contact Gender",
            "example": -1
          },
          "b_birthday": {
            "type": "string",
            "format": "date",
            "description": "Contact Birth Date",
            "example": "2018-10-20T17:00:00.000Z"
          }
        }
      },
      "getContactsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "contact_id": {
                  "type": "number",
                  "description": "Contact ID",
                  "example": 2
                },
                "contact_name": {
                  "type": "string",
                  "description": "Contact Name",
                  "example": "Radit"
                },
                "contact_type": {
                  "type": "number",
                  "description": "Contact Type [0 = Customer/1 = Vendor/2 = Customer and Vendor]",
                  "example": 0
                },
                "primary_contact": {
                  "type": "string",
                  "description": "Primary Contact Name",
                  "example": "Radit"
                },
                "contact_position": {
                  "type": "string",
                  "description": "Contact Position",
                  "example": "Developer"
                },
                "email": {
                  "type": "string",
                  "description": "Contact Email",
                  "example": "radit.developer@gmail.com"
                },
                "phone": {
                  "type": "string",
                  "description": "Contact Phone Number",
                  "example": "082297772419"
                },
                "mobile": {
                  "type": "string",
                  "description": "Contact Mobile Phone Number",
                  "example": "082297772419"
                },
                "fax": {
                  "type": "string",
                  "description": "Contact Fax Number",
                  "example": "021547281"
                },
                "npwp": {
                  "type": "string",
                  "description": "Contact NPWP Number",
                  "example": 1234567890
                },
                "payment_term": {
                  "type": "number",
                  "description": "Contact Payment Term [-1 = Cash/7 = 7 Days/15 = 15 Days/30 = 30 Days]",
                  "example": -1
                },
                "notes": {
                  "type": "string",
                  "description": "Contact Note/Description",
                  "example": "Radit like to be late when doing payment"
                },
                "s_address": {
                  "type": "string",
                  "description": "Shipping Full Address",
                  "example": "Duri Kosambi No 11"
                },
                "s_area": {
                  "type": "string",
                  "description": "Shipping Address Area",
                  "example": "Cengkareng"
                },
                "s_city": {
                  "type": "string",
                  "description": "Shipping Address City",
                  "example": "Jakarta Barat"
                },
                "s_province": {
                  "type": "string",
                  "description": "Shipping Address Province",
                  "example": "DKI Jakarta"
                },
                "s_post_code": {
                  "type": "string",
                  "description": "Shipping Address Post Code",
                  "example": 11750
                },
                "b_address": {
                  "type": "string",
                  "description": "Biling Full Address",
                  "example": "Duri Kosambi No 11"
                },
                "b_area": {
                  "type": "string",
                  "description": "Biling Address Area",
                  "example": "Cengkareng"
                },
                "b_city": {
                  "type": "string",
                  "description": "Biling Address City",
                  "example": "Jakarta Barat"
                },
                "b_province": {
                  "type": "string",
                  "description": "Biling Address Province",
                  "example": "DKI Jakarta"
                },
                "b_post_code": {
                  "type": "string",
                  "description": "Biling Address Post Code",
                  "example": 11750
                },
                "location_id": {
                  "type": "number",
                  "description": "Location ID",
                  "example": -1
                },
                "is_loyalty_member": {
                  "type": "boolean",
                  "description": "Is Contact a Loyalty Member",
                  "example": -1
                },
                "b_sex": {
                  "type": "string",
                  "description": "Contact Gender",
                  "example": "L"
                },
                "b_birthday": {
                  "type": "string",
                  "format": "date",
                  "description": "Contact Birthday",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "contact_full": {
                  "type": "string",
                  "description": "Contact Full Information",
                  "example": "Radit - 082297772417 - radit.developer@gmail.com"
                },
                "is_dropshipper": {
                  "type": "boolean",
                  "description": "Is dropshipper",
                  "example": false
                },
                "is_reseller": {
                  "type": "boolean",
                  "description": "Is reseller",
                  "example": false
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getCourierResponse": {
        "type": "object",
        "properties": {
          "courier_id": {
            "type": "number",
            "description": "Courier ID",
            "example": 5
          },
          "courier_name": {
            "type": "string",
            "description": "Courier Name",
            "example": "Go-Send"
          }
        }
      },
      "getCouriersResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "courier_id": {
              "type": "number",
              "description": "Courier ID",
              "example": 5
            },
            "courier_name": {
              "type": "string",
              "description": "Courier Name",
              "example": "Go-Send"
            }
          }
        }
      },
      "getDigitalRewardsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string",
                  "description": "Reward Category",
                  "example": "Lifestyle"
                },
                "digital_reward_id": {
                  "type": "number",
                  "description": "Digital Reward ID",
                  "example": 1
                },
                "digital_reward_name": {
                  "type": "string",
                  "description": "Digital Reward Name",
                  "example": "Voucher Tiket"
                },
                "digital_reward_image": {
                  "type": "string",
                  "description": "Digital Reward Image",
                  "example": "https://jubelio.blob.core.windows.net/images/bngb2liirsoobzqmj73egg/0aeb9e88-4ca9-4933-b7fb-83339f24de4e_thumb.png"
                },
                "merchant_name": {
                  "type": "string",
                  "description": "Digital Reward name",
                  "example": "Traveloka"
                },
                "description": {
                  "type": "string",
                  "description": "Digital Reward Description",
                  "example": "Traveloka Voucher Rp 200.000,-"
                },
                "points": {
                  "type": "string",
                  "description": "Needed Points",
                  "example": 50
                }
              }
            }
          }
        }
      },
      "getInventoryActivityResponse": {
        "type": "object",
        "properties": {
          "activities": {
            "type": "array",
            "description": "List Location that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 1
                },
                "item_name": {
                  "type": "string",
                  "description": "Item Name",
                  "example": "Barang 1"
                },
                "item_code": {
                  "type": "string",
                  "description": "Item Name",
                  "example": "BAR-1"
                },
                "location_id": {
                  "type": "number",
                  "description": "Location ID",
                  "example": -1
                },
                "location_name": {
                  "type": "string",
                  "description": "Location Name",
                  "example": "Pusat"
                },
                "ref_no": {
                  "type": "string",
                  "description": "Reference Number",
                  "example": null
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "created_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Adjustment Created Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "trx_no": {
                  "type": "string",
                  "description": "Transaction Number",
                  "example": "ADJ-000000331"
                },
                "source": {
                  "type": "string",
                  "description": "Source of transaction",
                  "example": "ADJUSMENT"
                },
                "qty": {
                  "type": "string",
                  "description": "Quantity that is used in transaction",
                  "example": "1"
                },
                "balance": {
                  "type": "string",
                  "description": "Balance or Current Quantity (Sisa)",
                  "example": "2557"
                },
                "description": {
                  "type": "string",
                  "description": "Description",
                  "example": null
                }
              }
            }
          },
          "location_stocks": {
            "type": "array",
            "description": "List Stocks of Inventory  for every Locations"
          },
          "row_count": {
            "type": "number",
            "description": "total row",
            "example": 10
          },
          "total_stock": {
            "type": "string",
            "description": "Total Stock",
            "example": "2577"
          }
        }
      },
      "getInventoryResponse": {
        "type": "object",
        "properties": {
          "locations": {
            "type": "array",
            "description": "List Location that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "location_id": {
                  "type": "number",
                  "description": "Location ID",
                  "example": -1
                },
                "location_name": {
                  "type": "string",
                  "description": "Location Name",
                  "example": "Pusat"
                }
              }
            }
          },
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "item_group_id": {
                  "type": "number",
                  "description": "Item Group ID",
                  "example": 1
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 1
                },
                "item_name": {
                  "type": "string",
                  "description": "Item Name",
                  "example": "Barang 1"
                },
                "item_code": {
                  "type": "string",
                  "description": "Item Name",
                  "example": "BAR-1"
                },
                "is_bundle": {
                  "type": "boolean",
                  "description": "Is Item a Bundle",
                  "example": false
                },
                "total_stocks": {
                  "type": "object",
                  "description": "Total Stocks of Inventory",
                  "properties": {
                    "on_hand": {
                      "type": "number",
                      "description": "Total Inventory on Hand",
                      "example": 3
                    },
                    "on_order": {
                      "type": "number",
                      "description": "Total Inventory on Order",
                      "example": 1
                    },
                    "available": {
                      "type": "number",
                      "description": "Total Available Inventory",
                      "example": 2
                    }
                  }
                },
                "location_stocks": {
                  "type": "array",
                  "description": "List Stocks of Inventory  for every Locations",
                  "items": {
                    "type": "object",
                    "properties": {
                      "location_id": {
                        "type": "number",
                        "description": "Location ID",
                        "example": -1
                      },
                      "location_code": {
                        "type": "string",
                        "description": "Location Code",
                        "example": "SHP"
                      },
                      "on_hand": {
                        "type": "number",
                        "description": "Inventory on Hand",
                        "example": 3
                      },
                      "on_order": {
                        "type": "number",
                        "description": "Inventory on Order",
                        "example": 1
                      },
                      "available": {
                        "type": "number",
                        "description": "Available Inventory",
                        "example": 2
                      }
                    }
                  }
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getInventoryTransferInResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "created_by": {
                  "type": "string",
                  "description": "Created By",
                  "example": "support@jubelio.com"
                },
                "created_date": {
                  "type": "datetime",
                  "description": "Created date",
                  "example": "2020-09-07T07:39:41.303Z"
                },
                "destination": {
                  "type": "string",
                  "description": "Destination of the transfer",
                  "example": "Jogja"
                },
                "destination_location_id": {
                  "type": "number",
                  "description": "The Id of location destination",
                  "example": 15
                },
                "is_printed": {
                  "type": "boolean",
                  "description": "Is the record printed",
                  "example": false
                },
                "item_transfer_id": {
                  "type": "number",
                  "description": "The Id of item transfer",
                  "example": 343
                },
                "item_transfer_no": {
                  "type": "string",
                  "description": "The number of item transfer",
                  "example": "TRF-000000343"
                },
                "note": {
                  "type": "string",
                  "description": "The note",
                  "example": "Please handle with care."
                },
                "printed_by": {
                  "type": "string",
                  "description": "Name that does print",
                  "example": "Support"
                },
                "received_by": {
                  "type": "string",
                  "description": "The receiver name",
                  "example": "Support"
                },
                "received_date": {
                  "type": "datetime",
                  "description": "Date when the transfer is received",
                  "example": "2020-09-07T07:39:41.303Z"
                },
                "return_id": {
                  "type": "number",
                  "description": "The return id. (null if there is no)",
                  "example": null
                },
                "source": {
                  "type": "string",
                  "description": "The source of the transfer",
                  "example": "Pusat"
                },
                "source_location_id": {
                  "type": "number",
                  "description": "The Id of source location",
                  "example": -1
                },
                "source_transfer_no": {
                  "type": "number",
                  "description": "The number of source transfer. (null of there is no)",
                  "example": null
                },
                "transaction_date": {
                  "type": "string",
                  "description": "the transaction date",
                  "example": "2020-09-07T07:39:12.530Z"
                },
                "transfer_type": {
                  "type": "number",
                  "description": "the type of transfer in code/number",
                  "example": 0
                },
                "updated_by": {
                  "type": "string",
                  "description": "Updated by",
                  "example": "support@jubelio.com"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getInventoryTransferOutResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "created_by": {
                  "type": "string",
                  "description": "Created By",
                  "example": "support@jubelio.com"
                },
                "created_date": {
                  "type": "datetime",
                  "description": "Created date",
                  "example": "2020-09-07T07:39:41.303Z"
                },
                "destination": {
                  "type": "string",
                  "description": "Destination of the transfer",
                  "example": "Jogja"
                },
                "destination_location_id": {
                  "type": "number",
                  "description": "The Id of location destination",
                  "example": 15
                },
                "is_printed": {
                  "type": "boolean",
                  "description": "Is the record printed",
                  "example": false
                },
                "item_transfer_id": {
                  "type": "number",
                  "description": "The Id of item transfer",
                  "example": 343
                },
                "item_transfer_no": {
                  "type": "string",
                  "description": "The number of item transfer",
                  "example": "TRF-000000343"
                },
                "note": {
                  "type": "string",
                  "description": "The note",
                  "example": "Please handle with care."
                },
                "printed_by": {
                  "type": "string",
                  "description": "Name that does print",
                  "example": "Support"
                },
                "received_by": {
                  "type": "string",
                  "description": "The receiver name",
                  "example": "Support"
                },
                "received_date": {
                  "type": "datetime",
                  "description": "Date when the transfer is received",
                  "example": "2020-09-07T07:39:41.303Z"
                },
                "return_id": {
                  "type": "number",
                  "description": "The return id. (null if there is no)",
                  "example": null
                },
                "source": {
                  "type": "string",
                  "description": "The source of the transfer",
                  "example": "Pusat"
                },
                "source_location_id": {
                  "type": "number",
                  "description": "The Id of source location",
                  "example": -1
                },
                "source_transfer_no": {
                  "type": "number",
                  "description": "The number of source transfer. (null of there is no)",
                  "example": null
                },
                "transaction_date": {
                  "type": "string",
                  "description": "the transaction date",
                  "example": "2020-09-07T07:39:12.530Z"
                },
                "transfer_type": {
                  "type": "number",
                  "description": "the type of transfer in code/number",
                  "example": 0
                },
                "updated_by": {
                  "type": "string",
                  "description": "Updated by",
                  "example": "support@jubelio.com"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getInventoryTransferResponse": {
        "type": "object",
        "properties": {
          "item_transfer_id": {
            "type": "number",
            "description": "Transfer ID",
            "example": 0
          },
          "item_transfer_no": {
            "type": "string",
            "description": "Transfer Number",
            "example": "[auto]"
          },
          "transaction_date": {
            "type": "string",
            "format": "date-time",
            "description": "Transfer Transaction Date",
            "example": "2020-01-06T01:49:21.999Z"
          },
          "created_date": {
            "type": "string",
            "format": "date-time",
            "description": "Record Created Date",
            "example": "2020-01-06T01:49:21.999Z"
          },
          "received_date": {
            "type": "string",
            "format": "date-time",
            "description": "Transfer Received Date",
            "example": "2020-01-06T01:49:21.999Z"
          },
          "note": {
            "type": "string",
            "description": "Transfer Note",
            "example": "Transfer Request Example"
          },
          "source_location_id": {
            "type": "number",
            "description": "Source Location ID",
            "example": -1
          },
          "destination_location_id": {
            "type": "number",
            "description": "Destination Location ID. Can't be same with Source Location ID",
            "example": 1
          },
          "transfer_type": {
            "type": "number",
            "description": "Transfer Type",
            "example": 0
          },
          "source_transfer_no": {
            "type": "string",
            "description": "Source Transfer No",
            "example": "TR0001"
          },
          "created_by": {
            "type": "datetime",
            "description": "Created date",
            "example": null
          },
          "printed_by": {
            "type": "string",
            "description": "Printed by",
            "example": null
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "item_transfer_detail_id": {
                  "type": "number",
                  "description": "Item Transfer Detail ID",
                  "example": 0
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 4
                },
                "serial_no": {
                  "type": "string",
                  "description": "Serial Number",
                  "example": "SN001"
                },
                "qty_in_base": {
                  "minimum": 1,
                  "type": "number",
                  "description": "Item Quantity that will be transfer",
                  "example": 1
                },
                "unit": {
                  "type": "string",
                  "description": "Unit Name",
                  "example": "Buah"
                },
                "description": {
                  "type": "string",
                  "description": "Item Description",
                  "example": "Item Transfer Request Example"
                }
              }
            }
          }
        }
      },
      "getInventoryTransferTransferResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "created_by": {
                  "type": "string",
                  "description": "Created By",
                  "example": "support@jubelio.com"
                },
                "created_date": {
                  "type": "datetime",
                  "description": "Created date",
                  "example": "2020-09-07T07:39:41.303Z"
                },
                "destination": {
                  "type": "string",
                  "description": "Destination of the transfer",
                  "example": "Jogja"
                },
                "destination_location_id": {
                  "type": "number",
                  "description": "The Id of location destination",
                  "example": 15
                },
                "is_printed": {
                  "type": "boolean",
                  "description": "Is the record printed",
                  "example": false
                },
                "item_transfer_id": {
                  "type": "number",
                  "description": "The Id of item transfer",
                  "example": 343
                },
                "item_transfer_no": {
                  "type": "string",
                  "description": "The number of item transfer",
                  "example": "TRF-000000343"
                },
                "note": {
                  "type": "string",
                  "description": "The note",
                  "example": "Please handle with care."
                },
                "printed_by": {
                  "type": "string",
                  "description": "Name that does print",
                  "example": "Support"
                },
                "received_by": {
                  "type": "string",
                  "description": "The receiver name",
                  "example": "Support"
                },
                "received_date": {
                  "type": "datetime",
                  "description": "Date when the transfer is received",
                  "example": "2020-09-07T07:39:41.303Z"
                },
                "return_id": {
                  "type": "number",
                  "description": "The return id. (null if there is no)",
                  "example": null
                },
                "source": {
                  "type": "string",
                  "description": "The source of the transfer",
                  "example": "Pusat"
                },
                "source_location_id": {
                  "type": "number",
                  "description": "The Id of source location",
                  "example": -1
                },
                "source_transfer_no": {
                  "type": "number",
                  "description": "The number of source transfer. (null of there is no)",
                  "example": null
                },
                "transaction_date": {
                  "type": "string",
                  "description": "the transaction date",
                  "example": "2020-09-07T07:39:12.530Z"
                },
                "transfer_type": {
                  "type": "number",
                  "description": "the type of transfer in code/number",
                  "example": 0
                },
                "updated_by": {
                  "type": "string",
                  "description": "Updated by",
                  "example": "support@jubelio.com"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getInvoiceResponse": {
        "properties": {
          "invoice_id": {
            "type": "number",
            "description": "Invoice ID",
            "example": 0
          },
          "invoice_no": {
            "type": "string",
            "description": "Invoice Number",
            "example": "[auto]"
          },
          "contact_id": {
            "type": "number",
            "description": "Contact ID (Customer)",
            "example": 1
          },
          "customer_name": {
            "type": "string",
            "description": "Contact Name (Customer)",
            "example": 0
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2018-10-20T17:00:00.000Z"
          },
          "created_date": {
            "type": "string",
            "format": "date",
            "description": "Created Date",
            "example": "2018-10-20T17:00:00.000Z"
          },
          "last_modified": {
            "type": "string",
            "format": "date",
            "description": "Last Modified Date",
            "example": "2018-10-20T17:00:00.000Z"
          },
          "due_date": {
            "type": "string",
            "format": "date",
            "description": "Due Date",
            "example": "2018-10-20T17:00:00.000Z"
          },
          "is_tax_included": {
            "type": "boolean",
            "description": "Wether Invoice inlcude Tax",
            "example": false
          },
          "note": {
            "type": "string",
            "description": "Invoice Note",
            "example": "Beli Tas Selempang"
          },
          "payment_acct_id": {
            "type": "number",
            "description": "Payment Account ID",
            "example": 1
          },
          "payment": {
            "type": "number",
            "description": "Invoice Payment",
            "example": 40000
          },
          "payment_amount": {
            "type": "number",
            "description": "Invoice Payment Amount",
            "example": 40000
          },
          "sub_total": {
            "type": "string",
            "description": "Items Total Price",
            "example": 30000
          },
          "total_disc": {
            "type": "string",
            "description": "Items Total Discount",
            "example": 0
          },
          "total_tax": {
            "type": "string",
            "description": "Items Total Tax",
            "example": 0
          },
          "grand_total": {
            "type": "string",
            "description": "Invoice Grand Total",
            "example": 40000
          },
          "ref_no": {
            "type": "string",
            "description": "Reference Number",
            "example": "00099"
          },
          "location_id": {
            "type": "number",
            "description": "Location ID",
            "example": -1
          },
          "location_name": {
            "type": "number",
            "description": "Location Name",
            "example": "Pusat"
          },
          "is_opening_balance": {
            "type": "boolean",
            "description": "Wether Invoice is an Opening Balance",
            "example": false
          },
          "shipping_cost": {
            "type": "string",
            "description": "Shipping Cost",
            "example": 5000
          },
          "insurance_cost": {
            "type": "string",
            "description": "Inssurance Cost",
            "example": 5000
          },
          "buyer_id": {
            "type": "number",
            "description": "Buyer ID",
            "example": null
          },
          "buyer_name": {
            "type": "string",
            "description": "Buyer Name",
            "example": null
          },
          "running_no": {
            "type": "string",
            "description": "Running Number",
            "example": null
          },
          "running_date": {
            "type": "date",
            "description": "Running Date",
            "example": null
          },
          "salesmen_id": {
            "type": "number",
            "description": "Salesman ID",
            "example": null
          },
          "salesmen_name": {
            "type": "string",
            "description": "Salesman Name",
            "example": null
          },
          "add_disc": {
            "type": "string",
            "description": null,
            "example": null
          },
          "add_fee": {
            "type": "string",
            "description": "Additional Fee",
            "example": null
          },
          "service_fee": {
            "type": "string",
            "description": "Service Fee",
            "example": null
          },
          "items": {
            "type": "array",
            "description": "List Items in Invoice",
            "items": {
              "type": "object",
              "properties": {
                "invoice_detail_id": {
                  "type": "number",
                  "description": "Invoice Detail ID",
                  "example": 0
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 5
                },
                "item_name": {
                  "type": "number",
                  "description": "Item Name",
                  "example": "Tas selempang Biru Dongker"
                },
                "item_code": {
                  "type": "number",
                  "description": "Item Code",
                  "example": 1203578196
                },
                "serial_no": {
                  "type": "string",
                  "description": "Item Serial Number",
                  "example": "SN001"
                },
                "description": {
                  "type": "string",
                  "description": "Item Description",
                  "example": "Tas selempang Biru Dongker"
                },
                "sales_acct_id": {
                  "type": "number",
                  "description": "Sales Account ID",
                  "example": 28
                },
                "tax_id": {
                  "type": "number",
                  "description": "Tax ID",
                  "example": 1
                },
                "price": {
                  "type": "string",
                  "description": "Item Price",
                  "example": 30000
                },
                "sell_price": {
                  "type": "string",
                  "description": "Sell Price",
                  "example": 30000
                },
                "original_price": {
                  "type": "string",
                  "description": "Original Price",
                  "example": 30000
                },
                "unit": {
                  "type": "string",
                  "description": "Unit Name",
                  "example": "Buah"
                },
                "qty": {
                  "type": "number",
                  "description": "item Quantity",
                  "example": 0
                },
                "qty_in_base": {
                  "type": "string",
                  "description": "Quantity Item that will be reduced",
                  "example": 1
                },
                "disc": {
                  "type": "string",
                  "description": "Item Discount",
                  "example": 0
                },
                "disc_amount": {
                  "type": "string",
                  "description": "Item Total Amount",
                  "example": 0
                },
                "tax_amount": {
                  "type": "number",
                  "description": "Item Tax Amount",
                  "example": 0
                },
                "amount": {
                  "type": "number",
                  "description": "Item Total Amount",
                  "example": 30000
                },
                "cogs": {
                  "type": "number",
                  "description": "Cost of Goods Sold",
                  "example": 11666.666667
                },
                "location_id": {
                  "type": "number",
                  "description": "Location ID",
                  "example": -1
                },
                "salesorder_detail_id": {
                  "type": "number",
                  "description": "Sales Order Detail ID",
                  "example": -1
                },
                "rate": {
                  "type": "string",
                  "description": "Rate",
                  "example": 0
                },
                "tax_name": {
                  "type": "string",
                  "description": "Tax Name",
                  "example": "No Tax"
                },
                "account_name": {
                  "type": "string",
                  "description": "Account Name",
                  "example": "4-4000 - Penjualan"
                },
                "uom_id": {
                  "type": "number",
                  "description": "Uom ID",
                  "example": -1
                },
                "batch_no": {
                  "type": "string",
                  "description": "Batch number",
                  "example": null
                },
                "item_group_id": {
                  "type": "number",
                  "description": "Item Group ID",
                  "example": null
                },
                "loc_id": {
                  "type": "number",
                  "description": "Location ID",
                  "example": null
                }
              }
            }
          }
        }
      },
      "getInvoicesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "doc_id": {
                  "type": "number",
                  "description": "Document ID",
                  "example": 2
                },
                "doc_number": {
                  "type": "string",
                  "description": "Document Number",
                  "example": "INV-000000222"
                },
                "contact_id": {
                  "type": "number",
                  "description": "Contact ID (Customer)",
                  "example": 32
                },
                "customer_name": {
                  "type": "string",
                  "description": "Contact Name (Customer)",
                  "example": "Andy"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "due_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Due Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "is_opening_balance": {
                  "type": "boolean",
                  "description": "Wether Invoice is an Opening Balance",
                  "example": false
                },
                "grand_total": {
                  "type": "string",
                  "description": "Invoice Grand Total",
                  "example": 4400000
                },
                "due": {
                  "type": "string",
                  "description": "Invoice Due Total",
                  "example": 4400000
                },
                "doc_type": {
                  "type": "string",
                  "description": "Document Type",
                  "example": "invoice"
                },
                "age": {
                  "type": "number",
                  "description": "Invoice Age",
                  "example": 8
                },
                "age_due": {
                  "type": "number",
                  "description": "Invoice Age Due",
                  "example": 8
                },
                "payment_id": {
                  "type": "number",
                  "description": "Invoice Payment ID",
                  "example": 1
                },
                "ref_no": {
                  "type": "string",
                  "description": "Ref number",
                  "example": null
                },
                "so_customer_name": {
                  "type": "string",
                  "description": "Customer Name",
                  "example": null
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getInvoicesSummaryResponse": {
        "type": "object",
        "description": "Invoice Summary Items",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "store_id": {
                  "type": "number",
                  "description": "Store Id",
                  "example": 383
                },
                "store_name": {
                  "type": "string",
                  "description": "Store Name",
                  "example": "Raicha.Store"
                },
                "channel_name": {
                  "type": "string",
                  "description": "Channel Name",
                  "example": "SHOPEE"
                },
                "detail": {
                  "type": "array",
                  "description": "List Items that exists in System",
                  "items": {
                    "type": "object",
                    "properties": {
                      "item_id": {
                        "type": "number",
                        "description": "Item Id",
                        "example": 847
                      },
                      "item_code": {
                        "type": "string",
                        "description": "Item Code",
                        "example": "CD001"
                      },
                      "qty": {
                        "type": "number",
                        "description": "Quantity",
                        "example": 2
                      },
                      "sum_total_price": {
                        "type": "number",
                        "description": "Sum of Total Price",
                        "example": 23500
                      }
                    }
                  }
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getItemBatchNumberResponse": {
        "type": "object",
        "properties": {
          "location_id": {
            "type": "number",
            "description": "Adjustment Location",
            "example": -1
          },
          "location_name": {
            "type": "string",
            "description": "Adjustment Location Name",
            "example": "Pusat"
          },
          "item_location": {
            "type": "array",
            "description": "List Item Location",
            "items": {
              "type": "object",
              "properties": {
                "location_id": {
                  "type": "number",
                  "description": "Adjustment Location",
                  "example": -1
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 1
                },
                "qty": {
                  "type": "string",
                  "description": "Total Item Quantity",
                  "example": -65
                },
                "batchs": {
                  "type": "array",
                  "description": "List Item Location",
                  "items": {
                    "type": "object",
                    "properties": {
                      "batch_no": {
                        "type": "string",
                        "description": "Batch Number",
                        "example": "CF013037-123123"
                      },
                      "qty": {
                        "type": "string",
                        "description": "Total Item Quantity for this Item Batch Number",
                        "example": -3
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "getItemCatalogResponse": {
        "type": "object",
        "properties": {
          "item_group_id": {
            "type": "number",
            "description": "Item Group ID",
            "example": 2
          },
          "item_group_name": {
            "type": "string",
            "description": "Item Group Name",
            "example": "10.4 10W40"
          },
          "description": {
            "type": "string",
            "description": "Item Description",
            "example": "semi-synthetic lubricant for 4-stroke motorcycles that ensures"
          },
          "notes": {
            "type": "string",
            "description": "Item Description",
            "example": "semi-synthetic lubricant for 4-stroke motorcycles that ensures"
          },
          "sell_tax_id": {
            "type": "number",
            "description": "Sell Tax ID",
            "example": -1
          },
          "buy_tax_id": {
            "type": "number",
            "description": "Buy Tax ID",
            "example": -1
          },
          "sales_acct_id": {
            "type": "number",
            "description": "Sales Account ID",
            "example": 28
          },
          "cogs_acct_id": {
            "type": "number",
            "description": "Cost of Goods Sold (COGS) Account Account ID",
            "example": 30
          },
          "invt_acct_id": {
            "type": "number",
            "description": "Inventory Account ID",
            "example": 4
          },
          "sell_this": {
            "type": "boolean",
            "description": "Wether Item can be sell",
            "example": true
          },
          "buy_this": {
            "type": "boolean",
            "description": "Wether Item can be bought",
            "example": true
          },
          "stock_this": {
            "type": "boolean",
            "description": "Wether Item can be stock",
            "example": true
          },
          "dropship_this": {
            "type": "boolean",
            "description": "Wether Item can be drop ship",
            "example": false
          },
          "uom_id": {
            "type": "number",
            "description": "Unit of Measure ID",
            "example": -1
          },
          "sell_unit": {
            "type": "string",
            "description": "Sell Unit",
            "example": "Botol"
          },
          "buy_unit": {
            "type": "string",
            "description": "Buy Unit",
            "example": "Botol"
          },
          "is_active": {
            "type": "boolean",
            "description": "Wether Item is active",
            "example": true
          },
          "purch_acct_id": {
            "type": "number",
            "description": "Purchase Account ID",
            "example": -1
          },
          "status": {
            "type": "number",
            "description": "Status",
            "example": "null"
          },
          "item_category_id": {
            "type": "number",
            "description": "Item Category ID",
            "example": 454
          },
          "package_content": {
            "type": "string",
            "description": "Package Content",
            "example": "Plastik and How to Use"
          },
          "package_weight": {
            "type": "string",
            "description": "Package Weight",
            "example": 1000
          },
          "package_height": {
            "type": "string",
            "description": "Package Height",
            "example": 29
          },
          "package_width": {
            "type": "string",
            "description": "Package Width",
            "example": 49
          },
          "package_length": {
            "type": "string",
            "description": "Package Length",
            "example": 39.5
          },
          "variations": {
            "type": "array",
            "description": "List Item Variations",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Variation Label",
                  "example": "color_family"
                },
                "values": {
                  "type": "array",
                  "description": "List Variation Values",
                  "items": {
                    "type": "string",
                    "example": "Black"
                  }
                }
              }
            }
          },
          "sell_price": {
            "type": "string",
            "description": "Item Sell Price",
            "example": 3600000
          },
          "buy_price": {
            "type": "string",
            "description": "Item Buy Price",
            "example": 1500000
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "description": "Last Modified Time",
            "example": "2019-01-07T07:53:35.100Z"
          },
          "brand_id": {
            "type": "number",
            "description": "Brand ID",
            "example": 11087
          },
          "rop": {
            "type": "number",
            "description": "Return of Purchase",
            "example": 10
          },
          "is_favourite": {
            "type": "boolean",
            "description": "Wether Item a favourite",
            "example": false
          },
          "use_single_image_set": {
            "type": "boolean",
            "description": "Wether Item use Single Image Set",
            "example": false
          },
          "use_serial_number": {
            "type": "boolean",
            "description": "Wether Item use Serial Number",
            "example": true
          },
          "brand_name": {
            "type": "string",
            "description": "Another Brand Name",
            "example": "Mikoooo"
          },
          "sell_tax_name": {
            "type": "string",
            "description": "Sell Tax Name",
            "example": "No Tax"
          },
          "buy_tax_name": {
            "type": "string",
            "description": "Buy Tax Name",
            "example": "No Tax"
          },
          "sales_acct_name": {
            "type": "string",
            "description": "Sales Account Name",
            "example": "4-4000 - Penjualan"
          },
          "invt_acct_name": {
            "type": "string",
            "description": "Inventory Account Name",
            "example": "1-1200 - Persediaan Barang"
          },
          "cogs_acct_name": {
            "type": "string",
            "description": "Cost of Goods Sold (COGS) Account Name",
            "example": "5-5000 - Harga Pokok Penjualan (COGS)"
          },
          "purch_acct_name": {
            "type": "string",
            "description": "Purchase Account Name",
            "example": "5-5000 - Harga Pokok Penjualan (COGS)"
          },
          "uom_name": {
            "type": "string",
            "description": "Unit of Measure Name",
            "example": "Buah"
          },
          "product_skus": {
            "type": "array",
            "description": "List Item SKUs",
            "items": {
              "type": "object",
              "properties": {
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 2270
                },
                "item_code": {
                  "type": "string",
                  "description": "Item Code",
                  "example": "RIC-COO-MIY-RCM-PIN"
                },
                "sell_price": {
                  "type": "number",
                  "description": "Item Sell Price Variant",
                  "example": 240000
                },
                "end_qty": {
                  "type": "number",
                  "description": "Total Inventory on Hand",
                  "example": 10
                },
                "average_cost": {
                  "type": "number",
                  "description": "Average Cost",
                  "example": 240000
                },
                "amount": {
                  "type": "number",
                  "description": "Amount",
                  "example": 240000
                },
                "barcode": {
                  "type": "string",
                  "description": "Barcode",
                  "example": null
                },
                "variation_values": {
                  "type": "array",
                  "description": "Item Variations",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Variation Label",
                        "example": "color_family"
                      },
                      "value": {
                        "type": "string",
                        "description": "Variation Value",
                        "example": "Black"
                      }
                    }
                  }
                },
                "prices": {
                  "type": "array",
                  "description": "List Price on Channels",
                  "items": {
                    "type": "object",
                    "properties": {
                      "store_id": {
                        "type": "number",
                        "description": "Store ID",
                        "example": 125
                      },
                      "channel_id": {
                        "type": "number",
                        "description": "Channel ID",
                        "example": 4
                      },
                      "sell_price": {
                        "type": "number",
                        "description": "Sell Price on Channel",
                        "example": 260000
                      }
                    }
                  }
                },
                "images": {
                  "type": "array",
                  "description": "List Item Variations",
                  "items": {
                    "type": "object",
                    "properties": {
                      "item_id": {
                        "type": "number",
                        "description": "Item ID",
                        "example": 1028
                      },
                      "image_id": {
                        "type": "number",
                        "description": "Image ID",
                        "example": 4
                      },
                      "cloud_key": {
                        "type": "string",
                        "description": "Image URL",
                        "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "thumbnail": {
                        "type": "string",
                        "description": "Image Thumbnail",
                        "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "file_name": {
                        "type": "string",
                        "description": "Image Name",
                        "example": "fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "sequence_number": {
                        "type": "number",
                        "description": "Image Sequence Number",
                        "example": 0
                      },
                      "channel_info": {
                        "type": "array",
                        "description": "List Image URL on Channels",
                        "items": {
                          "type": "object",
                          "properties": {
                            "image_url": {
                              "type": "string",
                              "description": "Image URL",
                              "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                            },
                            "channel_id": {
                              "type": "number",
                              "description": "Channel ID",
                              "example": 4
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "min": {
            "type": "number",
            "description": "Minimal Item Purchase",
            "example": 1
          },
          "max": {
            "type": "number",
            "description": "Maximal Item Purchase",
            "example": 10
          },
          "selected_brand_name": {
            "type": "string",
            "description": "Selected Brand Name",
            "example": "Miyako"
          },
          "bom_id": {
            "type": "number",
            "description": null,
            "example": null
          },
          "store_priority_qty_treshold": {
            "type": "number",
            "description": "Store priority Quantity",
            "example": null
          },
          "created_date": {
            "type": "string",
            "format": "date-time",
            "description": "Last Modified Time",
            "example": "2019-01-07T07:53:35.100Z"
          },
          "lead_time": {
            "type": "string",
            "description": "Lead time",
            "example": null
          },
          "is_po": {
            "type": "boolean",
            "description": "Is ProOrder",
            "example": null
          },
          "use_batch_number": {
            "type": "boolean",
            "description": null,
            "example": null
          },
          "variation_images": {
            "type": "array",
            "description": "List Item Variations",
            "items": {
              "type": "object",
              "properties": {
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 1
                },
                "store_id": {
                  "type": "number",
                  "description": "Store ID",
                  "example": 1
                },
                "images": {
                  "type": "array",
                  "description": "List Images",
                  "items": {
                    "type": "object",
                    "properties": {
                      "group_image_id": {
                        "type": "number",
                        "description": "Group Image ID",
                        "example": 1
                      },
                      "url": {
                        "type": "string",
                        "description": "Image URL",
                        "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "thumbnail": {
                        "type": "string",
                        "description": "Image Thumbnail",
                        "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "file_name": {
                        "type": "string",
                        "description": "Image Name",
                        "example": "fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "sequence_number": {
                        "type": "number",
                        "description": "Image Sequence Number",
                        "example": 0
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "getItemsToPickResponse": {
        "type": "array",
        "description": "List Item to Pick",
        "items": {
          "type": "object",
          "description": "Item to Pick",
          "properties": {
            "salesorder_id": {
              "type": "number",
              "description": "Sales Order ID",
              "example": 12
            },
            "salesorder_detail_id": {
              "type": "number",
              "description": "Sales Order Detail ID",
              "example": 82
            },
            "item_id": {
              "type": "number",
              "description": "Item ID",
              "example": 2
            },
            "item_full_name": {
              "type": "string",
              "description": "Item Full Name",
              "example": "BAR-1-PIN - Barang 1"
            },
            "location_id": {
              "type": "number",
              "description": "Location ID",
              "example": -1
            },
            "location_name": {
              "type": "number",
              "description": "Location Name",
              "example": "Pusat"
            },
            "qty_ordered": {
              "type": "string",
              "description": "Ordered Quantity",
              "example": 1
            },
            "unit": {
              "type": "string",
              "description": "Unit Name",
              "example": "Buah"
            },
            "salesorder_no": {
              "type": "string",
              "description": "Sales Order Number",
              "example": "SO-000000062"
            },
            "bundle_item_id": {
              "type": "number",
              "description": "Bundle Item ID",
              "example": 0
            },
            "end_qty": {
              "type": "string",
              "description": "End Quantity",
              "example": 6
            }
          }
        }
      },
      "getItemsToSellResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "account_code": {
              "description": "Account Code",
              "type": "string",
              "example": "4-4000"
            },
            "account_name": {
              "description": "Account Name",
              "type": "string",
              "example": "4-4000 - Penjualan"
            },
            "item_id": {
              "description": "Item ID",
              "type": "number",
              "example": 1
            },
            "item_name": {
              "description": "Item Name",
              "type": "string",
              "example": "Addison Jacket"
            },
            "item_code": {
              "type": "string",
              "description": "Item Code/SKU",
              "example": "chopper dan olive oil"
            },
            "sell_tax_id": {
              "type": "number",
              "description": "Sell tax id",
              "example": 1
            },
            "sell_price": {
              "type": "string",
              "description": "Sell Price",
              "example": "25.000"
            },
            "item_group_id": {
              "description": "Item Group Id",
              "type": "number",
              "example": 2642
            },
            "item_full_name": {
              "description": "Item Full Name",
              "type": "string",
              "example": "DYSW351-Addison Jacket"
            },
            "unit": {
              "description": "Unit",
              "type": "string",
              "example": "Pcs"
            },
            "sell_unit": {
              "description": "sell unit",
              "type": "string",
              "example": "Buah"
            },
            "average_cost": {
              "description": "average_cost",
              "type": "number",
              "example": 371777.7777833333
            },
            "available_qty": {
              "description": "available qty",
              "type": "number",
              "example": 10
            }
          }
        }
      },
      "getJournalByIdResponse": {
        "type": "object",
        "properties": {
          "journal_id": {
            "type": "number",
            "description": "Journal Id",
            "example": 5506
          },
          "journal_no": {
            "type": "string",
            "description": "Journal Number",
            "example": "GJ-0005615"
          },
          "journal_type": {
            "type": "string",
            "description": "The type of journal. Could be 'Manual Jurnal' or null",
            "example": null
          },
          "notes": {
            "type": "string",
            "description": "Journal Note",
            "example": "test2"
          },
          "source_doc_no": {
            "type": "string",
            "description": "The source of document",
            "example": "ADJS-000001552"
          },
          "transaction_date": {
            "type": "string",
            "description": "The transaction date",
            "example": "2020-07-24T07:33:46.357Z"
          },
          "accounts": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "account_id": {
                  "type": "number",
                  "description": "The account Id",
                  "example": 4
                },
                "account_name": {
                  "type": "string",
                  "description": "The account Name",
                  "example": "1-1200 - Persediaan Barang"
                },
                "credit": {
                  "type": "string",
                  "description": "The credit",
                  "example": "0.0000"
                },
                "debit": {
                  "type": "string",
                  "description": "Debit",
                  "example": "1000.0000"
                },
                "description": {
                  "type": "string",
                  "description": "The description of the journal",
                  "example": null
                },
                "journal_detail_id": {
                  "type": "number",
                  "description": "The journal detail Id",
                  "example": 21353
                }
              }
            }
          }
        }
      },
      "getJournalManualResponse": {
        "type": "object",
        "description": "Adjustment Items",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "credit": {
                  "type": "string",
                  "description": "Credit",
                  "example": "111112.0000"
                },
                "debit": {
                  "type": "string",
                  "description": "Debit",
                  "example": "111112.0000"
                },
                "journal_id": {
                  "type": "number",
                  "description": "Journal Id",
                  "example": 5506
                },
                "journal_no": {
                  "type": "string",
                  "description": "Journal Number",
                  "example": "GJ-0005615"
                },
                "journal_type": {
                  "type": "string",
                  "description": "The type of journal. Could be 'Manual Jurnal' or null",
                  "example": "Manual Jurnal"
                },
                "notes": {
                  "type": "string",
                  "description": "Journal Note",
                  "example": "test2"
                },
                "source_doc_no": {
                  "type": "string",
                  "description": "The source of document",
                  "example": "Manual Journal"
                },
                "transaction_date": {
                  "type": "string",
                  "description": "The transaction date",
                  "example": "2020-07-24T07:33:46.357Z"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getJournalResponse": {
        "type": "object",
        "description": "Adjustment Items",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "credit": {
                  "type": "string",
                  "description": "Credit",
                  "example": "1300000.0000"
                },
                "debit": {
                  "type": "string",
                  "description": "Debit",
                  "example": "1300000.0000"
                },
                "journal_id": {
                  "type": "number",
                  "description": "Journal Id",
                  "example": 5615
                },
                "journal_no": {
                  "type": "string",
                  "description": "Journal Number",
                  "example": "GJ-0005615"
                },
                "journal_type": {
                  "type": "string",
                  "description": "The type of journal. Could be 'Manual Jurnal' or null",
                  "example": null
                },
                "notes": {
                  "type": "string",
                  "description": "Journal Note",
                  "example": ""
                },
                "source_doc_no": {
                  "type": "string",
                  "description": "The source of document",
                  "example": "ADJS-000001428"
                },
                "transaction_date": {
                  "type": "string",
                  "description": "The transaction date",
                  "example": "2020-07-24T07:33:46.357Z"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getLocationResponse": {
        "type": "object",
        "properties": {
          "location_id": {
            "type": "number",
            "description": "Location ID",
            "example": 1
          },
          "location_name": {
            "type": "string",
            "description": "Location Name",
            "example": "Kutabumi"
          },
          "is_pos_outlet": {
            "type": "boolean",
            "description": "Is Location a POS Outlet",
            "example": false
          },
          "address": {
            "type": "string",
            "description": "Location Full Address",
            "example": "Jl. Raya Kutabumi Ruko Pondok Permai blok CA 1 no 6, Kutabaru, Pasar Kemis, Tangerang \\nKec. Pasar Kemis, Kota/Kab. Kab. Tangerang"
          },
          "city": {
            "type": "string",
            "description": "Location Address City",
            "example": "Tangerang"
          },
          "phone": {
            "type": "string",
            "description": "Location Contact Number",
            "example": "0215442490"
          },
          "email": {
            "type": "string",
            "description": "Location Contact Email",
            "example": "kutabumi.warehouse@example.com"
          },
          "province": {
            "type": "string",
            "description": "Location Address Province",
            "example": "Banten"
          },
          "post_code": {
            "type": "string",
            "description": "Location Address Post Code",
            "example": 15560
          },
          "is_fbl": {
            "type": "boolean",
            "description": "Is Location a FBL",
            "example": false
          },
          "registers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "register_id": {
                  "type": "number",
                  "description": "Register ID",
                  "example": 0
                },
                "register_name": {
                  "type": "string",
                  "description": "Register Name",
                  "example": "Denis"
                },
                "status": {
                  "type": "string",
                  "description": "Register Status"
                },
                "opened_by": {
                  "type": "string",
                  "description": "Opened by"
                },
                "date_closed": {
                  "type": "string",
                  "description": "Date Closed",
                  "format": "date-time"
                },
                "date_opened": {
                  "type": "string",
                  "description": "Date Opened",
                  "format": "date-time"
                }
              }
            }
          },
          "stores": {
            "$ref": "#/components/schemas/stores"
          }
        }
      },
      "getLocationsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "location_id": {
                  "type": "number",
                  "description": "Location ID",
                  "example": 1
                },
                "location_name": {
                  "type": "string",
                  "description": "Location Name",
                  "example": "Kutabumi"
                },
                "is_pos_outlet": {
                  "type": "boolean",
                  "description": "Is Location a POS Outlet",
                  "example": false
                },
                "address": {
                  "type": "string",
                  "description": "Location Full Address",
                  "example": "Jl. Raya Kutabumi Ruko Pondok Permai blok CA 1 no 6, Kutabaru, Pasar Kemis, Tangerang \\nKec. Pasar Kemis, Kota/Kab. Kab. Tangerang"
                },
                "city": {
                  "type": "string",
                  "description": "Location Address City",
                  "example": "Tangerang"
                },
                "phone": {
                  "type": "string",
                  "description": "Location Contact Number",
                  "example": "0215442490"
                },
                "email": {
                  "type": "string",
                  "description": "Location Contact Email",
                  "example": "kutabumi.warehouse@example.com"
                },
                "province": {
                  "type": "string",
                  "description": "Location Address Province",
                  "example": "Banten"
                },
                "post_code": {
                  "type": "string",
                  "description": "Location Address Post Code",
                  "example": 15560
                },
                "is_fbl": {
                  "type": "boolean",
                  "description": "Is Location a FBL",
                  "example": null
                },
                "is_tcb": {
                  "type": "boolean",
                  "description": "Is Location a TCB",
                  "example": null
                },
                "location_code": {
                  "type": "string",
                  "description": "Location code",
                  "example": null
                },
                "area": {
                  "type": "string",
                  "description": "Location code",
                  "example": null
                },
                "warehouse_id": {
                  "type": "number",
                  "description": "Warehouse ID",
                  "example": null
                },
                "warehouse_store_id": {
                  "type": "number",
                  "description": "Warehouse Store ID",
                  "example": null
                },
                "store_id": {
                  "type": "number",
                  "description": "Store ID",
                  "example": null
                },
                "store_name": {
                  "type": "number",
                  "description": "Store Name",
                  "example": null
                },
                "channel_id": {
                  "type": "number",
                  "description": "Channel ID",
                  "example": null
                },
                "is_active": {
                  "type": "boolean",
                  "description": "Is active",
                  "example": true
                },
                "shipment_type": {
                  "type": "string",
                  "description": "Type of shipment",
                  "example": null
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getLocationStoresResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "store_id": {
                  "type": "number",
                  "description": "Store ID",
                  "example": 1
                },
                "store_name": {
                  "type": "string",
                  "description": "Store Name",
                  "example": "Kutabumi"
                },
                "location_id": {
                  "type": "number",
                  "description": "Location ID",
                  "example": 1
                },
                "channel_id": {
                  "type": "number",
                  "description": "Channel ID",
                  "example": 1
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getMemberResponse": {
        "type": "object",
        "properties": {
          "contact_id": {
            "type": "number",
            "description": "Contact ID",
            "example": 2
          },
          "contact_name": {
            "type": "string",
            "description": "Contact Name",
            "example": "Abi Darda"
          },
          "email": {
            "type": "string",
            "description": "Contact Email",
            "example": "abi.darba@yahoo.com"
          },
          "is_loyalty_member": {
            "type": "boolean",
            "description": "Wether Contact a Loyalty Member",
            "example": true
          },
          "address": {
            "type": "string",
            "description": "Contact Full Adress",
            "example": "Jln sultan hasanudin gang walet mas rt"
          },
          "area": {
            "type": "string",
            "description": "Contact Adress Area",
            "example": "Pasar Kemis"
          },
          "city": {
            "type": "string",
            "description": "Contact Adress City",
            "example": "Tangerang"
          },
          "province": {
            "type": "string",
            "description": "Contact Adress Province",
            "example": "Banten"
          },
          "postcode": {
            "type": "string",
            "description": "Contact Adress Post Code",
            "example": 11750
          },
          "b_sex": {
            "type": "string",
            "description": "Contact Gender",
            "example": "L"
          },
          "b_birthday": {
            "type": "string",
            "format": "date",
            "description": "Contact Birth Day",
            "example": "2018-10-20T17:00:00.000Z"
          },
          "contact_type": {
            "type": "number",
            "description": "Contact Type",
            "example": 0
          },
          "phone": {
            "type": "string",
            "description": "Contact Phone",
            "example": "Banten"
          },
          "points": {
            "type": "string",
            "description": "Contact Loyalty Points",
            "example": 0
          },
          "grand_total": {
            "type": "string",
            "description": "Contact Purchase Grand Total",
            "example": 437800
          },
          "tier_name": {
            "type": "string",
            "description": "Contact Tier",
            "example": "Bronze"
          }
        }
      },
      "getMembersResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "contact_id": {
                  "type": "number",
                  "description": "Contact ID",
                  "example": 2
                },
                "contact_name": {
                  "type": "string",
                  "description": "Contact Name",
                  "example": "Abi Darda"
                },
                "email": {
                  "type": "string",
                  "description": "Contact Email",
                  "example": "abi.darba@yahoo.com"
                },
                "is_loyalty_member": {
                  "type": "boolean",
                  "description": "Wether Contact a Loyalty Member",
                  "example": true
                },
                "address": {
                  "type": "string",
                  "description": "Contact Full Adress",
                  "example": "Jln sultan hasanudin gang walet mas rt"
                },
                "area": {
                  "type": "string",
                  "description": "Contact Adress Area",
                  "example": "Pasar Kemis"
                },
                "city": {
                  "type": "string",
                  "description": "Contact Adress City",
                  "example": "Tangerang"
                },
                "province": {
                  "type": "string",
                  "description": "Contact Adress Province",
                  "example": "Banten"
                },
                "postcode": {
                  "type": "string",
                  "description": "Contact Adress Post Code",
                  "example": 11750
                },
                "b_sex": {
                  "type": "string",
                  "description": "Contact Gender",
                  "example": "L"
                },
                "b_birthday": {
                  "type": "string",
                  "format": "date",
                  "description": "Contact Birth Day",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "contact_type": {
                  "type": "number",
                  "description": "Contact Type",
                  "example": 0
                },
                "phone": {
                  "type": "string",
                  "description": "Contact Phone",
                  "example": "Banten"
                },
                "points": {
                  "type": "string",
                  "description": "Contact Loyalty Points",
                  "example": 0
                },
                "grand_total": {
                  "type": "string",
                  "description": "Contact Purchase Grand Total",
                  "example": 437800
                },
                "tier_name": {
                  "type": "string",
                  "description": "Contact Tier",
                  "example": "Bronze"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getMyPointsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "grand_total": {
                  "type": "string",
                  "description": "Sales Purchase Grand Total",
                  "example": 180000
                },
                "point_gain": {
                  "type": "string",
                  "description": "Point Gain",
                  "example": 18
                },
                "source": {
                  "type": "string",
                  "description": "Loyalty Point Source (2: SALES INVOICE, 3: SALES ORDER, 4: ADJUSTMENT, 5: REDEEM)",
                  "example": 4
                },
                "date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date",
                  "example": "2019-01-08T08:25:14.521Z"
                },
                "order_no": {
                  "type": "string",
                  "description": "Document Number",
                  "example": "SO-000000021"
                },
                "note": {
                  "type": "string",
                  "description": "Loyalty Point Note",
                  "example": "Adjustment for birthday"
                }
              }
            }
          }
        }
      },
      "getPacklistResponse": {
        "type": "object",
        "properties": {
          "salesorder_id": {
            "type": "number",
            "description": "Sales Order ID",
            "example": 6
          },
          "salesorder_no": {
            "type": "string",
            "description": "Sales Order Number",
            "example": "SO-000000006"
          },
          "customer_name": {
            "type": "string",
            "description": "Contact Name (Customer)",
            "example": "Pelanggan Umum"
          },
          "picklist_id": {
            "type": "number",
            "description": "Picklist ID",
            "example": 3
          },
          "picklist_no": {
            "type": "number",
            "description": "Picklist Number",
            "example": "PICK-000000003"
          },
          "invoice_no": {
            "type": "number",
            "description": "Invoice Number",
            "example": "INV-000000003"
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2018-10-20T17:00:00.000Z"
          },
          "created_date": {
            "type": "string",
            "format": "date",
            "description": "Created Date",
            "example": "2018-10-20T17:00:00.000Z"
          },
          "source": {
            "type": "string",
            "description": "Source",
            "example": 1
          },
          "source_name": {
            "type": "string",
            "description": "Source Name",
            "example": "Internal"
          },
          "shipper": {
            "type": "number",
            "description": "Shipper",
            "example": "JNE"
          },
          "due_date": {
            "type": "number",
            "description": "Payment Due Date",
            "example": 0
          },
          "store_id": {
            "type": "string",
            "description": "Store ID",
            "example": 1
          },
          "store_name": {
            "type": "string",
            "description": "Store Name",
            "example": "Internal"
          },
          "shipping_full_name": {
            "type": "string",
            "description": "Shipping Full Name (Receiver)",
            "example": "Mikha"
          },
          "shipping_address": {
            "type": "string",
            "description": "Shipping Address",
            "example": "Kutabumi"
          },
          "shipping_area": {
            "type": "string",
            "description": "Shipping Address Area",
            "example": "Pasar Kemis"
          },
          "shipping_city": {
            "type": "string",
            "description": "Shipping Address City",
            "example": "Tangerang"
          },
          "shipping_province": {
            "type": "string",
            "description": "Shipping Address Province",
            "example": "Banten"
          },
          "shipping_post_code": {
            "type": "string",
            "description": "Shipping Address Post Code",
            "example": 11750
          },
          "shipping_country": {
            "type": "string",
            "description": "Shipping Address Country",
            "example": "Indonesia"
          },
          "ship_address": {
            "type": "string",
            "description": "Shipping Full Address",
            "example": "KutabumiPasar Kemis\\r\\nTangerang\\r\\nBanten\\r\\n11750"
          },
          "tracking_no": {
            "type": "string",
            "description": "Tracking Number",
            "example": "TRC-00000001"
          },
          "is_tax_included": {
            "type": "boolean",
            "description": "Wether Tax Included",
            "example": false
          },
          "note": {
            "type": "string",
            "description": "Note",
            "example": "Kaos Dreamcatcher"
          },
          "sub_total": {
            "type": "string",
            "description": "Sub Total",
            "example": 120000
          },
          "total_disc": {
            "type": "string",
            "description": "Total Discount",
            "example": 0
          },
          "total_tax": {
            "type": "string",
            "description": "Total Tax",
            "example": 0
          },
          "grand_total": {
            "type": "string",
            "description": "Grand Total",
            "example": 120000
          },
          "ref_no": {
            "type": "string",
            "description": "Reference Number",
            "example": "00099"
          },
          "location_id": {
            "type": "number",
            "description": "Location ID",
            "example": -1
          },
          "is_canceled": {
            "type": "boolean",
            "description": "Wether Order is Canceled",
            "example": false
          },
          "cancel_reason": {
            "type": "string",
            "description": "Cancel Reason",
            "example": ""
          },
          "is_paid": {
            "type": "boolean",
            "description": "Wether Order have been Paid",
            "example": true
          },
          "channel_status": {
            "type": "string",
            "description": "Channel Status",
            "example": "paid"
          },
          "shipping_cost": {
            "type": "string",
            "description": "Shipping Cost",
            "example": 5000
          },
          "insurance_cost": {
            "type": "string",
            "description": "Insurance Cost",
            "example": 5000
          },
          "contact_id": {
            "type": "number",
            "description": "Contact ID",
            "example": null
          },
          "payment_method": {
            "type": "string",
            "description": "Payment Method",
            "example": null
          },
          "cancel_reason_detail": {
            "type": "string",
            "description": "Cancel reason",
            "example": null
          },
          "last_modified": {
            "type": "date",
            "description": "Last modified date",
            "example": "2020-03-29T05:05:27.326Z"
          },
          "register_session_id": {
            "type": "number",
            "description": "Register session ID",
            "example": null
          },
          "user_name": {
            "type": "string",
            "description": "Username",
            "example": null
          },
          "dlvmthdcd": {
            "type": "string",
            "description": null,
            "example": null
          },
          "dlvetprscd": {
            "type": "string",
            "description": null,
            "example": null
          },
          "dlvetprsnm": {
            "type": "string",
            "description": null,
            "example": null
          },
          "dlvno": {
            "type": "string",
            "description": null,
            "example": null
          },
          "ordprdseq": {
            "type": "string",
            "description": null,
            "example": null
          },
          "marked_as_complete": {
            "type": "boolean",
            "description": null,
            "example": null
          },
          "is_tracked": {
            "type": "boolean",
            "description": null,
            "example": null
          },
          "store_so_number": {
            "type": "string",
            "description": null,
            "example": null
          },
          "is_deleted_from_picklist": {
            "type": "boolean",
            "description": "Is Deleted",
            "example": false
          },
          "dropshipper": {
            "type": "string",
            "description": "Dropshipper",
            "example": null
          },
          "dropshipper_address": {
            "type": "string",
            "description": "Dropshipper Address",
            "example": null
          },
          "is_shipped": {
            "type": "boolean",
            "description": "Is shipped",
            "example": null
          },
          "received_date": {
            "type": "string",
            "description": "Is shipped",
            "example": null
          },
          "salesmen_id": {
            "type": "number",
            "description": "Salesman ID",
            "example": null
          },
          "shipping_phone": {
            "type": "string",
            "description": "Is shipped",
            "example": "083899988999"
          },
          "escrow_amount": {
            "type": "string",
            "description": "The escrow value is the value to be paid to the seller from the MP after deducting the admin fee.",
            "example": 315000
          },
          "is_acknowledge": {
            "type": "boolean",
            "description": null,
            "example": null
          },
          "acknowledge_status": {
            "type": "string",
            "description": "Acknowledge status",
            "example": null
          },
          "deleted_from_picklist_by": {
            "type": "string",
            "description": "Deleted by",
            "example": null
          },
          "add_disc": {
            "type": "string",
            "description": null,
            "example": "0.0000"
          },
          "add_fee": {
            "type": "string",
            "description": null,
            "example": "0.0000"
          },
          "is_label_printed": {
            "type": "boolean",
            "description": "Label printed",
            "example": false
          },
          "is_invoice_printed": {
            "type": "boolean",
            "description": "Invoice printed",
            "example": false
          },
          "total_amount_mp": {
            "type": "number",
            "description": "Total amount mp",
            "example": null
          },
          "internal_do_number": {
            "type": "string",
            "description": "Internal DO Number",
            "example": null
          },
          "internal_so_number": {
            "type": "string",
            "description": "Internal SO Number",
            "example": null
          },
          "tracking_number": {
            "type": "string",
            "description": "Tracking Number",
            "example": null
          },
          "courier": {
            "type": "string",
            "description": "Courier",
            "example": null
          },
          "closure_id": {
            "type": "number",
            "description": "Closure ID",
            "example": null
          },
          "username": {
            "type": "string",
            "description": "Username",
            "example": null
          },
          "is_po": {
            "type": "boolean",
            "description": "Is PreOrder",
            "example": false
          },
          "tn_created_date": {
            "type": "date",
            "description": null,
            "example": null
          },
          "picked_in": {
            "type": "string",
            "description": null,
            "example": null
          },
          "district_cd": {
            "type": "string",
            "description": null,
            "example": null
          },
          "sort_code": {
            "type": "string",
            "description": null,
            "example": null
          },
          "shipment_type": {
            "type": "string",
            "description": "Type of Shipment",
            "example": null
          },
          "status_details": {
            "type": "string",
            "description": "Status details",
            "example": null
          },
          "service_fee": {
            "type": "string",
            "description": "Service fee",
            "example": null
          },
          "items": {
            "type": "array",
            "description": "Insurance Cost",
            "items": {
              "type": "object",
              "properties": {
                "salesorder_detail_id": {
                  "type": "number",
                  "description": "Sales Order Detail ID",
                  "example": 7
                },
                "channel_order_detail_id": {
                  "type": "number",
                  "description": "Channel Order Detail ID",
                  "example": 0
                },
                "item_code": {
                  "type": "string",
                  "description": "Item Code",
                  "example": "BTY-L"
                },
                "description": {
                  "type": "string",
                  "description": "Item Description",
                  "example": "Kaos DreamCatcher Born to Be Yours"
                },
                "qty_in_base": {
                  "type": "string",
                  "description": "Quantity that will be purchased",
                  "example": 1
                },
                "unit": {
                  "type": "string",
                  "description": "Unit Name",
                  "example": "Buah"
                }
              }
            }
          }
        }
      },
      "getPacklistsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "salesorder_id": {
                  "type": "number",
                  "description": "Sales Order ID",
                  "example": 6
                },
                "salesorder_no": {
                  "type": "string",
                  "description": "Sales Order Number",
                  "example": "SO-000000006"
                },
                "customer_name": {
                  "type": "string",
                  "description": "Contact Name (Customer)",
                  "example": "Pelanggan Umum"
                },
                "picklist_id": {
                  "type": "number",
                  "description": "Picklist ID",
                  "example": 3
                },
                "picklist_no": {
                  "type": "number",
                  "description": "Picklist Number",
                  "example": "PICK-000000003"
                },
                "invoice_no": {
                  "type": "number",
                  "description": "Invoice Number",
                  "example": "INV-000000003"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "created_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Created Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "source": {
                  "type": "string",
                  "description": "Source",
                  "example": 1
                },
                "source_name": {
                  "type": "string",
                  "description": "Source Name",
                  "example": "Internal"
                },
                "shipper": {
                  "type": "number",
                  "description": "Shipper",
                  "example": "JNE"
                },
                "due_date": {
                  "type": "number",
                  "description": "Payment Due Date",
                  "example": 0
                },
                "store_id": {
                  "type": "string",
                  "description": "Store ID",
                  "example": 1
                },
                "store_name": {
                  "type": "string",
                  "description": "Store Name",
                  "example": "Internal"
                },
                "s_address": {
                  "type": "string",
                  "description": "Receiver Address",
                  "example": "Kutabumi"
                },
                "address": {
                  "type": "string",
                  "description": "Receiver Address",
                  "example": "Kutabumi"
                },
                "s_area": {
                  "type": "string",
                  "description": "Receiver Address Area",
                  "example": "Pasar Kemis"
                },
                "s_city": {
                  "type": "string",
                  "description": "Receiver Address City",
                  "example": "Tangerang"
                },
                "s_province": {
                  "type": "string",
                  "description": "Receiver Address Province",
                  "example": "Banten"
                },
                "s_post_code": {
                  "type": "string",
                  "description": "Receiver Address Post Code",
                  "example": 11750
                },
                "ship_address": {
                  "type": "string",
                  "description": "Shipping Full Address",
                  "example": "Kutabumi\\r\\nPasar Kemis\\r\\nTangerang\\r\\nBanten\\r\\n11750"
                },
                "marketplace_status": {
                  "type": "string",
                  "description": "Market Place Status",
                  "example": "paid"
                },
                "tracking_no": {
                  "type": "string",
                  "description": "Tracking Number",
                  "example": "TRC-00000001"
                },
                "ref_no": {
                  "type": "string",
                  "description": "Tracking Number",
                  "example": null
                },
                "store": {
                  "type": "string",
                  "description": "Store name",
                  "example": null
                },
                "shipment_type": {
                  "type": "string",
                  "description": "Shipment type",
                  "example": null
                },
                "status_details": {
                  "type": "string",
                  "description": "Status details",
                  "example": null
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getPicklistResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "salesorder_id": {
                  "type": "number",
                  "description": "Sales Order ID",
                  "example": 6
                },
                "salesorder_no": {
                  "type": "string",
                  "description": "Sales Order Number",
                  "example": "SO-000000006"
                },
                "customer_name": {
                  "type": "string",
                  "description": "Contact Name (Customer)",
                  "example": "Pelanggan Umum"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "created_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Created Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "location_name": {
                  "type": "string",
                  "description": "Location Name",
                  "example": "Pusat"
                },
                "grand_total": {
                  "type": "string",
                  "description": "Grand Total",
                  "example": 120000
                },
                "source_name": {
                  "type": "string",
                  "description": "Source Name",
                  "example": "Internal"
                },
                "note": {
                  "type": "string",
                  "description": "Purchase Order Note",
                  "example": "Tlg packingan yg aman ya kk"
                },
                "is_paid": {
                  "type": "boolean",
                  "description": "Wether Purchase Order have been Paid",
                  "example": true
                },
                "is_canceled": {
                  "type": "boolean",
                  "description": "Wether Purchase Order have been Canceled",
                  "example": false
                },
                "picklist_id": {
                  "type": "number",
                  "description": "Picklist ID",
                  "example": 1
                },
                "shipper": {
                  "type": "number",
                  "description": "Shipper",
                  "example": "JNE"
                },
                "due_date": {
                  "type": "number",
                  "description": "Payment Due Date",
                  "example": 30
                },
                "stock_status": {
                  "type": "number",
                  "description": "Stock Status",
                  "example": 1
                },
                "store_name": {
                  "type": "number",
                  "description": "Store Name",
                  "example": "Shopee"
                },
                "total_qty": {
                  "type": "number",
                  "description": "Total quantity",
                  "example": 5
                },
                "dropshipper": {
                  "type": "string",
                  "description": "dropshipper",
                  "example": null
                },
                "internal_do_number": {
                  "type": "number",
                  "description": "Internal do number",
                  "example": null
                },
                "internal_so_number": {
                  "type": "number",
                  "description": "Internal so number",
                  "example": null
                },
                "is_label_printed": {
                  "type": "boolean",
                  "description": "Has label printed",
                  "example": true
                },
                "picked_in": {
                  "type": "string",
                  "description": "Picked in",
                  "example": null
                },
                "picklist_no": {
                  "type": "string",
                  "description": "Picked number",
                  "example": null
                },
                "deleted_from_picklist_by": {
                  "type": "string",
                  "description": "Deleted from picklist",
                  "example": null
                },
                "shipment_type": {
                  "type": "number",
                  "description": "Shipment type",
                  "example": 1
                },
                "status_details": {
                  "type": "string",
                  "description": "Status detail",
                  "example": "(unpaid)"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getPickResponse": {
        "type": "object",
        "properties": {
          "completed_date": {
            "type": "date",
            "description": "The completed date of this picklist",
            "example": "2020-12-20T17:00:00.000Z"
          },
          "created_date": {
            "type": "date",
            "description": "The completed date of this picklist",
            "example": "SO-000000006"
          },
          "is_completed": {
            "type": "boolean",
            "description": "Is Picklist Completed (true/false)",
            "example": true
          },
          "picklist_id": {
            "type": "number",
            "description": "Picklist ID",
            "example": 3
          },
          "picklist_no": {
            "type": "number",
            "description": "Picklist Number",
            "example": "PICK-000000003"
          },
          "note": {
            "type": "string",
            "description": "The note for this picklist",
            "example": "This is note"
          },
          "items": {
            "type": "array",
            "description": "Insurance Cost",
            "items": {
              "type": "object",
              "properties": {
                "bundle_full_name": {
                  "type": "string",
                  "description": "Bundle Name",
                  "example": null
                },
                "bundle_item_id": {
                  "type": "number",
                  "description": "Bundle Item Id",
                  "example": 0
                },
                "channel_status": {
                  "type": "string",
                  "description": "Channel Status",
                  "example": "Pending"
                },
                "end_qty": {
                  "type": "string",
                  "description": "Qty for this product",
                  "example": "988"
                },
                "qty_ordered": {
                  "type": "string",
                  "description": "Qty ordered for this product",
                  "example": "3"
                },
                "qty_picked": {
                  "type": "string",
                  "description": "Qty picked for this product",
                  "example": "1"
                },
                "item_code": {
                  "type": "string",
                  "description": "SKU for this product",
                  "example": "0104031915MR-XXL"
                },
                "item_full_name": {
                  "type": "string",
                  "description": "Item Name for this product",
                  "example": "0104031915MR-XXL - 3SECOND Men Jacket 040319"
                },
                "item_id": {
                  "type": "number",
                  "description": "Item Id for this product",
                  "example": 104703
                },
                "salesorder_id": {
                  "type": "number",
                  "description": "Sales Order ID",
                  "example": 0
                },
                "salesorder_no": {
                  "type": "string",
                  "description": "Sales Order Number",
                  "example": "[auto]"
                },
                "contact_id": {
                  "type": "number",
                  "description": "Contact ID (Customer)",
                  "example": 1
                },
                "customer_name": {
                  "type": "string",
                  "description": "Contact Name (Customer)",
                  "example": "Radit"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "created_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Created Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "location_id": {
                  "type": "number",
                  "description": "Header Location ID",
                  "example": -1
                },
                "source": {
                  "type": "number",
                  "description": "Purchase Source [1 = Internal]",
                  "example": 1
                },
                "store_id": {
                  "type": "string",
                  "description": "Store ID",
                  "example": 1
                },
                "tracking_number": {
                  "type": "string",
                  "description": "Tracking number",
                  "example": null
                },
                "courier": {
                  "type": "string",
                  "description": "Courier",
                  "example": "J&T REG"
                },
                "store_name": {
                  "type": "string",
                  "description": "Store name",
                  "example": "Store Name"
                },
                "location_name": {
                  "type": "string",
                  "description": "Header Location Name",
                  "example": "Pusat"
                },
                "shipper": {
                  "type": "string",
                  "description": "Shipper",
                  "example": "J&T REG"
                }
              }
            }
          }
        }
      },
      "getPointHistoryResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Transaction Date",
                  "example": "2019-01-08T08:25:14.521Z"
                },
                "source": {
                  "type": "string",
                  "description": "Loyalty Point Source",
                  "example": 3
                },
                "order_no": {
                  "type": "string",
                  "description": "Document Number",
                  "example": "SO-000000021"
                },
                "grand_total": {
                  "type": "string",
                  "description": "Sales Purchase Grand Total",
                  "example": 180000
                },
                "point_gain": {
                  "type": "string",
                  "description": "Loyalty Point Gain",
                  "example": 18
                },
                "note": {
                  "type": "string",
                  "description": "Loyalty Point Note",
                  "example": "Adjustment for birthday"
                }
              }
            }
          }
        }
      },
      "getPriceListResponse": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "description": "List Channels",
            "items": {
              "type": "object",
              "properties": {
                "store_id": {
                  "type": "number",
                  "description": "Store ID",
                  "example": 359
                },
                "channel_name": {
                  "type": "number",
                  "description": "Channel Name",
                  "example": "Elevenia"
                },
                "store_name": {
                  "type": "string",
                  "description": "Store Name",
                  "example": "truzteeshop"
                }
              }
            }
          },
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "item_group_id": {
                  "type": "number",
                  "description": "Item Group ID",
                  "example": 1
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 2273
                },
                "item_name": {
                  "type": "string",
                  "description": "Item Name",
                  "example": "Baju Corak Carik Warna Warni"
                },
                "item_code": {
                  "type": "string",
                  "description": "Item Code",
                  "example": "BLACK"
                },
                "prices": {
                  "type": "array",
                  "description": "List Item Prices",
                  "items": {
                    "type": "object",
                    "properties": {
                      "store_id": {
                        "type": "number",
                        "description": "Store ID",
                        "example": 359
                      },
                      "price": {
                        "type": "number",
                        "description": "Item Price on Store",
                        "example": 100000
                      }
                    }
                  }
                },
                "brand_name": {
                  "type": "string",
                  "description": "Brand name",
                  "example": "Brand Name"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getProductListingResponse": {
        "type": "object",
        "properties": {
          "store_id": {
            "type": "number",
            "description": "Store ID",
            "example": 1
          },
          "channel_id": {
            "type": "number",
            "description": "Channel ID",
            "example": 2
          },
          "item_group_id": {
            "type": "number",
            "description": "Item Group ID",
            "example": 10
          },
          "mp_group_id": {
            "type": "number",
            "description": "Marketplace Group ID",
            "example": 1
          },
          "sell_price": {
            "type": "number",
            "description": "Sell Price",
            "example": 20000000
          },
          "item_group_name": {
            "type": "number",
            "description": "Item Group Name",
            "example": 1
          },
          "brand_name": {
            "type": "string",
            "description": "Brand Name",
            "example": "ASUS ROG"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "example": "<p>Laptop ROG</p>"
          },
          "package_length": {
            "type": "number",
            "description": "Package Length",
            "example": 100
          },
          "package_width": {
            "type": "number",
            "description": "Package Width",
            "example": 100
          },
          "package_height": {
            "type": "number",
            "description": "Package Height",
            "example": 100
          },
          "package_weight": {
            "type": "number",
            "description": "Package Weight",
            "example": 100
          },
          "package_content": {
            "type": "string",
            "description": "Package Content",
            "example": "Laptop"
          },
          "channel_category_id": {
            "type": "number",
            "description": "Channel Category ID",
            "example": 1
          },
          "images": {
            "type": "array",
            "description": "List Images",
            "items": {
              "type": "object",
              "properties": {
                "group_image_id": {
                  "type": "number",
                  "description": "Group Image ID",
                  "example": 1
                },
                "url": {
                  "type": "string",
                  "description": "Image URL",
                  "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Image Thumbnail",
                  "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                },
                "file_name": {
                  "type": "string",
                  "description": "Image Name",
                  "example": "fde755988e7d8931bea57bdb3c8a64e6"
                },
                "sequence_number": {
                  "type": "number",
                  "description": "Image Sequence Number",
                  "example": 0
                }
              }
            }
          },
          "variations": {
            "type": "array",
            "description": "List Item Variations",
            "items": {
              "type": "object",
              "properties": {
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 1
                },
                "channel_id": {
                  "type": "number",
                  "description": "Channel ID",
                  "example": 1
                },
                "store_id": {
                  "type": "number",
                  "description": "Store ID",
                  "example": 20
                },
                "channel_url": {
                  "type": "string",
                  "description": "Channel URL",
                  "example": "https://www.bukalapak.com/p/category/xxxxx"
                },
                "channel_item_id": {
                  "type": "number",
                  "description": "Channel Item ID",
                  "example": 1
                },
                "channel_group_id": {
                  "type": "number",
                  "description": "Channel Group ID",
                  "example": 2
                },
                "sell_price": {
                  "type": "number",
                  "description": "Sell Price",
                  "example": 20000000
                },
                "item_code": {
                  "type": "string",
                  "description": "Item Code",
                  "example": "SKU-001"
                },
                "variation_values": {
                  "type": "array",
                  "description": "Item Variations",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Variation Label",
                        "example": "color_family"
                      },
                      "value": {
                        "type": "string",
                        "description": "Variation Value",
                        "example": "Black"
                      }
                    }
                  }
                },
                "variation_name": {
                  "type": "string",
                  "description": "Variation Name",
                  "example": "Variation name"
                }
              }
            }
          },
          "variation_images": {
            "type": "array",
            "description": "List Item Variations",
            "items": {
              "type": "object",
              "properties": {
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 1
                },
                "store_id": {
                  "type": "number",
                  "description": "Store ID",
                  "example": 1
                },
                "images": {
                  "type": "array",
                  "description": "List Images",
                  "items": {
                    "type": "object",
                    "properties": {
                      "group_image_id": {
                        "type": "number",
                        "description": "Group Image ID",
                        "example": 1
                      },
                      "url": {
                        "type": "string",
                        "description": "Image URL",
                        "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "thumbnail": {
                        "type": "string",
                        "description": "Image Thumbnail",
                        "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "file_name": {
                        "type": "string",
                        "description": "Image Name",
                        "example": "fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "sequence_number": {
                        "type": "number",
                        "description": "Image Sequence Number",
                        "example": 0
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "getProductResponse": {
        "type": "object",
        "properties": {
          "item_group_id": {
            "type": "number",
            "description": "Item Group ID",
            "example": 2
          },
          "item_group_name": {
            "type": "string",
            "description": "Item Group Name",
            "example": "10.4 10W40"
          },
          "description": {
            "type": "string",
            "description": "Item Description",
            "example": "semi-synthetic lubricant for 4-stroke motorcycles that ensures"
          },
          "notes": {
            "type": "string",
            "description": "Item Description",
            "example": "semi-synthetic lubricant for 4-stroke motorcycles that ensures"
          },
          "sell_tax_id": {
            "type": "number",
            "description": "Sell Tax ID",
            "example": -1
          },
          "buy_tax_id": {
            "type": "number",
            "description": "Buy Tax ID",
            "example": -1
          },
          "sales_acct_id": {
            "type": "number",
            "description": "Sales Account ID",
            "example": 28
          },
          "cogs_acct_id": {
            "type": "number",
            "description": "Cost of Goods Sold (COGS) Account Account ID",
            "example": 30
          },
          "invt_acct_id": {
            "type": "number",
            "description": "Inventory Account ID",
            "example": 4
          },
          "sell_this": {
            "type": "boolean",
            "description": "Wether Item can be sell",
            "example": true
          },
          "buy_this": {
            "type": "boolean",
            "description": "Wether Item can be bought",
            "example": true
          },
          "stock_this": {
            "type": "boolean",
            "description": "Wether Item can be stock",
            "example": true
          },
          "dropship_this": {
            "type": "boolean",
            "description": "Wether Item can be drop ship",
            "example": false
          },
          "uom_id": {
            "type": "number",
            "description": "Unit of Measure ID",
            "example": -1
          },
          "sell_unit": {
            "type": "string",
            "description": "Sell Unit",
            "example": "Botol"
          },
          "buy_unit": {
            "type": "string",
            "description": "Buy Unit",
            "example": "Botol"
          },
          "is_active": {
            "type": "boolean",
            "description": "Wether Item is active",
            "example": true
          },
          "purch_acct_id": {
            "type": "number",
            "description": "Purchase Account ID",
            "example": -1
          },
          "status": {
            "type": "number",
            "description": "Status",
            "example": "null"
          },
          "item_category_id": {
            "type": "number",
            "description": "Item Category ID",
            "example": 454
          },
          "package_content": {
            "type": "string",
            "description": "Package Content",
            "example": "Plastik and How to Use"
          },
          "package_weight": {
            "type": "string",
            "description": "Package Weight",
            "example": 1000
          },
          "package_height": {
            "type": "string",
            "description": "Package Height",
            "example": 29
          },
          "package_width": {
            "type": "string",
            "description": "Package Width",
            "example": 49
          },
          "package_length": {
            "type": "string",
            "description": "Package Length",
            "example": 39.5
          },
          "variations": {
            "type": "array",
            "description": "List Item Variations",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Variation Label",
                  "example": "color_family"
                },
                "values": {
                  "type": "array",
                  "description": "List Variation Values",
                  "items": {
                    "type": "string",
                    "example": "Black"
                  }
                }
              }
            }
          },
          "sell_price": {
            "type": "string",
            "description": "Item Sell Price",
            "example": 3600000
          },
          "buy_price": {
            "type": "string",
            "description": "Item Buy Price",
            "example": 1500000
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "description": "Last Modified Time",
            "example": "2019-01-07T07:53:35.100Z"
          },
          "brand_id": {
            "type": "number",
            "description": "Brand ID",
            "example": 11087
          },
          "rop": {
            "type": "number",
            "description": "Return of Purchase",
            "example": 10
          },
          "is_favourite": {
            "type": "boolean",
            "description": "Wether Item a favourite",
            "example": false
          },
          "use_single_image_set": {
            "type": "boolean",
            "description": "Wether Item use Single Image Set",
            "example": false
          },
          "use_serial_number": {
            "type": "boolean",
            "description": "Wether Item use Serial Number",
            "example": true
          },
          "brand_name": {
            "type": "string",
            "description": "Another Brand Name",
            "example": "Mikoooo"
          },
          "sell_tax_name": {
            "type": "string",
            "description": "Sell Tax Name",
            "example": "No Tax"
          },
          "buy_tax_name": {
            "type": "string",
            "description": "Buy Tax Name",
            "example": "No Tax"
          },
          "sales_acct_name": {
            "type": "string",
            "description": "Sales Account Name",
            "example": "4-4000 - Penjualan"
          },
          "invt_acct_name": {
            "type": "string",
            "description": "Inventory Account Name",
            "example": "1-1200 - Persediaan Barang"
          },
          "cogs_acct_name": {
            "type": "string",
            "description": "Cost of Goods Sold (COGS) Account Name",
            "example": "5-5000 - Harga Pokok Penjualan (COGS)"
          },
          "purch_acct_name": {
            "type": "string",
            "description": "Purchase Account Name",
            "example": "5-5000 - Harga Pokok Penjualan (COGS)"
          },
          "uom_name": {
            "type": "string",
            "description": "Unit of Measure Name",
            "example": "Buah"
          },
          "product_skus": {
            "type": "array",
            "description": "List Item SKUs",
            "items": {
              "type": "object",
              "properties": {
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 2270
                },
                "item_code": {
                  "type": "string",
                  "description": "Item Code",
                  "example": "RIC-COO-MIY-RCM-PIN"
                },
                "sell_price": {
                  "type": "number",
                  "description": "Item Sell Price Variant",
                  "example": 240000
                },
                "end_qty": {
                  "type": "number",
                  "description": "Total Inventory on Hand",
                  "example": 10
                },
                "average_cost": {
                  "type": "number",
                  "description": "Average Cost",
                  "example": 240000
                },
                "amount": {
                  "type": "number",
                  "description": "Amount",
                  "example": 240000
                },
                "barcode": {
                  "type": "string",
                  "description": "Barcode",
                  "example": null
                },
                "variation_values": {
                  "type": "array",
                  "description": "Item Variations",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Variation Label",
                        "example": "color_family"
                      },
                      "value": {
                        "type": "string",
                        "description": "Variation Value",
                        "example": "Black"
                      }
                    }
                  }
                },
                "prices": {
                  "type": "array",
                  "description": "List Price on Channels",
                  "items": {
                    "type": "object",
                    "properties": {
                      "store_id": {
                        "type": "number",
                        "description": "Store ID",
                        "example": 125
                      },
                      "channel_id": {
                        "type": "number",
                        "description": "Channel ID",
                        "example": 4
                      },
                      "sell_price": {
                        "type": "number",
                        "description": "Sell Price on Channel",
                        "example": 260000
                      }
                    }
                  }
                },
                "images": {
                  "type": "array",
                  "description": "List Item Variations",
                  "items": {
                    "type": "object",
                    "properties": {
                      "item_id": {
                        "type": "number",
                        "description": "Item ID",
                        "example": 1028
                      },
                      "image_id": {
                        "type": "number",
                        "description": "Image ID",
                        "example": 4
                      },
                      "cloud_key": {
                        "type": "string",
                        "description": "Image URL",
                        "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "thumbnail": {
                        "type": "string",
                        "description": "Image Thumbnail",
                        "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "file_name": {
                        "type": "string",
                        "description": "Image Name",
                        "example": "fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "sequence_number": {
                        "type": "number",
                        "description": "Image Sequence Number",
                        "example": 0
                      },
                      "channel_info": {
                        "type": "array",
                        "description": "List Image URL on Channels",
                        "items": {
                          "type": "object",
                          "properties": {
                            "image_url": {
                              "type": "string",
                              "description": "Image URL",
                              "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                            },
                            "channel_id": {
                              "type": "number",
                              "description": "Channel ID",
                              "example": 4
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "channels": {
            "type": "array",
            "description": "List Channels",
            "items": {
              "type": "object",
              "properties": {
                "channel_id": {
                  "type": "number",
                  "description": "Channel ID",
                  "example": 4
                },
                "channel_name": {
                  "type": "string",
                  "description": "Channel Name",
                  "example": "Lazada"
                },
                "store_name": {
                  "type": "string",
                  "description": "Store Name",
                  "example": "Dreamcatcher"
                },
                "store_id": {
                  "type": "number",
                  "description": "Store ID",
                  "example": 125
                },
                "extra_info": {
                  "type": "object",
                  "description": "Extra Info [Different for Every Channels]",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "Channel Token",
                      "example": "8bf64619-ss21-8593-123-gjoeii2u82141"
                    },
                    "clientName": {
                      "type": "string",
                      "description": "Channel Client Name",
                      "example": "bma-lko-weq-17432"
                    },
                    "merchantId": {
                      "type": "string",
                      "description": "Merchant ID",
                      "example": "DES-17432"
                    },
                    "clientSecret": {
                      "type": "string",
                      "description": "Client Secret Key",
                      "example": "dreamcatcher01212"
                    },
                    "pickupPoints": {
                      "type": "array",
                      "description": "Channel Pickup Points",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Pickup Point Code",
                            "example": "BTS-17265-009"
                          },
                          "name": {
                            "type": "string",
                            "description": "Pickup Point Name",
                            "example": "PT Bersama"
                          },
                          "updatedBy": {
                            "type": "string",
                            "description": "Pickup Point Updated By",
                            "example": "client"
                          },
                          "createdDate": {
                            "type": "number",
                            "description": "Pickup Point Created Date",
                            "example": 1446835996000
                          },
                          "updatedDate": {
                            "type": "number",
                            "description": "Pickup Point Updated Date",
                            "example": 1544427680388
                          }
                        }
                      }
                    },
                    "refreshToken": {
                      "type": "string",
                      "description": "Refresh Token",
                      "example": "BTS-17265-009-BTS-17265-009-BTS-17265-009"
                    },
                    "clientPassword": {
                      "type": "string",
                      "description": "Client Password",
                      "example": "pass121314"
                    },
                    "merchantPassword": {
                      "type": "string",
                      "description": "Merchant Password",
                      "example": "pass121314"
                    },
                    "merchantUserName": {
                      "type": "string",
                      "description": "Merchant Username",
                      "example": "dreamcatcher"
                    }
                  }
                },
                "channel_full_name": {
                  "type": "string",
                  "description": "Channel Full Name",
                  "example": "Lazada - Dreamcatcher"
                },
                "attributes": {
                  "type": "array",
                  "description": "Channel Attributes [Different for Every Channels]",
                  "items": {
                    "type": "object"
                  }
                },
                "channel_url": {
                  "type": "string",
                  "description": "Channel URL",
                  "example": "https://lazada.co.id"
                },
                "channel_category_id": {
                  "type": "string",
                  "description": "Channel Category ID",
                  "example": 14638
                },
                "sell_here": {
                  "type": "boolean",
                  "description": "Wether Item will be sell in this channel",
                  "example": true
                },
                "channel_item_id": {
                  "type": "string",
                  "description": "Channel Item ID",
                  "example": 1241241
                }
              }
            }
          },
          "min": {
            "type": "number",
            "description": "Minimal Item Purchase",
            "example": 1
          },
          "max": {
            "type": "number",
            "description": "Maximal Item Purchase",
            "example": 10
          },
          "selected_brand_name": {
            "type": "string",
            "description": "Selected Brand Name",
            "example": "Miyako"
          },
          "bom_id": {
            "type": "number",
            "description": null,
            "example": null
          },
          "store_priority_qty_treshold": {
            "type": "number",
            "description": "Store priority Quantity",
            "example": null
          },
          "created_date": {
            "type": "string",
            "format": "date-time",
            "description": "Last Modified Time",
            "example": "2019-01-07T07:53:35.100Z"
          },
          "lead_time": {
            "type": "string",
            "description": "Lead time",
            "example": null
          },
          "is_po": {
            "type": "boolean",
            "description": "Is ProOrder",
            "example": null
          },
          "use_batch_number": {
            "type": "boolean",
            "description": null,
            "example": null
          },
          "bundles": {
            "type": "array",
            "description": "List Channels",
            "items": {
              "type": "object",
              "properties": {
                "bom_comp_id": {
                  "type": "number",
                  "description": null,
                  "example": 1
                },
                "item_code": {
                  "type": "string",
                  "description": "Item Code",
                  "example": "RIC-COO-MIY-RCM-PIN"
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 1
                },
                "item_name": {
                  "type": "string",
                  "description": "Item name",
                  "example": "Barang 1"
                },
                "qty": {
                  "type": "number",
                  "description": "Quantity",
                  "example": 5
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Thumbail URL",
                  "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                },
                "unit": {
                  "type": "string",
                  "description": "Unit",
                  "example": null
                },
                "uom_id": {
                  "type": "number",
                  "description": "Unit of Measure ID",
                  "example": -1
                }
              }
            }
          }
        }
      },
      "getProductsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "item_group_id": {
                  "type": "number",
                  "description": "Item Group ID",
                  "example": 1931
                },
                "item_name": {
                  "type": "string",
                  "description": "Item Name",
                  "example": "Aegis Hospitality Brankas Digital Kecil Aegis Safe Deposit Box Hotel A2143 - Hitam"
                },
                "last_modified": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last Modified Time",
                  "example": "2019-01-07T07:53:35.100Z"
                },
                "variations": {
                  "type": "array",
                  "description": "List Item Variations",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Variation Label",
                        "example": "color_family"
                      },
                      "values": {
                        "type": "array",
                        "description": "List Variation Values",
                        "items": {
                          "type": "string",
                          "example": "Black"
                        }
                      }
                    }
                  }
                },
                "item_category_id": {
                  "type": "number",
                  "description": "Item Category ID",
                  "example": 690
                },
                "variants": {
                  "type": "array",
                  "description": "List Item Variants",
                  "items": {
                    "type": "object",
                    "properties": {
                      "item_group_id": {
                        "type": "number",
                        "description": "Item Group ID",
                        "example": 1931
                      },
                      "item_id": {
                        "type": "number",
                        "description": "Item ID",
                        "example": 2976
                      },
                      "item_code": {
                        "type": "string",
                        "description": "Item Code/SKU",
                        "example": "A2143"
                      },
                      "end_qty": {
                        "type": "number",
                        "description": "Total Inventory on Hand",
                        "example": 10
                      },
                      "order_qty": {
                        "type": "number",
                        "description": "Total Inventory on Order",
                        "example": 0
                      },
                      "item_name": {
                        "type": "string",
                        "description": "Item Name",
                        "example": "Aegis Hospitality Brankas Digital Kecil Aegis Safe Deposit Box Hotel A2143 - Hitam"
                      },
                      "available_qty": {
                        "type": "number",
                        "description": "Total Available Inventory",
                        "example": 10
                      },
                      "sell_price": {
                        "type": "number",
                        "description": "Item Sell Price",
                        "example": 3600000
                      },
                      "variation_values": {
                        "type": "array",
                        "description": "Item Variations",
                        "items": {
                          "type": "object",
                          "properties": {
                            "label": {
                              "type": "string",
                              "description": "Variation Label",
                              "example": "color_family"
                            },
                            "value": {
                              "type": "string",
                              "description": "Variation Value",
                              "example": "Black"
                            }
                          }
                        }
                      },
                      "is_bundle": {
                        "type": "boolean",
                        "description": "Is bundle",
                        "example": false
                      },
                      "thumbnail": {
                        "type": "string",
                        "description": "Item Thumbnail",
                        "example": "https://jubelio.blob.core.windows.net/images/sng8ijwwqasgxnomjslrjw/4469a64e-8623-4a8d-9792-f777ff434e97_thumb.jpeg"
                      },
                      "barcode": {
                        "type": "string",
                        "description": "Item Barcode",
                        "example": 128124871847
                      },
                      "tax_rate": {
                        "type": "number",
                        "description": "Item Tax Rate",
                        "example": 10
                      },
                      "store_names": {
                        "type": "array",
                        "description": "List Store Names where Item Exists",
                        "items": {
                          "type": "object",
                          "properties": {
                            "store_name": {
                              "type": "string",
                              "description": "Store Name",
                              "example": "Lazada"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "online_status": {
                  "type": "array",
                  "description": "List Channel where Item Exists",
                  "items": {
                    "type": "object",
                    "properties": {
                      "channel_id": {
                        "type": "number",
                        "description": "Channel ID",
                        "example": 4
                      },
                      "store_id": {
                        "type": "number",
                        "description": "Store ID",
                        "example": 553
                      },
                      "store_name": {
                        "type": "string",
                        "description": "Store Name",
                        "example": "Lazada"
                      },
                      "channel_group_id": {
                        "type": "string",
                        "description": "Channel Group ID",
                        "example": 1931
                      },
                      "channel_url": {
                        "type": "number",
                        "description": "Channel URL",
                        "example": "http://www.lazada.co.id/-i402292239-s443195538.html"
                      },
                      "shop_id": {
                        "type": "number",
                        "description": "Shop ID",
                        "example": 1
                      }
                    }
                  }
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Item Thumbnail",
                  "example": "https://jubelio.blob.core.windows.net/images/sng8ijwwqasgxnomjslrjw/4469a64e-8623-4a8d-9792-f777ff434e97_thumb.jpeg"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getProfileResponse": {
        "type": "object",
        "properties": {
          "contact_id": {
            "type": "number",
            "description": "Contact ID",
            "example": 2
          },
          "contact_name": {
            "type": "string",
            "description": "Contact Name",
            "example": "Abi Darda"
          },
          "email": {
            "type": "string",
            "description": "Contact Email",
            "example": "abi.darba@yahoo.com"
          },
          "is_loyalty_member": {
            "type": "boolean",
            "description": "Wether Contact a Loyalty Member",
            "example": true
          },
          "address": {
            "type": "string",
            "description": "Contact Full Adress",
            "example": "Jln sultan hasanudin gang walet mas rt"
          },
          "area": {
            "type": "string",
            "description": "Contact Adress Area",
            "example": "Pasar Kemis"
          },
          "city": {
            "type": "string",
            "description": "Contact Adress City",
            "example": "Tangerang"
          },
          "province": {
            "type": "string",
            "description": "Contact Adress Province",
            "example": "Banten"
          },
          "postcode": {
            "type": "string",
            "description": "Contact Adress Post Code",
            "example": 11750
          },
          "b_sex": {
            "type": "string",
            "description": "Contact Gender",
            "example": "L"
          },
          "b_birthday": {
            "type": "string",
            "format": "date",
            "description": "Contact Birth Day",
            "example": "2018-10-20T17:00:00.000Z"
          },
          "phone": {
            "type": "string",
            "description": "Contact Phone",
            "example": "082297770412"
          }
        }
      },
      "getPromotionResponse": {
        "type": "object",
        "properties": {
          "promotion_id": {
            "type": "number",
            "description": "Promotion ID",
            "example": 0
          },
          "promotion_name": {
            "type": "string",
            "description": "Promotion Name",
            "example": "BLACK FRIDAY"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Start Promotion Date",
            "example": "2018-10-02T04:00:00.000Z"
          },
          "end_date": {
            "type": "string",
            "description": "End Promotion Date",
            "example": "2018-10-03T05:00:00.000Z"
          },
          "is_applied": {
            "type": "boolean",
            "description": "Wether Promotion Applied",
            "example": false
          },
          "channel_info": {
            "type": "array",
            "description": "List Channels Info",
            "items": {
              "type": "object",
              "properties": {
                "store_id": {
                  "type": "number",
                  "description": "Store ID",
                  "example": 359
                },
                "channel_id": {
                  "type": "number",
                  "description": "Channel ID",
                  "example": 64
                },
                "discount_id": {
                  "type": "number",
                  "description": "Discount ID",
                  "example": 1007180959
                }
              }
            }
          },
          "channels": {
            "type": "array",
            "description": "List Channels where Promotions applied",
            "items": {
              "type": "object",
              "properties": {
                "store_id": {
                  "type": "number",
                  "description": "Store ID",
                  "example": 359
                },
                "channel_id": {
                  "type": "number",
                  "description": "Channel ID",
                  "example": 64
                },
                "channel_full_name": {
                  "type": "number",
                  "description": "Channel Full Name",
                  "example": "Bukalapak"
                }
              }
            }
          },
          "details": {
            "type": "array",
            "description": "List Promotion Detail",
            "items": {
              "type": "object",
              "properties": {
                "promotion_detail_id": {
                  "type": "number",
                  "description": "Promotion Detail ID",
                  "example": 0
                },
                "item_group_id": {
                  "type": "number",
                  "description": "Item Group ID",
                  "example": 20
                },
                "promotion_price": {
                  "type": "string",
                  "description": "Promotion Price",
                  "example": 300000
                },
                "item_group_name": {
                  "type": "string",
                  "description": "Item Group Name",
                  "example": "Gembok anti maling warna HITAM"
                },
                "price": {
                  "type": "string",
                  "description": "Item Price",
                  "example": 399000
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 1
                },
                "item_code": {
                  "type": "string",
                  "description": "Item code",
                  "example": null
                },
                "item_short_name": {
                  "type": "string",
                  "description": "Item short name",
                  "example": "Item 1"
                }
              }
            }
          }
        }
      },
      "getPromotionsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "promotion_id": {
                  "type": "number",
                  "description": "Promotion ID",
                  "example": 1
                },
                "start_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start Promotion Date",
                  "example": "2018-10-02T04:00:00.000Z"
                },
                "end_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "End Promotion Date",
                  "example": "2018-10-03T05:00:00.000Z"
                },
                "promotion_name": {
                  "type": "string",
                  "description": "Promotion Name",
                  "example": "BLACK FRIDAY"
                },
                "channels": {
                  "type": "array",
                  "description": "List Channels where Promotions applied",
                  "items": {
                    "type": "object",
                    "properties": {
                      "store_id": {
                        "type": "number",
                        "description": "Store ID",
                        "example": 359
                      },
                      "channel_id": {
                        "type": "number",
                        "description": "Channel ID",
                        "example": 64
                      },
                      "channel_full_name": {
                        "type": "string",
                        "description": "Channel Full Name",
                        "example": "Shopee - (20844418)"
                      },
                      "is_applied": {
                        "type": "boolean",
                        "description": "Is Applied",
                        "example": null
                      }
                    }
                  }
                },
                "channel_info": {
                  "type": "array",
                  "description": "List Channels Info",
                  "items": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "array",
                        "description": "Items channel info",
                        "items": {
                          "type": "object",
                          "properties": {
                            "item_id": {
                              "type": "number",
                              "description": "Item ID",
                              "example": 1
                            },
                            "purchase_limit": {
                              "type": "number",
                              "description": "Purchase limit",
                              "example": 0
                            },
                            "item_promotion_price": {
                              "type": "number",
                              "description": "Item promotion price",
                              "example": 316300
                            }
                          }
                        }
                      },
                      "store_id": {
                        "type": "number",
                        "description": "Store ID",
                        "example": 359
                      },
                      "channel_id": {
                        "type": "number",
                        "description": "Channel ID",
                        "example": 64
                      },
                      "discount_id": {
                        "type": "number",
                        "description": "Discount ID",
                        "example": 1007180959
                      }
                    }
                  }
                },
                "is_applied": {
                  "type": "boolean",
                  "description": "Wether Promotion Applied",
                  "example": true
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getPurchaseOrderResponse": {
        "type": "object",
        "properties": {
          "purchaseorder_id": {
            "type": "number",
            "description": "Purchase Order ID",
            "example": 0
          },
          "purchaseorder_no": {
            "type": "string",
            "description": "Purchase Order Number",
            "example": "PO-000000005"
          },
          "payment_method": {
            "type": "number",
            "description": "Payment Method",
            "example": -1
          },
          "contact_id": {
            "type": "number",
            "description": "Contact (Supplier) ID",
            "example": 2
          },
          "supplier_name": {
            "type": "string",
            "description": "Supplier Name",
            "example": "PTANYWAY"
          },
          "transaction_date": {
            "type": "string",
            "format": "date-time",
            "description": "Transaction Date",
            "example": "2018-10-02T04:00:00.000Z"
          },
          "created_date": {
            "type": "string",
            "format": "date-time",
            "description": "Created Date",
            "example": "2018-10-02T04:00:00.000Z"
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "description": "Last Modified Date",
            "example": "2018-11-02T04:00:00.000Z"
          },
          "is_tax_included": {
            "type": "boolean",
            "description": "Wether Tax Included",
            "example": false
          },
          "note": {
            "type": "string",
            "description": "Purchase Order Note",
            "example": "Note"
          },
          "sub_total": {
            "type": "string",
            "description": "Purchase Order sub Total",
            "example": 154000
          },
          "total_disc": {
            "type": "string",
            "description": "Purchase Order Total Discount",
            "example": 0
          },
          "total_tax": {
            "type": "string",
            "description": "Purchase Order Total Tax",
            "example": 0
          },
          "grand_total": {
            "type": "string",
            "description": "Purchase Order Grand Total",
            "example": 154000
          },
          "ref_no": {
            "type": "string",
            "description": "Reference Number",
            "example": 112233
          },
          "location_id": {
            "type": "number",
            "description": "Location ID",
            "example": -1
          },
          "location_name": {
            "type": "string",
            "description": "Location Name",
            "example": "Pusat"
          },
          "source": {
            "type": "number",
            "description": "Source",
            "example": 1
          },
          "is_closed": {
            "type": "boolean",
            "description": "Is closed",
            "example": true
          },
          "close_reason": {
            "type": "string",
            "description": "Closed reason",
            "example": "Tidak sesuai"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "purchaseorder_detail_id": {
                  "type": "number",
                  "description": "Purchase Order Detail ID",
                  "example": 0
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 1
                },
                "item_code": {
                  "type": "number",
                  "description": "Item Code",
                  "example": "BTY-L"
                },
                "item_name": {
                  "type": "number",
                  "description": "Item Name",
                  "example": "Kaos DreamCatcher Born to Be Yours"
                },
                "description": {
                  "type": "string",
                  "description": "Item Description",
                  "example": -1
                },
                "tax_id": {
                  "type": "number",
                  "description": "Tax ID",
                  "example": 1
                },
                "price": {
                  "type": "string",
                  "description": "Item Price",
                  "example": 77000
                },
                "buy_price": {
                  "type": "string",
                  "description": "Item Buy Price",
                  "example": 77000
                },
                "original_price": {
                  "type": "string",
                  "description": "Item Original Price",
                  "example": 77000
                },
                "rate": {
                  "type": "string",
                  "description": "Item Rate",
                  "example": 0
                },
                "tax_name": {
                  "type": "string",
                  "description": "Tax Name",
                  "example": "No Tax"
                },
                "unit": {
                  "type": "string",
                  "description": "Unit Name",
                  "example": "Buah"
                },
                "qty": {
                  "type": "string",
                  "description": "Item Quantity",
                  "example": 0
                },
                "uom_id": {
                  "type": "number",
                  "description": "Unit of Measure ID",
                  "example": 1
                },
                "qty_in_base": {
                  "type": "number",
                  "description": "Quantity that will be add",
                  "example": 1
                },
                "disc": {
                  "type": "string",
                  "description": "Discount",
                  "example": 5
                },
                "disc_amount": {
                  "type": "string",
                  "description": "Discount Amount",
                  "example": 3850
                },
                "tax_amount": {
                  "type": "string",
                  "description": "Tax Amount",
                  "example": 0
                },
                "amount": {
                  "type": "string",
                  "description": "Total Amount",
                  "example": 73150
                },
                "location_id": {
                  "type": "number",
                  "description": "Location ID",
                  "example": -1
                }
              }
            }
          }
        }
      },
      "getPurchaseOrdersResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "purchaseorder_id": {
                  "type": "number",
                  "description": "Purchase Order ID",
                  "example": 1
                },
                "purchaseorder_no": {
                  "type": "string",
                  "description": "Purchase Order Number",
                  "example": "PO-000000001"
                },
                "contact_id": {
                  "type": "number",
                  "description": "Contact (Supplier) ID",
                  "example": 2
                },
                "supplier_name": {
                  "type": "number",
                  "description": "Supplier Name",
                  "example": "PTANYWAY"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Transaction Date",
                  "example": "2018-10-02T04:00:00.000Z"
                },
                "created_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Created Date",
                  "example": "2018-10-03T05:00:00.000Z"
                },
                "is_tax_included": {
                  "type": "boolean",
                  "description": "Wether Tax Included",
                  "example": false
                },
                "note": {
                  "type": "string",
                  "description": "Purchase Order Note",
                  "example": "Note"
                },
                "sub_total": {
                  "type": "string",
                  "description": "Purchase Order sub Total",
                  "example": 154000
                },
                "total_disc": {
                  "type": "string",
                  "description": "Purchase Order Total Discount",
                  "example": 0
                },
                "total_tax": {
                  "type": "string",
                  "description": "Purchase Order Total Tax",
                  "example": 0
                },
                "grand_total": {
                  "type": "string",
                  "description": "Purchase Order Grand Total",
                  "example": 154000
                },
                "ref_no": {
                  "type": "string",
                  "description": "Reference Number",
                  "example": 112233
                },
                "payment_method": {
                  "type": "number",
                  "description": "Payment Method",
                  "example": -1
                },
                "location_id": {
                  "type": "number",
                  "description": "Location ID",
                  "example": -1
                },
                "source": {
                  "type": "number",
                  "description": "Source",
                  "example": 1
                },
                "last_modified": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Created Date",
                  "example": "2018-10-03T05:00:00.000Z"
                },
                "status": {
                  "type": "string",
                  "description": null,
                  "example": null
                },
                "bills": {
                  "type": "string",
                  "description": null,
                  "example": null
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getPurchasePaymentResponse": {
        "type": "object",
        "properties": {
          "payment_id": {
            "type": "number",
            "description": "Purchase Payment ID",
            "example": 2
          },
          "payment_no": {
            "type": "string",
            "description": "Purchase Payment Number",
            "example": 2
          },
          "payment_type": {
            "type": "number",
            "description": "Purchase Payment Type",
            "example": 2
          },
          "contact_id": {
            "type": "number",
            "description": "Contact ID (Supplier)",
            "example": 2
          },
          "contact_name": {
            "type": "string",
            "description": "Contact Name (Supplier)",
            "example": "PTYANYWAY"
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2018-10-02T04:00:00.000Z"
          },
          "account_id": {
            "type": "number",
            "description": "Account ID",
            "example": 1
          },
          "account_name": {
            "type": "string",
            "description": "Account Name",
            "example": "1-1000 - Kas"
          },
          "amount": {
            "type": "number",
            "description": "Payment Amount",
            "example": 100000
          },
          "bills": {
            "type": "array",
            "description": "List Payment Detail",
            "items": {
              "type": "object",
              "properties": {
                "payment_detail_id": {
                  "type": "number",
                  "description": "Payment Detail ID",
                  "example": 0
                },
                "bill_id": {
                  "type": "number",
                  "description": "Bill ID",
                  "example": 1
                },
                "grand_total": {
                  "type": "string",
                  "description": "Bill Grand Total",
                  "example": 154000
                },
                "payment_amount": {
                  "type": "string",
                  "description": "Payment Amount for Bill",
                  "example": 100000
                },
                "due": {
                  "type": "string",
                  "description": "Not Paid Amount",
                  "example": 0
                },
                "trx_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Bill Transaction Date",
                  "example": "2018-10-02T04:00:00.000Z"
                }
              }
            }
          }
        }
      },
      "getPurchasePaymentsResponse": {
        "type": "object",
        "properties": {
          "type": "array",
          "description": "List Items that exists in System",
          "items": {
            "type": "object",
            "properties": {
              "payment_id": {
                "type": "number",
                "description": "Purchase Payment ID",
                "example": 2
              },
              "payment_no": {
                "type": "string",
                "description": "Purchase Payment Number",
                "example": 2
              },
              "payment_type": {
                "type": "number",
                "description": "Purchase Payment Type",
                "example": 2
              },
              "contact_id": {
                "type": "number",
                "description": "Contact ID (Supplier)",
                "example": 2
              },
              "contact_name": {
                "type": "string",
                "description": "Contact Name (Supplier)",
                "example": "PTYANYWAY"
              },
              "transaction_date": {
                "type": "string",
                "format": "date",
                "description": "Transaction Date",
                "example": "2018-10-02T04:00:00.000Z"
              },
              "account_id": {
                "type": "number",
                "description": "Account ID",
                "example": 1
              },
              "account_name": {
                "type": "string",
                "description": "Account Name",
                "example": "1-1000 - Kas"
              },
              "amount": {
                "type": "string",
                "description": "Payment Amount",
                "example": 100000
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getPurchaseReturnResponse": {
        "type": "object",
        "properties": {
          "return_id": {
            "type": "number",
            "description": "Purchase Return ID",
            "example": 0
          },
          "return_no": {
            "type": "string",
            "description": "Purchase Return Number",
            "example": "[auto]"
          },
          "supplier_id": {
            "type": "number",
            "description": "Contact ID (Supplier)",
            "example": 1
          },
          "supplier_name": {
            "type": "string",
            "description": "Contact Name (Supplier)",
            "example": "PTANYWAY"
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2018-10-02T04:00:00.000Z"
          },
          "created_date": {
            "type": "string",
            "format": "date",
            "description": "Created Date",
            "example": "2018-10-02T04:00:00.000Z"
          },
          "is_tax_included": {
            "type": "boolean",
            "description": "Wether Tax Included",
            "example": false
          },
          "note": {
            "type": "string",
            "description": "Purchase Return Note",
            "example": "Return"
          },
          "sub_total": {
            "type": "string",
            "description": "Purchase Return Note",
            "example": 77000
          },
          "total_tax": {
            "type": "string",
            "description": "Purchase Return Total Tax",
            "example": 0
          },
          "grand_total": {
            "type": "string",
            "description": "Purchase Return Grand Total",
            "example": 77000
          },
          "location_id": {
            "type": "number",
            "description": "Location ID",
            "example": -1
          },
          "location_name": {
            "type": "number",
            "description": "Location Name",
            "example": "Pusat"
          },
          "items": {
            "type": "array",
            "description": "List Purchase Return Detail",
            "items": {
              "type": "object",
              "properties": {
                "return_detail_id": {
                  "type": "number",
                  "description": "Purchase Return Detail ID",
                  "example": 0
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 0
                },
                "item_code": {
                  "type": "number",
                  "description": "Item Code",
                  "example": "BTY-L"
                },
                "item_name": {
                  "type": "number",
                  "description": "Item Name",
                  "example": "Kaos DreamCatcher Born to Be Yours"
                },
                "serial_no": {
                  "type": "string",
                  "description": "Serial Number",
                  "example": "SN001"
                },
                "description": {
                  "type": "string",
                  "description": "Item Description",
                  "example": "Kaos DreamCatcher Born to Be Yours"
                },
                "invt_acct_id": {
                  "type": "number",
                  "description": "Inventory Account ID",
                  "example": 4
                },
                "tax_id": {
                  "type": "number",
                  "description": "Tax ID",
                  "example": 1
                },
                "price": {
                  "type": "string",
                  "description": "Item Price",
                  "example": 77000
                },
                "buy_price": {
                  "type": "string",
                  "description": "Item Buy Price",
                  "example": 77000
                },
                "original_price": {
                  "type": "string",
                  "description": "Item Original Price",
                  "example": 77000
                },
                "qty": {
                  "type": "string",
                  "description": "Item Quantity",
                  "example": 1
                },
                "unit": {
                  "type": "string",
                  "description": "Unit Name",
                  "example": "Buah"
                },
                "qty_in_base": {
                  "type": "string",
                  "description": "Quantity that will be return",
                  "example": 1
                },
                "tax_amount": {
                  "type": "string",
                  "description": "Tax Amount",
                  "example": 0
                },
                "amount": {
                  "type": "string",
                  "description": "Total Amount",
                  "example": 77000
                },
                "rate": {
                  "type": "string",
                  "description": "Rate",
                  "example": 0
                },
                "tax_name": {
                  "type": "string",
                  "description": "Tax Name",
                  "example": "No Tax"
                },
                "account_name": {
                  "type": "string",
                  "description": "Account Name",
                  "example": "1-1200 - Persediaan Barang"
                }
              }
            }
          }
        }
      },
      "getPurchaseReturnSettlementBillResponse": {
        "type": "object",
        "properties": {
          "settlement_id": {
            "type": "number",
            "description": "Purchase Return Settlement ID",
            "example": 0
          },
          "settlement_no": {
            "type": "string",
            "description": "Purchase Return Settlement Number",
            "example": "[auto]"
          },
          "return_id": {
            "type": "number",
            "description": "Purchase Return ID",
            "example": 2
          },
          "return_no": {
            "type": "string",
            "description": "Purchase Return Number",
            "example": "PR-000000001"
          },
          "contact_id": {
            "type": "number",
            "description": "Contact ID (Supplier)",
            "example": 3
          },
          "supplier_id": {
            "type": "number",
            "description": "Contact ID (Supplier)",
            "example": 3
          },
          "supplier_name": {
            "type": "string",
            "description": "Contact Name (Supplier)",
            "example": "PTANYWAY"
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2018-10-02T04:00:00.000Z"
          },
          "created_date": {
            "type": "string",
            "format": "date",
            "description": "Created Date",
            "example": "2018-10-02T04:00:00.000Z"
          },
          "amount": {
            "type": "string",
            "description": "Amount",
            "example": 25000
          },
          "total": {
            "type": "string",
            "description": "Total Amount",
            "example": 25000
          },
          "bills": {
            "type": "array",
            "description": "List Bills Detail",
            "items": {
              "type": "object",
              "properties": {
                "settlement_detail_id": {
                  "type": "number",
                  "description": "Purchase Return Settlement Detail ID",
                  "example": 1
                },
                "payment_amount": {
                  "type": "string",
                  "description": "Payment Amount",
                  "example": 25000
                },
                "doc_id": {
                  "type": "number",
                  "description": "Document ID",
                  "example": 14
                },
                "doc_number": {
                  "type": "string",
                  "description": "Document Number",
                  "example": "BIL-000000014"
                },
                "trx_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-10-02T04:00:00.000Z"
                },
                "due_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Due Date",
                  "example": "2018-10-02T04:00:00.000Z"
                },
                "grand_total": {
                  "type": "string",
                  "description": "Grand Total",
                  "example": 25000
                },
                "due": {
                  "type": "string",
                  "description": "Due Amount",
                  "example": 0
                }
              }
            }
          }
        }
      },
      "getPurchaseReturnSettlementBillsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "doc_id": {
                  "type": "number",
                  "description": "Document ID",
                  "example": 2
                },
                "doc_number": {
                  "type": "string",
                  "description": "Document Number",
                  "example": 2
                },
                "supplier_name": {
                  "type": "string",
                  "description": "Contact Name (Supplier)",
                  "example": "PTYANYWAY"
                },
                "return_no": {
                  "type": "string",
                  "description": "Return Number",
                  "example": "PR-000000001"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-10-02T04:00:00.000Z"
                },
                "trx_type": {
                  "type": "string",
                  "description": "Transaction Type",
                  "example": "settlement"
                },
                "is_opening_balance": {
                  "type": "boolean",
                  "description": "Wether Transaction is an Opening Balance",
                  "example": false
                },
                "amount": {
                  "type": "string",
                  "description": "Transaction Amount",
                  "example": -77000
                },
                "return_id": {
                  "type": "number",
                  "description": "Return ID",
                  "example": 1
                },
                "doc_type": {
                  "type": "string",
                  "description": "Document Type",
                  "example": "Potong Faktur"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getPurchaseReturnSettlementRefundsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "doc_id": {
                  "type": "number",
                  "description": "Document ID",
                  "example": 2
                },
                "doc_number": {
                  "type": "string",
                  "description": "Document Number",
                  "example": 2
                },
                "supplier_name": {
                  "type": "string",
                  "description": "Contact Name (Supplier)",
                  "example": "PTYANYWAY"
                },
                "return_no": {
                  "type": "string",
                  "description": "Return Number",
                  "example": "PR-000000001"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-10-02T04:00:00.000Z"
                },
                "trx_type": {
                  "type": "string",
                  "description": "Transaction Type",
                  "example": "settlement"
                },
                "is_opening_balance": {
                  "type": "boolean",
                  "description": "Wether Transaction is an Opening Balance",
                  "example": false
                },
                "amount": {
                  "type": "string",
                  "description": "Transaction Amount",
                  "example": -77000
                },
                "return_id": {
                  "type": "number",
                  "description": "Return ID",
                  "example": 1
                },
                "doc_type": {
                  "type": "string",
                  "description": "Document Type",
                  "example": "Pengembalian Uang"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getPurchaseReturnsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "doc_id": {
                  "type": "number",
                  "description": "Document ID",
                  "example": 2
                },
                "doc_number": {
                  "type": "string",
                  "description": "Document Number",
                  "example": 2
                },
                "contact_id": {
                  "type": "number",
                  "description": "Contact ID (Supplier)",
                  "example": 2
                },
                "supplier_name": {
                  "type": "string",
                  "description": "Contact Name (Supplier)",
                  "example": "PTYANYWAY"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-10-02T04:00:00.000Z"
                },
                "due_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Due Date",
                  "example": "2018-10-02T04:00:00.000Z"
                },
                "is_opening_balance": {
                  "type": "boolean",
                  "description": "Wether Transaction is an Opening Balance",
                  "example": false
                },
                "grand_total": {
                  "type": "string",
                  "description": "Grand Total",
                  "example": -77000
                },
                "due": {
                  "type": "string",
                  "description": "Payment Due",
                  "example": -77000
                },
                "doc_type": {
                  "type": "string",
                  "description": "Document Type",
                  "example": "debit_note"
                },
                "age": {
                  "type": "number",
                  "description": "Purchase Return Age",
                  "example": 0
                },
                "age_due": {
                  "type": "number",
                  "description": "Purchase Return Due Age",
                  "example": 0
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getRedeemResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "redeem_id": {
                  "type": "number",
                  "description": "Redeem Request ID",
                  "example": 2
                },
                "reward_id": {
                  "type": "number",
                  "description": "Reward ID",
                  "example": 1
                },
                "request_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Request Date",
                  "example": "2019-01-08T08:25:14.521Z"
                },
                "fulfillment_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Request Date",
                  "example": "2019-01-08T08:25:14.521Z"
                },
                "status": {
                  "type": "string",
                  "description": "Redeem Request Status",
                  "example": "requested"
                },
                "note": {
                  "type": "string",
                  "description": "Reedeem Request Note",
                  "example": "Note"
                },
                "points": {
                  "type": "string",
                  "description": "Required Points",
                  "example": 1
                },
                "contact_id": {
                  "type": "number",
                  "description": "Contact ID",
                  "example": 1
                },
                "contact_name": {
                  "type": "string",
                  "description": "Contact Name",
                  "example": "Radit"
                },
                "reward_name": {
                  "type": "string",
                  "description": "Reward Name",
                  "example": "Miyako"
                }
              }
            }
          }
        }
      },
      "getRejectedReturnsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "salesorder_id": {
                  "type": "number",
                  "description": "Sales Order ID",
                  "example": 39737
                },
                "salesorder_detail_id": {
                  "type": "number",
                  "description": "Sales Order Detail ID",
                  "example": 2991
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 4671
                },
                "qty_in_base": {
                  "type": "number",
                  "description": "Item Quantity",
                  "example": 1
                },
                "item_code": {
                  "type": "string",
                  "description": "Item Code",
                  "example": "SK-67565478"
                },
                "item_name": {
                  "type": "string",
                  "description": "Item Name",
                  "example": "VASELINE LOTION HIBA LIMITED EDITION JEPANG 200ML"
                },
                "reject_return_reason": {
                  "type": "string",
                  "description": "Reject Return Reason",
                  "example": "Ada sobekan"
                },
                "is_return_resolved": {
                  "type": "boolean",
                  "description": "Wether Return Resolved",
                  "example": false
                },
                "customer_name": {
                  "type": "string",
                  "description": "Contact Name (Customer)",
                  "example": "Andy"
                },
                "salesorder_no": {
                  "type": "string",
                  "description": "Sales order Number",
                  "example": "ZL-2418274"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "source_name": {
                  "type": "string",
                  "description": "Zalora",
                  "example": false
                },
                "store": {
                  "type": "string",
                  "description": "Store",
                  "example": "info@dodle.co.id"
                },
                "store_name": {
                  "type": "string",
                  "description": "Store Name",
                  "example": "Zalora - info@dodle.co.id"
                },
                "payment_method": {
                  "type": "string",
                  "description": "Payment method",
                  "example": null
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getReturnsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "salesorder_id": {
                  "type": "number",
                  "description": "Sales Order ID",
                  "example": 39737
                },
                "salesorder_detail_id": {
                  "type": "number",
                  "description": "Sales Order Detail ID",
                  "example": 2991
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 4671
                },
                "qty_in_base": {
                  "type": "number",
                  "description": "Item Quantity",
                  "example": 1
                },
                "item_code": {
                  "type": "string",
                  "description": "Item Code",
                  "example": "SK-67565478"
                },
                "item_name": {
                  "type": "string",
                  "description": "Item Name",
                  "example": "VASELINE LOTION HIBA LIMITED EDITION JEPANG 200ML"
                },
                "reject_return_reason": {
                  "type": "string",
                  "description": "Reject Return Reason",
                  "example": "Ada sobekan"
                },
                "is_return_resolved": {
                  "type": "boolean",
                  "description": "Wether Return Resolved",
                  "example": false
                },
                "customer_name": {
                  "type": "string",
                  "description": "Contact Name (Customer)",
                  "example": "Andy"
                },
                "salesorder_no": {
                  "type": "string",
                  "description": "Sales order Number",
                  "example": "ZL-2418274"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "source_name": {
                  "type": "string",
                  "description": "Zalora",
                  "example": false
                },
                "store": {
                  "type": "string",
                  "description": "Store",
                  "example": "info@dodle.co.id"
                },
                "store_name": {
                  "type": "string",
                  "description": "Store Name",
                  "example": "Zalora - info@dodle.co.id"
                },
                "payment_method": {
                  "type": "string",
                  "description": "Payment method",
                  "example": null
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getRewardsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string",
                  "description": "Reward Category",
                  "example": "Lifestyle"
                },
                "reward_id": {
                  "type": "number",
                  "description": "Reward ID",
                  "example": 1
                },
                "reward_name": {
                  "type": "string",
                  "description": "Reward Name",
                  "example": "Indomie"
                },
                "description": {
                  "type": "string",
                  "description": "Reward Description",
                  "example": "Indomie Rasa Kaldu Ayam"
                },
                "points": {
                  "type": "string",
                  "description": "Needed Points",
                  "example": 1
                },
                "images": {
                  "type": "array",
                  "descriptions": "List Images Reward",
                  "items": {
                    "type": "object",
                    "properties": {
                      "reward_image_id": {
                        "type": "number",
                        "description": "Reward Image ID",
                        "example": 1
                      },
                      "reward_id": {
                        "type": "number",
                        "description": "Reward ID",
                        "example": 1
                      },
                      "cloud_key": {
                        "type": "string",
                        "description": "Image URL",
                        "example": "https://jubelio.blob.core.windows.net/images/e06f6d63_0c61_48f6_922f_232b73db617c/a3001705-d872-4c0d-b59a-db7908954334.jpeg"
                      },
                      "file_name": {
                        "type": "string",
                        "description": "Image File Name",
                        "example": "jubelio-A5-front.jpg"
                      },
                      "sequence_number": {
                        "type": "number",
                        "description": "Sequence Number",
                        "example": 0
                      },
                      "thumbnail": {
                        "type": "string",
                        "description": "Image Thumbnail URL",
                        "example": "https://jubelio.blob.core.windows.net/images/e06f6d63_0c61_48f6_922f_232b73db617c/a3001705-d872-4c0d-b59a-db7908954334.jpeg"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "getSalesHistoryResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "transaction_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Transaction Date",
                  "example": "2019-01-08T08:25:14.521Z"
                },
                "grand_total": {
                  "type": "string",
                  "description": "Grand Total",
                  "example": 180000
                },
                "source": {
                  "type": "number",
                  "description": "Loyalty Point Source",
                  "example": 1
                },
                "salesorder_no": {
                  "type": "string",
                  "description": "Sales Order Number",
                  "example": "SO-000000921"
                },
                "store_name": {
                  "type": "string",
                  "description": "Store Name",
                  "example": "Bulakapak"
                }
              }
            }
          }
        }
      },
      "getSalesOrderResponse": {
        "type": "object",
        "properties": {
          "salesorder_id": {
            "type": "number",
            "description": "Sales Order ID",
            "example": 0
          },
          "salesorder_no": {
            "type": "string",
            "description": "Sales Order Number",
            "example": "[auto]"
          },
          "contact_id": {
            "type": "number",
            "description": "Contact ID (Customer)",
            "example": 1
          },
          "customer_name": {
            "type": "string",
            "description": "Contact Name (Customer)",
            "example": "Radit"
          },
          "customer_phone": {
            "type": "string",
            "description": "Contact Phone (Customer)",
            "example": "08111111111"
          },
          "customer_email": {
            "type": "string",
            "description": "Contact Email (Customer)",
            "example": "test@jubelio.com"
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2018-10-20T17:00:00.000Z"
          },
          "created_date": {
            "type": "string",
            "format": "date",
            "description": "Created Date",
            "example": "2018-10-20T17:00:00.000Z"
          },
          "invoice_id": {
            "type": "number",
            "description": "Invoice ID",
            "example": 22
          },
          "invoice_no": {
            "type": "string",
            "description": "Invoice Number",
            "example": "INV-000000222"
          },
          "is_tax_included": {
            "type": "boolean",
            "description": "Wether Tax Included",
            "example": false
          },
          "note": {
            "type": "string",
            "description": "Purchase Order Note",
            "example": "Tlg packingan yg aman ya kk"
          },
          "sub_total": {
            "type": "number",
            "description": "Sub Total",
            "example": 120000
          },
          "total_disc": {
            "type": "number",
            "description": "Total Discount",
            "example": 0
          },
          "total_tax": {
            "type": "number",
            "description": "Total Tax",
            "example": 0
          },
          "grand_total": {
            "type": "number",
            "description": "Grand Total",
            "example": 120000
          },
          "ref_no": {
            "type": "string",
            "description": "Reference Number",
            "example": "00099"
          },
          "payment_method": {
            "type": "string",
            "description": "Reference Number",
            "example": "cod"
          },
          "location_id": {
            "type": "number",
            "description": "Header Location ID",
            "example": -1
          },
          "source": {
            "type": "number",
            "description": "Purchase Source [1 = Internal]",
            "example": 1
          },
          "is_canceled": {
            "type": "boolean",
            "description": "Wether Purchase is canceled",
            "example": false
          },
          "cancel_reason": {
            "type": "string",
            "description": "Cancel Reason",
            "example": "Tidak Punya Uang"
          },
          "cancel_reason_detail": {
            "type": "string",
            "description": "Cancel Reason Detail",
            "example": "Tidak Punya Uang"
          },
          "channel_status": {
            "type": "string",
            "description": "Channel Status",
            "example": "Pending"
          },
          "buyer_shipping_cost": {
            "type": "number",
            "description": "Buyer Shipping Cost (For Cashless)",
            "example": 10000
          },
          "shipping_cost": {
            "type": "number",
            "description": "Shipping Cost",
            "example": 5000
          },
          "insurance_cost": {
            "type": "number",
            "description": "Insurance Cost",
            "example": 5000
          },
          "is_paid": {
            "type": "boolean",
            "description": "Wether Purchase is paid",
            "example": true
          },
          "shipping_full_name": {
            "type": "string",
            "description": "Shipping Full Name (Receiver Name)",
            "example": "Radit"
          },
          "shipping_phone": {
            "type": "string",
            "description": "Shipping Phone (Receiver)",
            "example": "087788124444"
          },
          "shipping_address": {
            "type": "string",
            "description": "Shipping Address",
            "example": "Kutabumi"
          },
          "shipping_area": {
            "type": "string",
            "description": "Shipping Area",
            "example": "Pasar Kemis"
          },
          "shipping_city": {
            "type": "string",
            "description": "Shipping City",
            "example": "Tangerang"
          },
          "shipping_province": {
            "type": "string",
            "description": "Shipping Province",
            "example": "Banten"
          },
          "shipping_post_code": {
            "type": "string",
            "description": "Shipping Post COde",
            "example": 11750
          },
          "shipping_country": {
            "type": "string",
            "description": "Shipping Country",
            "example": "Indonesia"
          },
          "last_modified": {
            "type": "string",
            "description": "Last Modified",
            "example": "2020-04-08T13:30:05.319Z"
          },
          "register_session_id": {
            "type": "number",
            "description": "Register Session ID",
            "example": 1
          },
          "user_name": {
            "type": "string",
            "description": "User Name",
            "example": "user"
          },
          "ordprdseq": {
            "type": "string",
            "description": null,
            "example": null
          },
          "store_id": {
            "type": "string",
            "description": "Store ID",
            "example": 1
          },
          "marked_as_complete": {
            "type": "string",
            "description": "Mark as Complete",
            "example": null
          },
          "is_tracked": {
            "type": "string",
            "description": "Is Tracked",
            "example": null
          },
          "store_so_number": {
            "type": "string",
            "description": "Store SO Number",
            "example": null
          },
          "is_deleted_from_picklist": {
            "type": "boolean",
            "description": "Deleted from picklist",
            "example": false
          },
          "deleted_from_picklist_by": {
            "type": "string",
            "description": "Deleted from picklist by",
            "example": "username"
          },
          "dropshipper": {
            "type": "string",
            "description": "Dropshipper",
            "example": null
          },
          "dropshipper_note": {
            "type": "string",
            "description": "Dropshipper Note",
            "example": null
          },
          "dropshipper_address": {
            "type": "string",
            "description": "Dropshipper Address",
            "example": null
          },
          "is_shipped": {
            "type": "string",
            "description": "Is Shipped",
            "example": null
          },
          "due_date": {
            "type": "string",
            "description": "Due date",
            "example": null
          },
          "received_date": {
            "type": "string",
            "description": "Received date",
            "example": "2020-04-08T13:30:05.319Z"
          },
          "salesmen_id": {
            "type": "number",
            "description": "Salesmen ID",
            "example": 1
          },
          "salesmen_name": {
            "type": "string",
            "description": "Salesmen Name",
            "example": "salesname"
          },
          "escrow_amount": {
            "type": "string",
            "description": "Escrow amount",
            "example": null
          },
          "is_acknowledge": {
            "type": "boolean",
            "description": "Is acknowledge",
            "example": true
          },
          "acknowledge_status": {
            "type": "string",
            "description": "Acknowledge status",
            "example": null
          },
          "is_label_printed": {
            "type": "boolean",
            "description": "Label printed",
            "example": true
          },
          "is_invoice_printed": {
            "type": "boolean",
            "description": "Invoice printed",
            "example": false
          },
          "total_amount_mp": {
            "type": "number",
            "description": "Total Amount Marketplace",
            "example": null
          },
          "internal_do_number": {
            "type": "string",
            "description": "Internal DO number",
            "example": null
          },
          "internal_so_number": {
            "type": "string",
            "description": "Internal SO number",
            "example": null
          },
          "tracking_number": {
            "type": "string",
            "description": "Tracking number",
            "example": null
          },
          "courier": {
            "type": "string",
            "description": "Courier",
            "example": "J&T REG"
          },
          "username": {
            "type": "string",
            "description": "Username",
            "example": "user"
          },
          "is_po": {
            "type": "boolean",
            "description": "Is PO",
            "example": false
          },
          "picked_in": {
            "type": "string",
            "description": "Picked In",
            "example": null
          },
          "district_cd": {
            "type": "string",
            "description": "District CD",
            "example": null
          },
          "sort_code": {
            "type": "string",
            "description": "Sort Code",
            "example": null
          },
          "shipment_type": {
            "type": "string",
            "description": "Shipment Type",
            "example": null
          },
          "status_details": {
            "type": "string",
            "description": "Status detail",
            "example": null
          },
          "service_fee": {
            "type": "string",
            "description": "Service fee",
            "example": "0.0000"
          },
          "source_name": {
            "type": "string",
            "description": "Channel name",
            "example": "INTERNAL"
          },
          "store_name": {
            "type": "string",
            "description": "Store name",
            "example": "Store Name"
          },
          "location_name": {
            "type": "string",
            "description": "Header Location Name",
            "example": "Pusat"
          },
          "shipper": {
            "type": "string",
            "description": "Shipper",
            "example": "J&T REG"
          },
          "tracking_no": {
            "type": "string",
            "description": "Tracking Number / AWB",
            "example": 2958792875272589000
          },
          "add_disc": {
            "type": "number",
            "description": "Additional Discount",
            "example": 0
          },
          "add_fee": {
            "type": "number",
            "description": "Additional Fee",
            "example": 0
          },
          "total_weight_in_kg": {
            "type": "string",
            "description": "The weight of order in KG",
            "example": "0.30"
          },
          "is_cod": {
            "type": "boolean",
            "description": "Wether COD or not",
            "example": false
          },
          "items": {
            "type": "array",
            "description": "List Item in Purchase",
            "items": {
              "type": "object",
              "properties": {
                "salesorder_detail_id": {
                  "type": "number",
                  "description": "Sales Order Detail ID",
                  "example": 0
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 14
                },
                "serial_no": {
                  "type": "string",
                  "description": "Serial Number",
                  "example": "SN001"
                },
                "description": {
                  "type": "string",
                  "description": "Item Description",
                  "example": "Kaos DreamCatcher Born to Be Yours"
                },
                "tax_id": {
                  "type": "number",
                  "description": "Tax ID",
                  "example": 1
                },
                "price": {
                  "type": "number",
                  "description": "Item Price",
                  "example": 120000
                },
                "unit": {
                  "type": "string",
                  "description": "Unit Name",
                  "example": "Buah"
                },
                "qty_in_base": {
                  "type": "number",
                  "description": "Quantity that will be Purchased",
                  "example": 1
                },
                "is_bundle": {
                  "type": "boolean",
                  "description": "Wether item is bundle",
                  "example": false
                },
                "disc": {
                  "type": "number",
                  "description": "Item Discount",
                  "example": 0
                },
                "disc_amount": {
                  "type": "number",
                  "description": "Item Discount Amount",
                  "example": 0
                },
                "tax_amount": {
                  "type": "number",
                  "description": "Item Tax Amount",
                  "example": 0
                },
                "amount": {
                  "type": "number",
                  "description": "Item Total Amount",
                  "example": 120000
                },
                "location_id": {
                  "type": "number",
                  "description": "Item Location ID",
                  "example": -1
                },
                "shipper": {
                  "type": "string",
                  "description": "Shipper",
                  "example": "J&T REG"
                },
                "qty": {
                  "type": "number",
                  "description": "Quantity",
                  "example": 1
                },
                "uom_id": {
                  "type": "number",
                  "example": -1
                },
                "shipped_date": {
                  "type": "date",
                  "example": null
                },
                "channel_order_detail_id": {
                  "type": "number",
                  "example": null
                },
                "is_return_resolved": {
                  "type": "boolean",
                  "description": "Return is resolved",
                  "example": false
                },
                "reject_return_reason": {
                  "type": "string",
                  "description": "Reject return reason",
                  "example": ""
                },
                "awb_created_date": {
                  "type": "date",
                  "description": "Awn Created date",
                  "example": null
                },
                "ticket_no": {
                  "type": "string",
                  "example": null
                },
                "pack_scanned_date": {
                  "type": "date",
                  "example": null
                },
                "pick_scanned_date": {
                  "type": "date",
                  "example": null
                },
                "destination_code": {
                  "type": "string",
                  "example": null
                },
                "origin_code": {
                  "type": "string",
                  "example": null
                },
                "status": {
                  "type": "string",
                  "example": null
                },
                "item_code": {
                  "type": "string",
                  "description": "Item code",
                  "example": "brg001"
                },
                "item_name": {
                  "type": "string",
                  "description": "Item name",
                  "example": "Barang 1"
                },
                "sell_price": {
                  "type": "string",
                  "description": "Sell price",
                  "example": "Barang 1"
                },
                "original_price": {
                  "type": "string",
                  "description": "Original price",
                  "example": "10.000"
                },
                "rate": {
                  "type": "string",
                  "example": "0.00"
                },
                "tax_name": {
                  "type": "string",
                  "description": "Tax name",
                  "example": "No Tax"
                },
                "item_group_id": {
                  "type": "number",
                  "description": null,
                  "example": 1
                },
                "loc_id": {
                  "type": "number",
                  "description": null,
                  "example": null
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Thumbnail link",
                  "example": "https://truzteedev.blob.core.windows.net/images/rxayuyour32vvi5jygo4eq/cc05d0ef-9e0a-4a49-b617-d430819fa724_thumb.jpg"
                },
                "fbm": {
                  "type": "string",
                  "description": null,
                  "example": null
                }
              }
            }
          }
        }
      },
      "getSalesOrdersResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "salesorder_id": {
                  "type": "number",
                  "description": "Sales Order ID",
                  "example": 6
                },
                "salesorder_no": {
                  "type": "string",
                  "description": "Sales Order Number",
                  "example": "SO-000000006"
                },
                "invoice_no": {
                  "type": "string",
                  "description": "Invoice Number",
                  "example": "INV-000000222"
                },
                "shipping_full_name": {
                  "type": "string",
                  "description": "Shipping Full Name (Receiver)",
                  "example": "Radit"
                },
                "customer_name": {
                  "type": "string",
                  "description": "Contact Name (Customer)",
                  "example": "Pelanggan Umum"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "created_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Created Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "location_name": {
                  "type": "string",
                  "description": "Location Name",
                  "example": "Pusat"
                },
                "grand_total": {
                  "type": "string",
                  "description": "Grand Total",
                  "example": 120000
                },
                "channel_status": {
                  "type": "string",
                  "description": "Channel Status",
                  "example": "Cancelled"
                },
                "internal_status": {
                  "type": "string",
                  "description": "Internal Status",
                  "example": "CANCELLED"
                },
                "is_paid": {
                  "type": "boolean",
                  "description": "Wether Purchase Order have been Paid",
                  "example": true
                },
                "is_canceled": {
                  "type": "boolean",
                  "description": "Wether Purchase Order have been Canceled",
                  "example": true
                },
                "channel_name": {
                  "type": "string",
                  "description": "Channel Name",
                  "example": "Tokopedia"
                },
                "store_name": {
                  "type": "string",
                  "description": "Source Name",
                  "example": "Toko Bahagia"
                },
                "shipper": {
                  "type": "string",
                  "description": "Shipper",
                  "example": "J&T REG"
                },
                "marked_as_complete": {
                  "type": "boolean",
                  "description": "Wether Purchase Order have been completed",
                  "example": false
                },
                "store_id": {
                  "type": "number",
                  "description": "Store ID",
                  "example": 1
                },
                "channel_id": {
                  "type": "number",
                  "description": "Store ID",
                  "example": 1
                },
                "internal_do_number": {
                  "type": "number",
                  "description": "Internal do Number",
                  "example": null
                },
                "internal_so_number": {
                  "type": "number",
                  "description": "Internal SO Number"
                },
                "awb_created_date": {
                  "type": "date",
                  "description": "AWB Created date",
                  "example": null
                },
                "source": {
                  "type": "string",
                  "description": null,
                  "example": null
                },
                "store": {
                  "type": "string",
                  "description": "Store Name",
                  "example": null
                },
                "shipment_type": {
                  "type": "string",
                  "description": "Type of Shipment",
                  "example": null
                },
                "status_details": {
                  "type": "string",
                  "description": "Status detail",
                  "example": null
                },
                "last_modified": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The last modified date. Can be used for the Cancellation Time.",
                  "example": "2020-12-12T17:00:00.000Z"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getSalesOrdersReturnedResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "contact_id": {
                  "type": "number",
                  "description": "Contact ID",
                  "example": 6
                },
                "invoice_id": {
                  "type": "number",
                  "description": "Invoice ID",
                  "example": 1123
                },
                "is_instant_courier": {
                  "type": "boolean",
                  "description": "Is Instant Courier",
                  "example": false
                },
                "picklist_id": {
                  "type": "number",
                  "description": "Picklist Id",
                  "example": 13324
                },
                "picklist_no": {
                  "type": "string",
                  "description": "Picklist Number",
                  "example": "PICK-000013324"
                },
                "salesorder_id": {
                  "type": "number",
                  "description": "Sales Order ID",
                  "example": 6
                },
                "salesorder_no": {
                  "type": "string",
                  "description": "Sales Order Number",
                  "example": "SO-000000006"
                },
                "invoice_no": {
                  "type": "string",
                  "description": "Invoice Number",
                  "example": "INV-000000222"
                },
                "customer_name": {
                  "type": "string",
                  "description": "Contact Name (Customer)",
                  "example": "Pelanggan Umum"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "created_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Created Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "channel_name": {
                  "type": "string",
                  "description": "Channel Name",
                  "example": "Tokopedia"
                },
                "store_name": {
                  "type": "string",
                  "description": "Source Name",
                  "example": "Toko Bahagia"
                },
                "shipper": {
                  "type": "string",
                  "description": "Shipper",
                  "example": "J&T REG"
                },
                "tracking_no": {
                  "type": "string",
                  "description": "Tracking Number",
                  "example": "JP2255122"
                },
                "store_id": {
                  "type": "number",
                  "description": "Store ID",
                  "example": 1
                },
                "source": {
                  "type": "string",
                  "description": "Order Source in Id (MP/Channel)",
                  "example": 64
                },
                "source_name": {
                  "type": "string",
                  "description": "Source Name",
                  "example": "SHOPEE"
                },
                "store": {
                  "type": "string",
                  "description": "Store Name",
                  "example": null
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getSalesPaymentResponse": {
        "type": "object",
        "properties": {
          "payment_id": {
            "type": "number",
            "description": "Payment ID",
            "example": 0
          },
          "payment_no": {
            "type": "string",
            "description": "Payment Number",
            "example": "[auto]"
          },
          "payment_type": {
            "type": "number",
            "description": "Payment Type",
            "example": 0
          },
          "contact_id": {
            "type": "number",
            "description": "Payment ID",
            "example": 0
          },
          "contact_name": {
            "type": "string",
            "description": "Contact ID",
            "example": 1
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Tranasction Date",
            "example": "2019-01-13T21:07:13.273Z"
          },
          "account_id": {
            "type": "number",
            "description": "Account ID",
            "example": 1
          },
          "account_name": {
            "type": "string",
            "description": "Account Name",
            "example": "1-1000 - Kas"
          },
          "note": {
            "type": "string",
            "description": "Payment Note",
            "example": "Bayar Faktur INV-00001"
          },
          "amount": {
            "type": "string",
            "description": "Payment Amount",
            "example": 100000
          },
          "invoices": {
            "type": "array",
            "description": "List Payment Invoices",
            "items": {
              "type": "object",
              "properties": {
                "payment_detail_id": {
                  "type": "number",
                  "description": "Payment Detail ID",
                  "example": 1
                },
                "payment_id": {
                  "type": "number",
                  "description": "Payment ID",
                  "example": 1
                },
                "trx_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Tranasction Date",
                  "example": "2019-01-13T21:07:13.273Z"
                },
                "invoice_id": {
                  "type": "number",
                  "description": "Invoice ID",
                  "example": 10
                },
                "payment_amount": {
                  "type": "number",
                  "description": "Invoice Amount",
                  "example": 100000
                },
                "due": {
                  "type": "number",
                  "description": "Invoice Due Amount",
                  "example": 0
                },
                "grand_total": {
                  "type": "number",
                  "description": "Invoice Grand Total Amount",
                  "example": 126000
                },
                "doc_number": {
                  "type": "number",
                  "description": "Document Number",
                  "example": "INV-000000013"
                }
              }
            }
          }
        }
      },
      "getSalesPaymentsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "payment_id": {
                  "type": "number",
                  "description": "Payment ID",
                  "example": 4
                },
                "payment_no": {
                  "type": "string",
                  "description": "Payment Number",
                  "example": "CP-0000004"
                },
                "contact_id": {
                  "type": "number",
                  "description": "Contact ID",
                  "example": 1
                },
                "contact_name": {
                  "type": "string",
                  "description": "Contact Name",
                  "example": "Mikha Januardi Millen - 08987456123 - mikha.januardi@gmail.com"
                },
                "account_id": {
                  "type": "number",
                  "description": "Account ID",
                  "example": 1
                },
                "account_name": {
                  "type": "string",
                  "description": "Account Name",
                  "example": "Kas"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "amount": {
                  "type": "number",
                  "description": "Payment Amount",
                  "example": 130000
                },
                "settlement_no": {
                  "type": "string",
                  "description": "Settlement Number",
                  "example": null
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getSalesReturnInvoiceResponse": {
        "type": "object",
        "properties": {
          "settlement_id": {
            "type": "number",
            "description": "Sales Return Settlement ID",
            "example": 0
          },
          "settlement_no": {
            "type": "string",
            "description": "Sales Return Settlement Number",
            "example": "[auto]"
          },
          "return_id": {
            "type": "number",
            "description": "Sales Return ID",
            "example": 1
          },
          "return_no": {
            "type": "number",
            "description": "Sales Return Number",
            "example": "SR-000000001"
          },
          "contact_id": {
            "type": "number",
            "description": "Contact ID (Customer)",
            "example": 1
          },
          "customer_id": {
            "type": "number",
            "description": "Contact ID (Customer)",
            "example": 1
          },
          "customer_name": {
            "type": "string",
            "description": "Contact Name (Customer)",
            "example": "Mikha"
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2019-01-13T22:03:56.972Z"
          },
          "created_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2019-01-13T22:03:56.972Z"
          },
          "amount": {
            "type": "string",
            "description": "Settlement Amount",
            "example": 120000
          },
          "total": {
            "type": "string",
            "description": "Settlement Amount Total",
            "example": 120000
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "settlement_detail_id": {
                  "type": "number",
                  "description": "Sales Return Settlement Detail ID",
                  "example": 0
                },
                "payment_amount": {
                  "type": "number",
                  "description": "Invoice Payment Amount",
                  "example": 120000
                },
                "doc_id": {
                  "type": "number",
                  "description": "Document ID",
                  "example": 9
                },
                "doc_number": {
                  "type": "string",
                  "description": "Document Number",
                  "example": "INV-000000012"
                },
                "trx_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2019-01-13T22:03:56.972Z"
                },
                "due_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Due Date",
                  "example": "2019-01-13T22:03:56.972Z"
                },
                "grand_total": {
                  "type": "string",
                  "description": "Invoice Grand Total",
                  "example": 130000
                },
                "due": {
                  "type": "string",
                  "description": "Invoice Due Amount",
                  "example": 10000
                }
              }
            }
          }
        }
      },
      "getSalesReturnInvoicesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "doc_id": {
                  "type": "number",
                  "description": "Document ID",
                  "example": 4
                },
                "doc_no": {
                  "type": "string",
                  "description": "Document Number",
                  "example": "SR-000000001"
                },
                "customer_name": {
                  "type": "string",
                  "description": "Contact Name",
                  "example": "Mikha Januardi Millen"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "return_id": {
                  "type": "string",
                  "description": "Return ID",
                  "example": 1
                },
                "return_no": {
                  "type": "string",
                  "description": "Return Number",
                  "example": "SR-000000001"
                },
                "trx_type": {
                  "type": "string",
                  "description": "Transaction Type",
                  "example": "settlement"
                },
                "amount": {
                  "type": "string",
                  "description": "Amount",
                  "example": 120000
                },
                "doc_type": {
                  "type": "string",
                  "description": "Document Type",
                  "example": "Potong Faktur"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getSalesReturnResponse": {
        "required": [
          "customer_name",
          "location_id",
          "return_no"
        ],
        "type": "object",
        "properties": {
          "return_id": {
            "type": "number",
            "description": "Sales Return ID",
            "example": 0
          },
          "return_no": {
            "type": "string",
            "description": "Sales Return Number",
            "example": "[auto]"
          },
          "customer_id": {
            "type": "number",
            "description": "Customer ID",
            "example": 1
          },
          "customer_name": {
            "type": "string",
            "description": "Customer Name",
            "example": 1
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Tranasction Date",
            "example": "2019-01-13T21:21:32.261Z"
          },
          "created_date": {
            "type": "string",
            "format": "date",
            "description": "Created Date",
            "example": "2019-01-13T21:21:32.261Z"
          },
          "is_tax_included": {
            "type": "boolean",
            "description": "Wether Tax Included",
            "example": false
          },
          "note": {
            "type": "string",
            "description": "Sales Return Note",
            "example": "Barang Cacat"
          },
          "sub_total": {
            "type": "string",
            "description": "Sub Total",
            "example": 120000
          },
          "total_tax": {
            "type": "string",
            "description": "Total Tax",
            "example": 0
          },
          "grand_total": {
            "type": "string",
            "description": "Grand Total",
            "example": 120000
          },
          "invoice_id": {
            "type": "number",
            "description": "Invoice ID",
            "example": 9
          },
          "location_id": {
            "type": "number",
            "description": "Location ID",
            "example": -1
          },
          "invoice_no": {
            "type": "number",
            "description": "Invoice Number",
            "example": "INV-000000012"
          },
          "location_name": {
            "type": "number",
            "description": "Location Name",
            "example": "Pusat"
          },
          "items": {
            "type": "array",
            "description": "List Return Detail",
            "items": {
              "type": "object",
              "properties": {
                "return_detail_id": {
                  "type": "number",
                  "description": "Return Detail ID",
                  "example": 0
                },
                "invoice_detail_id": {
                  "type": "number",
                  "description": "Invoice Detail ID",
                  "example": 0
                },
                "serial_no": {
                  "type": "string",
                  "description": "Serial Number",
                  "example": ""
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 5
                },
                "item_name": {
                  "type": "number",
                  "description": "Item Name",
                  "example": "Kaos DreamCatcher Born to Be Yours"
                },
                "item_code": {
                  "type": "number",
                  "description": "Item Code",
                  "example": "BTY-L"
                },
                "description": {
                  "type": "string",
                  "description": "Item Description",
                  "example": "Kaos DreamCatcher Born to Be Yours"
                },
                "sales_acct_id": {
                  "type": "number",
                  "description": "Sales Account ID",
                  "example": 28
                },
                "tax_id": {
                  "type": "number",
                  "description": "Tax ID",
                  "example": 1
                },
                "tax_name": {
                  "type": "string",
                  "description": "Tax Name",
                  "example": "No Tax"
                },
                "account_name": {
                  "type": "string",
                  "description": "Account Name",
                  "example": "4-4000 - Penjualan"
                },
                "price": {
                  "type": "string",
                  "description": "Item Price",
                  "example": 120000
                },
                "sell_price": {
                  "type": "string",
                  "description": "Item Sell Price",
                  "example": 120000
                },
                "original_price": {
                  "type": "string",
                  "description": "Item Original Price",
                  "example": 120000
                },
                "rate": {
                  "type": "string",
                  "description": "Rate",
                  "example": 0
                },
                "unit": {
                  "type": "string",
                  "description": "Unit Name",
                  "example": "Buah"
                },
                "qty_in_base": {
                  "type": "number",
                  "description": "Quantity that will be return",
                  "example": 1
                },
                "tax_amount": {
                  "type": "string",
                  "description": "Tax Amount",
                  "example": 0
                },
                "amount": {
                  "type": "string",
                  "description": "Total Amount",
                  "example": 120000
                },
                "cogs": {
                  "type": "string",
                  "description": "Cost of Goods Sold",
                  "example": 78000
                },
                "location_id": {
                  "type": "number",
                  "description": "Location ID",
                  "example": -1
                }
              }
            }
          }
        }
      },
      "getSalesReturnsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "doc_id": {
                  "type": "number",
                  "description": "Document ID",
                  "example": 4
                },
                "doc_number": {
                  "type": "string",
                  "description": "Document Number",
                  "example": "SR-000000001"
                },
                "contact_id": {
                  "type": "number",
                  "description": "Contact ID",
                  "example": 1
                },
                "customer_name": {
                  "type": "string",
                  "description": "Contact Name",
                  "example": "Mikha Januardi Millen"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "due_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Due Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "is_opening_balance": {
                  "type": "boolean",
                  "description": "Wether Transaction is an Opening Balance",
                  "example": false
                },
                "grand_total": {
                  "type": "string",
                  "description": "Payment Amount",
                  "example": -120000
                },
                "due": {
                  "type": "string",
                  "description": "Due",
                  "example": -120000
                },
                "doc_type": {
                  "type": "string",
                  "description": "Document Type",
                  "example": "credit_note"
                },
                "age": {
                  "type": "number",
                  "description": "Age",
                  "example": 0
                },
                "age_due": {
                  "type": "number",
                  "description": "Age Due",
                  "example": 0
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getSalesSettlementResponse": {
        "type": "object",
        "properties": {
          "invoice_amount": {
            "type": "string",
            "description": "Invoice amount",
            "example": "0.0000"
          },
          "note": {
            "type": "string",
            "description": "Note",
            "example": null
          },
          "payment_amount": {
            "type": "string",
            "description": "Payment amount",
            "example": "0.00000"
          },
          "receive_amount": {
            "type": "string",
            "description": "Receive amount",
            "example": "10811049.0000"
          },
          "settlement_header_id": {
            "type": "number",
            "description": "Settlement header Id",
            "example": 38
          },
          "settlement_no": {
            "type": "string",
            "description": "Settlement No",
            "example": "STL-000000038"
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2018-10-20T17:00:00.000Z"
          },
          "items": {
            "type": "array",
            "description": "List Item in Purchase",
            "items": {
              "type": "object",
              "properties": {
                "account_id": {
                  "type": "number",
                  "description": "Account Id",
                  "example": 1
                },
                "account_name": {
                  "type": "string",
                  "description": "Account Name",
                  "example": "1-1000 - Kas"
                },
                "adjust_amount": {
                  "type": "number",
                  "description": "Adjust amount",
                  "example": 0
                },
                "date": {
                  "type": "date",
                  "example": "2021-01-31T13:01:28.000Z"
                },
                "diff_amount": {
                  "type": "string",
                  "description": "The different amount",
                  "example": "84843.0000"
                },
                "internal_invoice_amount": {
                  "type": "string",
                  "description": "Internal invoice amount",
                  "example": "0.0000"
                },
                "invoice_id": {
                  "type": "number",
                  "description": "Invoice ID",
                  "example": 22
                },
                "invoice_no": {
                  "type": "string",
                  "description": "Invoice Number",
                  "example": "INV-000000222"
                },
                "salesorder_id": {
                  "type": "number",
                  "description": "Salesorder Id",
                  "example": 220
                },
                "settlement_detail_id": {
                  "type": "number",
                  "description": "settlement_detail_id",
                  "example": 8503
                },
                "status": {
                  "type": "boolean",
                  "description": "settlement_detail_id",
                  "example": 8503
                },
                "store_order_amount": {
                  "type": "number",
                  "description": "Store order amount",
                  "example": "84843.0000"
                },
                "store_ref_no": {
                  "type": "string",
                  "description": "store ref no",
                  "example": "TP-INV/20210126/XXI/I/736301728"
                }
              }
            }
          }
        }
      },
      "getSalesSettlementsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "cashbank_payment_id": {
                  "type": "number",
                  "description": "Cashbank payment Id",
                  "example": 4
                },
                "cashbank_payment_no": {
                  "type": "string",
                  "description": "Cashbank payment no",
                  "example": null
                },
                "cashbank_receive_id": {
                  "type": "number",
                  "description": "Cashbank receive Id",
                  "example": 118
                },
                "cashbank_receive_no": {
                  "type": "string",
                  "description": "Cashbank receive no",
                  "example": "REC-000000028"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "channel_id": {
                  "type": "number",
                  "description": "The channel Id",
                  "example": 128
                },
                "invoice_amount": {
                  "type": "string",
                  "description": "Invoice amount",
                  "example": "0.00000"
                },
                "note": {
                  "type": "string",
                  "description": "Note",
                  "example": null
                },
                "payment_amount": {
                  "type": "string",
                  "description": "Payment amount",
                  "example": "0.00000"
                },
                "payment_id": {
                  "type": "number",
                  "description": "Payment Id",
                  "example": 10
                },
                "payment_no": {
                  "type": "string",
                  "description": "Payment no",
                  "example": ""
                },
                "receive_amount": {
                  "type": "string",
                  "description": "Receive amount",
                  "example": "10811049.0000"
                },
                "settlement_header_id": {
                  "type": "number",
                  "description": "Settlement header Id",
                  "example": 38
                },
                "settlement_no": {
                  "type": "string",
                  "description": "Settlement No",
                  "example": "STL-000000038"
                },
                "source": {
                  "type": "string",
                  "description": "Source",
                  "example": "TOKOPEDIA - JubeCorner"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getShippedOrdersResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "salesorder_id": {
                  "type": "number",
                  "description": "Sales Order ID",
                  "example": 6
                },
                "salesorder_no": {
                  "type": "string",
                  "description": "Sales Order Number",
                  "example": "SO-000000006"
                },
                "invoice_no": {
                  "type": "string",
                  "description": "Invoice Number",
                  "example": "INV-000000222"
                },
                "customer_name": {
                  "type": "string",
                  "description": "Contact Name (Customer)",
                  "example": "Pelanggan Umum"
                },
                "transaction_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Transaction Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "created_date": {
                  "type": "string",
                  "format": "date",
                  "description": "Created Date",
                  "example": "2018-10-20T17:00:00.000Z"
                },
                "source_name": {
                  "type": "string",
                  "description": "Source Name",
                  "example": "Shopee"
                },
                "source": {
                  "type": "number",
                  "description": "Source",
                  "example": 1
                },
                "picklist_id": {
                  "type": "number",
                  "description": "Picklist ID",
                  "example": 1
                },
                "picklist_no": {
                  "type": "string",
                  "description": "Picklist Number",
                  "example": "PICK-000000003"
                },
                "store_name": {
                  "type": "string",
                  "description": "Store Name",
                  "example": "Shopee"
                },
                "store_id": {
                  "type": "string",
                  "description": "Store ID",
                  "example": 2
                },
                "shipper": {
                  "type": "string",
                  "description": "Shipper",
                  "example": "J&T REG"
                },
                "tracking_no": {
                  "type": "string",
                  "description": "Tracking Number",
                  "example": 1212121212
                },
                "ship_address": {
                  "type": "string",
                  "description": "Shipping Full Address",
                  "example": "Kutabumi\\r\\nPasar Kemis\\r\\nTangerang\\r\\nBanten\\r\\n11750"
                },
                "is_shipped": {
                  "type": "boolean",
                  "description": "Wether Order have been Shipped",
                  "example": true
                },
                "b_tracking_no": {
                  "type": "string",
                  "description": "Tracking Number",
                  "example": "true|1212121212"
                },
                "status": {
                  "type": "string",
                  "description": "Status",
                  "example": "Paid"
                },
                "awb_created_date": {
                  "type": "date",
                  "description": "AWB Created Date",
                  "example": "2020-03-27T12:18:20.841Z"
                },
                "invoice_id": {
                  "type": "number",
                  "description": "Invoice ID",
                  "example": 1
                },
                "shipment_type": {
                  "type": "string",
                  "description": "Type of Shipment",
                  "example": null
                },
                "status_details": {
                  "type": "string",
                  "description": "Status details",
                  "example": null
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getShopeeLogisticResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status",
            "example": "OK"
          },
          "data": {
            "type": "array",
            "description": "List Logistics",
            "items": {
              "type": "object",
              "properties": {
                "weight_limits": {
                  "type": "object",
                  "properties": {
                    "item_min_weight": {
                      "type": "number",
                      "description": "Min Weight",
                      "example": 0.001
                    },
                    "item_max_weight": {
                      "type": "number",
                      "description": "Max Weight",
                      "example": 0.001
                    }
                  }
                },
                "has_cod": {
                  "type": "boolean",
                  "description": "Has COD",
                  "example": false
                },
                "logistic_name": {
                  "type": "string",
                  "description": "Logistic Name",
                  "example": "JNE OKE"
                },
                "logistic_id": {
                  "type": "number",
                  "description": "Logistic ID",
                  "example": 1
                },
                "preferred": {
                  "type": "boolean",
                  "description": "Is Preferred",
                  "example": true
                },
                "fee_type": {
                  "type": "number",
                  "description": "Fee type",
                  "example": "SIZE_INPUT"
                }
              }
            }
          }
        }
      },
      "getStockAdjustmentResponse": {
        "type": "object",
        "properties": {
          "item_adj_id": {
            "type": "number",
            "description": "Adjustment ID",
            "example": -1
          },
          "item_adj_no": {
            "type": "string",
            "description": "Adjustment Number",
            "example": "_ADJ-BB_"
          },
          "transaction_date": {
            "type": "string",
            "format": "date-time",
            "description": "Adjustment Transaction Date",
            "example": "2018-10-20T17:00:00.000Z"
          },
          "created_date": {
            "type": "string",
            "format": "date-time",
            "description": "Adjustment Created Date",
            "example": "2018-10-20T17:00:00.000Z"
          },
          "note": {
            "type": "string",
            "description": "Adjustment Note",
            "example": "Saldo Awal Persediaan"
          },
          "is_opening_balance": {
            "type": "boolean",
            "description": "Is Adjustment an Opening Balance",
            "example": true
          },
          "location_id": {
            "type": "number",
            "description": "Adjustment Location",
            "example": -1
          },
          "created_by": {
            "type": "string",
            "description": "User that create Adjustment",
            "example": "Saldo Awal Persediaan"
          },
          "location_name": {
            "type": "string",
            "description": "Adjustment Location Name",
            "example": "Pusat"
          },
          "items": {
            "type": "array",
            "description": "List Adjustment Items",
            "items": {
              "type": "object",
              "properties": {
                "item_adj_detail_id": {
                  "type": "number",
                  "description": "Adjustment Detail ID",
                  "example": 1
                },
                "item_id": {
                  "type": "number",
                  "description": "Item Adjustment ID",
                  "example": 1
                },
                "serial_no": {
                  "type": "string",
                  "description": "Serial Number",
                  "example": "S000121"
                },
                "qty": {
                  "type": "string",
                  "description": "Item Quantity",
                  "example": 0
                },
                "qty_in_base": {
                  "type": "string",
                  "description": "Item Quantity that will be add",
                  "example": 3
                },
                "uom_id": {
                  "type": "number",
                  "description": "Unit of Measure ID",
                  "example": 1
                },
                "unit": {
                  "type": "string",
                  "description": "Unit Name",
                  "example": "Buah"
                },
                "cost": {
                  "type": "string",
                  "description": "Item Cost",
                  "example": 75000
                },
                "amount": {
                  "type": "string",
                  "description": "Total Item Costs",
                  "example": 225000
                },
                "account_id": {
                  "type": "number",
                  "description": "Account ID",
                  "example": 75
                },
                "account_code": {
                  "type": "string",
                  "description": "Account Code",
                  "example": "7-7004"
                },
                "item_full_name": {
                  "type": "string",
                  "description": "Item Full Name",
                  "example": "BAR-1-HIT - Barang 1"
                },
                "account_name": {
                  "type": "string",
                  "description": "Account Name",
                  "example": "7-7004 - Penyesuaian Persediaan Barang"
                },
                "average_cost": {
                  "type": "string",
                  "description": "Average Cost",
                  "example": 75000
                },
                "description": {
                  "type": "string",
                  "description": "Item Description",
                  "example": "Item Example Description"
                }
              }
            }
          }
        }
      },
      "getStoreCategoriesResponse": {
        "type": "array",
        "description": "List Items that exists in System",
        "items": {
          "type": "object",
          "properties": {
            "category_id": {
              "type": "string",
              "description": "Category Id (UUID)",
              "example": "ed8e8964-d3ab-4101-834b-426b85b241b0"
            },
            "category_name": {
              "type": "string",
              "description": "Category Name",
              "example": "Bottem/Men"
            }
          }
        }
      },
      "getTiersResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "loyalty_tier_id": {
              "type": "number",
              "description": "Loyalty Tier ID",
              "example": 1
            },
            "tier_name": {
              "type": "string",
              "description": "Loyalty Tier Name",
              "example": "Bronze"
            },
            "spending_value": {
              "type": "string",
              "description": "Spending Value",
              "example": 10
            }
          }
        }
      },
      "getTokopediaShowcasesResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status",
            "example": "OK"
          },
          "etalase": {
            "type": "array",
            "description": "List Etalase",
            "items": {
              "type": "object",
              "properties": {
                "etalase_id": {
                  "type": "number",
                  "description": "Etalase ID",
                  "example": 1
                },
                "etalase_name": {
                  "type": "number",
                  "description": "Etalase Name",
                  "example": "PHONE CASE"
                }
              }
            }
          }
        }
      },
      "getUploadProductErrorsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "description": "Action Name",
                  "example": "create"
                },
                "channel_id": {
                  "type": "number",
                  "description": "Channel ID",
                  "example": 1
                },
                "error_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Error date",
                  "example": "2020-05-14T18:01:42.539Z"
                },
                "error_text": {
                  "type": "string",
                  "description": "Reason error",
                  "example": "No refresh token defined"
                },
                "item_group_id": {
                  "type": "number",
                  "description": "Item Group ID",
                  "example": 50
                },
                "item_group_name": {
                  "type": "string",
                  "description": "Item Group Name",
                  "example": "3Second Men Denim Pants 080319"
                },
                "store_id": {
                  "type": "number",
                  "description": "Store ID",
                  "example": 1
                },
                "store_name": {
                  "type": "string",
                  "description": "Store Name",
                  "example": "BUKALAPAK - Toko"
                },
                "success": {
                  "type": "boolean",
                  "description": "Status",
                  "example": false
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "getVariations": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "item_category_id": {
                  "type": "number",
                  "description": "Item Category ID",
                  "example": 100
                },
                "brand_id": {
                  "type": "number",
                  "description": "Brand ID",
                  "example": 169798
                },
                "brand_name": {
                  "type": "string",
                  "description": "Brand Name",
                  "example": "ASUS"
                },
                "item_group_id": {
                  "type": "number",
                  "description": "Item Group ID",
                  "example": 34
                },
                "item_group_name": {
                  "type": "string",
                  "description": "Item Group Name",
                  "example": "LAPTOP ASUS ROG - BLACK"
                },
                "created_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Create date",
                  "example": "2020-07-01T17:00:00.000Z"
                },
                "variations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Label of variation",
                        "example": "Ukuran"
                      },
                      "values": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "Value of variation",
                          "example": "13 inch"
                        }
                      }
                    }
                  }
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 9
                },
                "item_code": {
                  "type": "number",
                  "description": "SKU",
                  "example": "BAR-LAP-13"
                },
                "item_name": {
                  "type": "string",
                  "description": "Item Name",
                  "example": "Barang Laptop"
                },
                "variation_values": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "example": "Ukuran"
                      },
                      "value": {
                        "type": "string",
                        "example": "13 inch"
                      }
                    }
                  }
                },
                "barcode": {
                  "type": "string",
                  "description": "Barcode",
                  "example": null
                },
                "is_bundle": {
                  "type": "boolean",
                  "description": "Is bundle",
                  "example": false
                },
                "rop": {
                  "type": "number",
                  "description": "Return of Purchase",
                  "example": 0
                },
                "lead_time": {
                  "type": "number",
                  "description": "default is 0",
                  "example": 0
                },
                "rack_no": {
                  "type": "number",
                  "description": "Rack Number",
                  "example": null
                },
                "package_weight": {
                  "type": "number",
                  "description": "Package Weight",
                  "example": 50
                },
                "store_priority_qty_treshold": {
                  "type": "number",
                  "description": "Store Priority Treshold",
                  "example": 2
                },
                "sell_price": {
                  "type": "number",
                  "description": "Sell price",
                  "example": 12000000
                },
                "end_qty": {
                  "type": "number",
                  "description": "End QTY",
                  "example": 1
                },
                "average_cost": {
                  "type": "number",
                  "description": "Average Cost",
                  "example": null
                },
                "is_variant": {
                  "type": "boolean",
                  "description": "Is Variant",
                  "example": true
                },
                "is_unlimited_stock": {
                  "type": "boolean",
                  "description": "Is Unlimited Stock",
                  "example": false
                },
                "last_modified": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Create date",
                  "example": "2020-07-01T17:00:00.000Z"
                },
                "channels": {
                  "type": "array",
                  "description": "Channel list",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ioc_id": {
                        "type": "number",
                        "description": "Item on Channel ID",
                        "example": 2
                      },
                      "channel_id": {
                        "type": "number",
                        "description": "Channel ID",
                        "example": 2
                      },
                      "store_id": {
                        "type": "number",
                        "description": "Store ID",
                        "example": 8529
                      },
                      "store_name": {
                        "type": "string",
                        "description": "Store Name",
                        "example": "Toko Keren"
                      },
                      "sell_here": {
                        "type": "boolean",
                        "description": "Sell here",
                        "example": false
                      }
                    }
                  },
                  "images": "type",
                  "category_name": {
                    "type": "string",
                    "description": "Category Name",
                    "example": "Laptop"
                  },
                  "selected_brand_name": {
                    "type": "string",
                    "description": "Selected Brand Name",
                    "example": "ASUS"
                  },
                  "have_general_variation": {
                    "type": "boolean",
                    "description": "Have General Variation",
                    "example": false
                  }
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "images": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Model_6"
        }
      },
      "internalServerError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Error Status Code",
            "example": 500
          },
          "error": {
            "type": "string",
            "description": "Error Title",
            "example": "Internal Server Error"
          },
          "message": {
            "type": "string",
            "description": "Error Message",
            "example": "An internal server error occurred"
          },
          "code": {
            "type": "string",
            "description": "Error Code",
            "example": 42601
          }
        }
      },
      "inventoryTransferItem": {
        "type": "object",
        "required": [
          "item_transfer_detail_id",
          "item_id",
          "qty_in_base",
          "source_location_id",
          "destination_location_id"
        ],
        "properties": {
          "item_transfer_detail_id": {
            "type": "number",
            "description": "Item Transfer Detail ID",
            "example": 0
          },
          "received_item_transfer_detail_id": {
            "type": "number",
            "description": "This field is same as the item_transfer_detail_id. <br>\nRequired when creating Transfer In.\n",
            "example": 0
          },
          "item_transfer_id": {
            "type": "number",
            "description": "Transfer ID <br>\nNo need to send this field when creating Transfer In\n",
            "example": 0
          },
          "item_id": {
            "type": "number",
            "description": "Item ID",
            "example": 1
          },
          "serial_no": {
            "type": "string",
            "description": "Serial Number",
            "example": "SN001"
          },
          "qty_in_base": {
            "minimum": 1,
            "type": "number",
            "description": "Item Quantity that will be transfer",
            "example": 1
          },
          "unit": {
            "type": "string",
            "description": "Unit Name",
            "example": "Buah"
          },
          "description": {
            "type": "string",
            "description": "Item Description",
            "example": "Item Transfer Request Example"
          },
          "source_location_id": {
            "type": "number",
            "description": "Source Location ID",
            "example": -1
          },
          "destination_location_id": {
            "type": "number",
            "description": "Destination Location ID. Can't be same with Source Location ID",
            "example": 1
          }
        }
      },
      "inventoryTransferItems": {
        "type": "array",
        "description": "List Items that will be transfered",
        "items": {
          "$ref": "#/components/schemas/inventoryTransferItem"
        }
      },
      "inventoryTransferRequest": {
        "required": [
          "destination_location_id",
          "item_transfer_no",
          "source_location_id",
          "transfer_type"
        ],
        "type": "object",
        "properties": {
          "item_transfer_id": {
            "type": "number",
            "description": "Transfer ID <br>\nTo create new transfer => \"item_transfer_id\": 0 <br>\nTo edit transfer => \"item_transfer_id\": {item_transfer_id}\n",
            "example": 0
          },
          "item_transfer_no": {
            "type": "string",
            "description": "Transfer Number <br>\nTo create new transfer => \"item_transfer_no\": \"[auto]\" <br>\nTo edit transfer => \"item_transfer_no\": {item_transfer_no}\n",
            "example": "[auto]"
          },
          "transaction_date": {
            "type": "string",
            "format": "date-time",
            "description": "Transfer Transaction Date",
            "example": "2020-01-06T01:49:21.999Z"
          },
          "created_date": {
            "type": "string",
            "format": "date-time",
            "description": "Record Created Date",
            "example": "2020-01-06T01:49:21.999Z"
          },
          "received_date": {
            "type": "string",
            "format": "date-time",
            "description": "Transfer Received Date",
            "example": "2020-01-06T01:49:21.999Z"
          },
          "note": {
            "type": "string",
            "description": "Transfer Note",
            "example": "Transfer Request Example"
          },
          "source_location_id": {
            "type": "number",
            "description": "Source Location ID",
            "example": -1
          },
          "destination_location_id": {
            "type": "number",
            "description": "Destination Location ID. Can't be same with Source Location ID",
            "example": 1
          },
          "transfer_type": {
            "type": "number",
            "description": "Transfer Type <br>\n0 => Transfer Out <br>\n1 => Tranfer In\n",
            "example": 0
          },
          "source_transfer_no": {
            "type": "string",
            "description": "Source Transfer No",
            "example": "TR0001"
          },
          "items": {
            "$ref": "#/components/schemas/inventoryTransferItems"
          }
        }
      },
      "item": {
        "required": [
          "amount",
          "account_id",
          "unit",
          "cost",
          "amount",
          "qty_in_base",
          "item_adj_detail_id",
          "item_id"
        ],
        "type": "object",
        "properties": {
          "item_adj_detail_id": {
            "type": "number",
            "description": "Adjustment Detail ID [0 = create]",
            "example": 0
          },
          "item_id": {
            "type": "number",
            "description": "Item Adjustment ID",
            "example": 1
          },
          "serial_no": {
            "type": "string",
            "description": "Serial Number",
            "example": "S000121"
          },
          "qty_in_base": {
            "type": "number",
            "description": "Item Quantity that will be add",
            "example": 1
          },
          "uom_id": {
            "type": "number",
            "description": "Unit of Measure ID",
            "example": -1
          },
          "unit": {
            "type": "string",
            "description": "Unit Name",
            "example": "Buah"
          },
          "cost": {
            "type": "string",
            "description": "Item Cost",
            "example": 100000
          },
          "amount": {
            "type": "number",
            "description": "Item Cost Amount",
            "example": 100000
          },
          "location_id": {
            "type": "number",
            "description": "Location ID",
            "example": -1
          },
          "account_id": {
            "type": "number",
            "description": "User Account that do the Adjustment [default is 75]",
            "example": 75
          },
          "description": {
            "type": "string",
            "description": "Item Description",
            "example": "Item Example Description"
          },
          "batch_no": {
            "type": "string",
            "description": "Batch number",
            "example": null
          }
        }
      },
      "items": {
        "type": "array",
        "description": "Adjustment Items",
        "items": {
          "$ref": "#/components/schemas/item"
        }
      },
      "loginError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Error Status Code",
            "example": 500
          },
          "error": {
            "type": "string",
            "description": "Error Title",
            "example": "Internal Server Error"
          },
          "message": {
            "type": "string",
            "description": "Error Message",
            "example": "An internal server error occurred"
          },
          "code": {
            "type": "string",
            "description": "Error Code",
            "example": "Invalid email or password"
          }
        }
      },
      "loginRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Registered Email in system",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "Password for login authentication",
            "example": "password"
          }
        }
      },
      "loginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Authentication Token.\nUse this token for your subsequent calls to other end points\n",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InZvdzIybzZjdDNjaTdnbXd5ZWZ0MXciLCJleHAiOjE1NDY3MTgxNjA2NDcsImlhdCI6MTU0NjY3NDk2MH0.KVtDt-aIF05dkYIfD6-ZY8RROi0LiIWRyNGhRFxmqWo"
          },
          "passwordExpired": {
            "type": "string",
            "description": "Password has expired",
            "example": false
          },
          "userName": {
            "type": "string",
            "description": "User Login Email",
            "example": "user@example.com"
          },
          "roles": {
            "type": "array",
            "description": "List Role ID of Authenticated User",
            "items": {
              "type": "object",
              "properties": {
                "role_id": {
                  "type": "string",
                  "description": "Role ID",
                  "example": -1
                }
              }
            }
          },
          "packageId": {
            "type": "number",
            "description": "User Package ID",
            "example": 2
          },
          "trialLeft": {
            "type": "number",
            "description": "User Trial Left Time",
            "example": 0
          },
          "showGettingStarted": {
            "type": "boolean",
            "description": "Show Getting Started when User Login",
            "example": true
          },
          "currentCompany": {
            "type": "number",
            "description": "User Current Company ID",
            "example": 10
          },
          "companies": {
            "type": "array",
            "description": "List Authenticated User Companies",
            "items": {
              "type": "object",
              "properties": {
                "company_id": {
                  "type": "number",
                  "description": "Company Name",
                  "example": 10
                },
                "company_name": {
                  "type": "string",
                  "description": "Company Name",
                  "example": "default"
                }
              }
            }
          }
        }
      },
      "Model_11": {
        "type": "object",
        "properties": {
          "bom_comp_id": {
            "minimum": 0,
            "type": "number"
          },
          "item_id": {
            "minimum": 1,
            "type": "number"
          },
          "qty": {
            "minimum": 1,
            "type": "number"
          },
          "uom_id": {
            "type": "number"
          },
          "unit": {
            "type": "string"
          }
        }
      },
      "Model_12": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "values": {
            "$ref": "#/components/schemas/stores"
          }
        }
      },
      "Model_13": {
        "type": "object",
        "properties": {
          "attribute_name": {
            "type": "string"
          },
          "attribute_value": {
            "type": "string",
            "x-alternatives": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/schema1",
                "type": "array"
              }
            ]
          }
        }
      },
      "Model_14": {
        "type": "object",
        "properties": {
          "channel_id": {
            "type": "number"
          },
          "sell_here": {
            "type": "boolean"
          },
          "channel_category_id": {
            "type": "string"
          },
          "store_id": {
            "type": "number"
          },
          "attributes": {
            "$ref": "#/components/schemas/attributes"
          }
        }
      },
      "Model_15": {
        "type": "object",
        "properties": {
          "item_id": {
            "type": "number"
          },
          "image_id": {
            "type": "number"
          },
          "file_name": {
            "type": "string"
          },
          "cloud_key": {
            "type": "string"
          },
          "sequence_number": {
            "type": "number"
          },
          "thumbnail": {
            "type": "string"
          },
          "channel_info": {
            "$ref": "#/components/schemas/channel_info"
          }
        }
      },
      "Model_16": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Model_15"
        }
      },
      "Model_17": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "x-alternatives": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "Model_18": {
        "type": "object",
        "properties": {
          "channel_id": {
            "type": "number"
          },
          "store_id": {
            "type": "number"
          },
          "sell_price": {
            "type": "number"
          }
        }
      },
      "Model_19": {
        "type": "object",
        "properties": {
          "is_bundle": {
            "type": "boolean"
          },
          "item_id": {
            "type": "number"
          },
          "item_code": {
            "type": "string"
          },
          "sell_price": {
            "type": "number"
          },
          "images": {
            "$ref": "#/components/schemas/Model_16"
          },
          "variation_values": {
            "$ref": "#/components/schemas/variation_values"
          },
          "prices": {
            "$ref": "#/components/schemas/prices"
          }
        }
      },
      "Model_27": {
        "type": "object",
        "properties": {
          "promotion_detail_id": {
            "type": "number"
          },
          "item_group_id": {
            "type": "number"
          },
          "promotion_price": {
            "type": "number"
          }
        }
      },
      "Model_38": {
        "type": "object",
        "properties": {
          "purchaseorder_detail_id": {
            "type": "number"
          },
          "item_id": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "sales_acct_id": {
            "type": "number"
          },
          "tax_id": {
            "type": "number"
          },
          "price": {
            "type": "number"
          },
          "unit": {
            "type": "string"
          },
          "qty_in_base": {
            "type": "number"
          },
          "disc": {
            "type": "number"
          },
          "disc_amount": {
            "type": "number"
          },
          "tax_amount": {
            "type": "number"
          },
          "amount": {
            "type": "number"
          },
          "location_id": {
            "type": "number"
          }
        }
      },
      "Model_50": {
        "type": "object",
        "properties": {
          "ids": {
            "$ref": "#/components/schemas/stores"
          }
        }
      },
      "Model_51": {
        "type": "object",
        "properties": {
          "salesorder_detail_id": {
            "type": "number"
          },
          "item_id": {
            "type": "number"
          },
          "serial_no": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "sales_acct_id": {
            "type": "number"
          },
          "tax_id": {
            "type": "number"
          },
          "price": {
            "type": "number"
          },
          "unit": {
            "type": "string"
          },
          "qty_in_base": {
            "type": "number"
          },
          "disc": {
            "type": "number"
          },
          "disc_amount": {
            "type": "number"
          },
          "tax_amount": {
            "type": "number"
          },
          "amount": {
            "type": "number"
          },
          "location_id": {
            "type": "number"
          },
          "is_canceled": {
            "type": "boolean"
          },
          "cancel_reason": {
            "type": "string"
          },
          "cancel_reason_detail": {
            "type": "string"
          },
          "channel_order_detail_id": {
            "type": "string"
          },
          "shipper": {
            "type": "string"
          }
        }
      },
      "Model_52": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Model_51"
        }
      },
      "Model_6": {
        "required": [
          "cloud_key",
          "file_name",
          "thumbnail"
        ],
        "type": "object",
        "properties": {
          "reward_image_id": {
            "minimum": 0,
            "type": "number"
          },
          "sequence_number": {
            "minimum": 0,
            "type": "number"
          },
          "thumbnail": {
            "type": "string"
          },
          "file_name": {
            "type": "string"
          },
          "cloud_key": {
            "type": "string"
          }
        }
      },
      "Model_73": {
        "type": "object",
        "properties": {
          "ids": {
            "$ref": "#/components/schemas/channel_info"
          }
        }
      },
      "ok": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status",
            "example": "ok"
          }
        }
      },
      "pointAdjustmentRequest": {
        "required": [
          "contact_id",
          "note",
          "point"
        ],
        "type": "object",
        "properties": {
          "contact_id": {
            "type": "number",
            "description": "Contact ID",
            "example": 3
          },
          "point": {
            "type": "number",
            "description": "Loyalty Point",
            "example": 25
          },
          "note": {
            "type": "string",
            "description": "Adjustment Note",
            "example": "Notes"
          },
          "source": {
            "type": "number",
            "description": "Loyalty Point Source",
            "default": 4
          }
        }
      },
      "prices": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Model_18"
        }
      },
      "product_skus": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Model_19"
        }
      },
      "registers": {
        "type": "array",
        "description": "List Cashiers if Location is a POS Outlet (Can be filled with empty array [])",
        "items": {
          "type": "object",
          "properties": {
            "register_id": {
              "type": "number",
              "description": "Register ID",
              "example": 0
            },
            "register_name": {
              "type": "string",
              "description": "Register Name",
              "example": "Denis"
            }
          }
        }
      },
      "reportShippingLabel": {
        "type": "object",
        "description": "List Item to Pick",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status",
            "example": "OK"
          },
          "url": {
            "type": "string",
            "description": "URL",
            "example": "https://report.jubelio.com/?&token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyZXBvcnROYW1lIjoiTGFiZWwgUGVuZ2lyaW1hbiIsImNvbXBhbnlJZCI6MTU4MCwidGVuYW50SWQiOiJqc3pkOXN2c3J4azRiOXZpbm92aHh3Ii"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "example": "Label Pengiriman"
          }
        }
      },
      "requestAwbOrderError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Error Status Code",
            "example": 400
          },
          "error": {
            "type": "string",
            "description": "Bad Request",
            "example": "Internal Server Error"
          },
          "message": {
            "type": "string",
            "description": "Error Message",
            "example": "Error when getting AWB"
          }
        }
      },
      "requestAwbOrderResponse": {
        "type": "object",
        "properties": {
          "salesorder_id": {
            "type": "number",
            "description": "Sales order ID",
            "example": 1
          },
          "shipper": {
            "type": "string",
            "description": "Shipper",
            "example": "JNE Cashless"
          },
          "reason": {
            "type": "string",
            "description": "Reason",
            "example": null
          },
          "tracking_no": {
            "type": "string",
            "description": "Tracking number",
            "example": "BLIJC02118495321"
          },
          "channel_order_detail_id": {
            "type": "string",
            "description": "The detail Id of channel Order",
            "example": "12099677836"
          },
          "package_id": {
            "type": "string",
            "description": "The package Id",
            "example": "2118495321"
          }
        }
      },
      "saveAirwayBillRequest": {
        "required": [
          "salesorder_id",
          "tracking_no",
          "shipper"
        ],
        "type": "object",
        "properties": {
          "salesorder_id": {
            "type": "number",
            "description": "Sales Order ID",
            "example": 1
          },
          "tracking_no": {
            "type": "string",
            "description": "Airway Bill",
            "example": 1234567890
          },
          "shipper": {
            "type": "string",
            "description": "Shipper Name",
            "example": "JNE REG"
          }
        }
      },
      "saveBillRequest": {
        "required": [
          "bill_no",
          "due_date",
          "is_opening_balance",
          "location_id",
          "supplier_name"
        ],
        "type": "object",
        "properties": {
          "bill_id": {
            "type": "number",
            "description": "Bill ID",
            "example": 0
          },
          "bill_no": {
            "type": "string",
            "description": "Bill Number",
            "example": "[auto]"
          },
          "contact_id": {
            "type": "number",
            "description": "Contact ID",
            "example": 5
          },
          "supplier_name": {
            "type": "string",
            "description": "Supplier Name",
            "example": "BLANJA"
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2018-11-19T19:37:56.176Z"
          },
          "due_date": {
            "type": "string",
            "format": "date",
            "description": "Due Date",
            "example": "2018-11-19T19:37:56.176Z"
          },
          "is_tax_included": {
            "type": "boolean",
            "description": "Wether Bill include Tax",
            "example": false
          },
          "note": {
            "type": "string",
            "description": "Bill Note",
            "example": "Penerimaan Barang yang sudah dipesan"
          },
          "sub_total": {
            "type": "number",
            "description": "Bill Sub Total",
            "example": 20000
          },
          "total_disc": {
            "type": "number",
            "description": "Total Discount",
            "example": 0
          },
          "total_tax": {
            "type": "number",
            "description": "Total Tax",
            "example": 0
          },
          "grand_total": {
            "type": "number",
            "description": "Bill Grand Total",
            "example": 20000
          },
          "payment_acct_id": {
            "type": "number",
            "description": "Payment Account ID",
            "example": false
          },
          "payment": {
            "type": "number",
            "description": "Payment",
            "example": 0
          },
          "ref_no": {
            "type": "string",
            "description": "Reference No",
            "example": 123654
          },
          "location_id": {
            "type": "number",
            "description": "Location ID",
            "example": -1
          },
          "is_opening_balance": {
            "type": "boolean",
            "description": "Wether Bill for Opening Balance",
            "example": false
          },
          "purchaseorder_id": {
            "type": "number",
            "description": "Purchase Order Id",
            "example": 20
          },
          "items": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bill_detail_id": {
                  "type": "number",
                  "description": "Bill Detail ID",
                  "example": 0
                },
                "purchaseorder_detail_id": {
                  "type": "number",
                  "description": "Purchase Order Detail Id",
                  "example": 30
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 7
                },
                "description": {
                  "type": "string",
                  "description": "Item Description",
                  "example": "Aqua 1,5 L"
                },
                "invt_acct_id": {
                  "type": "number",
                  "description": "Inventory Account ID",
                  "example": 4
                },
                "tax_id": {
                  "type": "number",
                  "description": "Tax ID",
                  "example": -1
                },
                "price": {
                  "type": "number",
                  "description": "Item Price",
                  "example": 4000
                },
                "unit": {
                  "type": "string",
                  "description": "Unit Name",
                  "example": "Buah"
                },
                "qty_in_base": {
                  "type": "number",
                  "description": "Quantity that will be add",
                  "example": 5
                },
                "disc": {
                  "type": "number",
                  "description": "Discount",
                  "example": 0
                },
                "disc_amount": {
                  "type": "number",
                  "description": "Total Discount Amount",
                  "example": 0
                },
                "tax_amount": {
                  "type": "number",
                  "description": "Tax Amount",
                  "example": 0
                },
                "amount": {
                  "type": "number",
                  "description": "Total Amount",
                  "example": 20000
                },
                "location_id": {
                  "type": "number",
                  "description": "Location ID",
                  "example": -1
                }
              }
            }
          }
        }
      },
      "saveContactRequest": {
        "required": [
          "contact_name",
          "contact_type"
        ],
        "type": "object",
        "properties": {
          "contact_id": {
            "type": "number",
            "description": "Contact ID <br>\nTo create new contact => \"contact_id\": 0 <br>\nTo edit contact => \"contact_id\": {contact_id}\n",
            "example": 0
          },
          "contact_name": {
            "type": "string",
            "description": "Contact Name",
            "example": "Radit"
          },
          "contact_type": {
            "type": "number",
            "description": "Contact Type <br>\n[0 = Customer], [1 = Vendor], [2 = Customer and Vendor]\n",
            "example": 0
          },
          "primary_contact": {
            "type": "string",
            "description": "Primary Contact Name",
            "example": "Radit"
          },
          "contact_position": {
            "type": "string",
            "description": "Contact Position",
            "example": "Developer"
          },
          "email": {
            "type": "string",
            "description": "Contact Email",
            "example": "radit.developer@gmail.com"
          },
          "phone": {
            "type": "string",
            "description": "Contact Phone Number",
            "example": "082297772419"
          },
          "mobile": {
            "type": "string",
            "description": "Contact Mobile Phone Number",
            "example": "082297772419"
          },
          "fax": {
            "type": "string",
            "description": "Contact Fax Number",
            "example": "021547281"
          },
          "s_address": {
            "type": "string",
            "description": "Shipping Full Address",
            "example": "Duri Kosambi No 11"
          },
          "s_area": {
            "type": "string",
            "description": "Shipping Address Area",
            "example": "Cengkareng"
          },
          "s_city": {
            "type": "string",
            "description": "Shipping Address City",
            "example": "Jakarta Barat"
          },
          "s_province": {
            "type": "string",
            "description": "Shipping Address Province",
            "example": "DKI Jakarta"
          },
          "s_post_code": {
            "type": "string",
            "description": "Shipping Address Post Code",
            "example": "11750"
          },
          "b_address": {
            "type": "string",
            "description": "Biling Full Address",
            "example": "Duri Kosambi No 11"
          },
          "b_area": {
            "type": "string",
            "description": "Biling Address Area",
            "example": "Cengkareng"
          },
          "b_city": {
            "type": "string",
            "description": "Biling Address City",
            "example": "Jakarta Barat"
          },
          "b_province": {
            "type": "string",
            "description": "Biling Address Province",
            "example": "DKI Jakarta"
          },
          "b_post_code": {
            "type": "string",
            "description": "Biling Address Post Code",
            "example": "11750"
          },
          "npwp": {
            "type": "string",
            "description": "Contact NPWP Number",
            "example": "1234567890"
          },
          "notes": {
            "type": "string",
            "description": "Contact Note/Description",
            "example": "Radit like to be late when doing payment"
          },
          "payment_term": {
            "type": "number",
            "description": "Contact Payment Term <br>\n[-1 = Cash], [7 = 7 Days], [15 = 15 Days], [30 = 30 Days]\n",
            "example": -1
          }
        }
      },
      "saveDeleteCanceledRequest": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Sales Order ID",
            "example": 1
          }
        }
      },
      "saveDigitalRedeemRequest": {
        "required": [
          "email",
          "digital_reward_id"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email Customer",
            "example": "member@loyalty.com"
          },
          "digital_reward_id": {
            "type": "number",
            "description": "Digital Reward ID",
            "example": 2
          }
        }
      },
      "saveDigitalRewardRequest": {
        "required": [
          "points",
          "digital_reward_name",
          "merchant_name",
          "digital_reward_image"
        ],
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "Reward Category",
            "example": "Lifestyle"
          },
          "digital_reward_id": {
            "type": "number",
            "description": "Digital Reward ID",
            "example": 1
          },
          "digital_reward_name": {
            "type": "string",
            "description": "Digital Reward Name",
            "example": "Voucher Tiket"
          },
          "digital_reward_image": {
            "type": "string",
            "description": "Digital Reward Image",
            "example": "https://jubelio.blob.core.windows.net/images/bngb2liirsoobzqmj73egg/0aeb9e88-4ca9-4933-b7fb-83339f24de4e_thumb.png"
          },
          "merchant_name": {
            "type": "string",
            "description": "Digital Reward name",
            "example": "Traveloka"
          },
          "description": {
            "type": "string",
            "description": "Digital Reward Description",
            "example": "Traveloka Voucher Rp 200.000,-"
          },
          "points": {
            "type": "string",
            "description": "Needed Points",
            "example": 50
          }
        }
      },
      "saveID": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Saved ID",
            "example": 1
          }
        }
      },
      "saveImageRequest": {
        "required": [
          "qqfile",
          "qquuid"
        ],
        "type": "object",
        "properties": {
          "qqfile": {
            "type": "string",
            "description": "Image File",
            "format": "binary"
          },
          "qqfilename": {
            "type": "string",
            "description": "Image Name",
            "example": "Termurah__Rice_Cooker_Miyako_Mcm_606_A___Magic_Com_06l___Pen.jpg"
          },
          "qqTotalFileSize": {
            "type": "number",
            "description": "Image Total File Size",
            "example": 49741
          },
          "qquuid": {
            "type": "string",
            "description": "Image ID",
            "example": "636d4589-f8b3-4271-aa96-403d11ce3a6f"
          }
        }
      },
      "saveImageRequestNew": {
        "required": [
          "file",
          "uid",
          "name"
        ],
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "description": "Image File",
            "format": "binary"
          },
          "name": {
            "type": "string",
            "description": "Image Name",
            "example": "Termurah__Rice_Cooker_Miyako_Mcm_606_A___Magic_Com_06l___Pen.jpg"
          },
          "TotalFileSize": {
            "type": "number",
            "description": "Image Total File Size (Optional)",
            "example": 49741
          },
          "uid": {
            "type": "string",
            "description": "Image ID",
            "example": "636d4589-f8b3-4271-aa96-403d11ce3a6f"
          }
        }
      },
      "saveImageResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Is Success",
            "example": true
          },
          "name": {
            "type": "string",
            "description": "Image Name",
            "example": "Termurah__Rice_Cooker_Miyako_Mcm_606_A___Magic_Com_06l___Pen.jpg"
          },
          "key": {
            "type": "string",
            "description": "Image URL",
            "example": "https://jubelio.blob.core.windows.net/images/bngb2liirsoobzqmj73egg/636d4589-f8b3-4271-aa96-403d11ce3a6f.jpeg"
          },
          "thumbnail": {
            "type": "string",
            "description": "Image Thumbnail URL",
            "example": "https://jubelio.blob.core.windows.net/images/bngb2liirsoobzqmj73egg/636d4589-f8b3-4271-aa96-403d11ce3a6f_thumb.jpeg"
          }
        }
      },
      "saveInvoiceRequest": {
        "required": [
          "customer_name",
          "due_date",
          "invoice_no",
          "is_opening_balance",
          "location_id"
        ],
        "type": "object",
        "properties": {
          "invoice_id": {
            "type": "number",
            "description": "Invoice ID <br>\nTo create new invoice => \"invoice_id\": 0 <br>\nTo edit invoice => \"invoice_id\": {invoice_id}\n",
            "example": 0
          },
          "invoice_no": {
            "type": "string",
            "description": "Invoice Number <br>\nTo create new invoice => \"invoice_no\": \"[auto]\" <br>\nTo edit invoice => \"invoice_no\": {invoice_no}\n",
            "example": "[auto]"
          },
          "contact_id": {
            "type": "number",
            "description": "Contact ID (Customer)",
            "example": 1
          },
          "salesmen_id": {
            "type": "number",
            "description": "Salesman ID",
            "example": null
          },
          "customer_name": {
            "type": "string",
            "description": "Contact Name (Customer)",
            "example": "Customer Name"
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2020-10-20T17:00:00.000Z"
          },
          "due_date": {
            "type": "string",
            "format": "date",
            "description": "Due Date",
            "example": "2020-10-20T17:00:00.000Z"
          },
          "is_tax_included": {
            "type": "boolean",
            "description": "Wether Invoice inlcude Tax",
            "example": false
          },
          "note": {
            "type": "string",
            "description": "Invoice Note",
            "example": "Beli Tas Selempang"
          },
          "payment_acct_id": {
            "type": "number",
            "description": "Payment Account ID",
            "example": 1
          },
          "payment": {
            "type": "number",
            "description": "Invoice Payment",
            "example": 40000
          },
          "sub_total": {
            "type": "number",
            "description": "Items Total Price",
            "example": 30000
          },
          "total_disc": {
            "type": "number",
            "description": "Items Total Discount",
            "example": 0
          },
          "total_tax": {
            "type": "number",
            "description": "Items Total Tax",
            "example": 0
          },
          "grand_total": {
            "type": "number",
            "description": "Invoice Grand Total",
            "example": 40000
          },
          "ref_no": {
            "type": "string",
            "description": "Reference Number",
            "example": "00099"
          },
          "location_id": {
            "type": "number",
            "description": "Location ID",
            "example": -1
          },
          "is_opening_balance": {
            "type": "boolean",
            "description": "Wether Invoice is an Opening Balance",
            "example": false
          },
          "shipping_cost": {
            "type": "number",
            "description": "Shipping Cost",
            "example": 5000
          },
          "insurance_cost": {
            "type": "number",
            "description": "Inssurance Cost",
            "example": 5000
          },
          "add_disc": {
            "type": "number",
            "description": "Additional Discount NB: You Need to Calculate the tax for every item if you are using tax like PPN",
            "example": 0
          },
          "add_fee": {
            "type": "number",
            "description": "Additional Fee",
            "example": 0
          },
          "items": {
            "type": "array",
            "description": "List Items in Invoice",
            "items": {
              "type": "object",
              "properties": {
                "invoice_detail_id": {
                  "type": "number",
                  "description": "Invoice Detail ID",
                  "example": 0
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 5
                },
                "serial_no": {
                  "type": "string",
                  "description": "Item Serial Number",
                  "example": "SN001"
                },
                "description": {
                  "type": "string",
                  "description": "Item Description",
                  "example": "Tas selempang Biru Dongker"
                },
                "sales_acct_id": {
                  "type": "number",
                  "description": "Sales Account ID",
                  "example": 28
                },
                "tax_id": {
                  "type": "number",
                  "description": "Tax ID",
                  "example": 1
                },
                "price": {
                  "type": "number",
                  "description": "Item Price",
                  "example": 30000
                },
                "unit": {
                  "type": "string",
                  "description": "Unit Name",
                  "example": "Buah"
                },
                "qty_in_base": {
                  "type": "number",
                  "description": "Quantity Item that will be reduced",
                  "example": 1
                },
                "disc": {
                  "type": "number",
                  "description": "Item Discount",
                  "example": 0
                },
                "disc_amount": {
                  "type": "number",
                  "description": "Item Total Amount",
                  "example": 0
                },
                "tax_amount": {
                  "type": "number",
                  "description": "Item Tax Amount NB: You Need to Calculate the tax for every item if you are using tax like PPN",
                  "example": 0
                },
                "amount": {
                  "type": "number",
                  "description": "Item Total Amount",
                  "example": 30000
                },
                "cogs": {
                  "type": "number",
                  "description": "Cost of Goods Sold",
                  "example": 11666.666667
                },
                "location_id": {
                  "type": "number",
                  "description": "Location ID",
                  "example": -1
                }
              }
            }
          }
        }
      },
      "saveLocationRequest": {
        "required": [
          "location_id",
          "location_name",
          "stores",
          "registers"
        ],
        "type": "object",
        "properties": {
          "location_id": {
            "type": "number",
            "description": "Location ID <br>\nTo create new location => \"location_id\": 0 <br>\nTo edit location => \"location_id\": {location_id}\n",
            "example": 1
          },
          "location_name": {
            "type": "string",
            "description": "Location Name (Unique)",
            "example": "Kutabumi"
          },
          "is_pos_outlet": {
            "type": "boolean",
            "description": "Is Location a POS Outlet",
            "example": true
          },
          "address": {
            "type": "string",
            "description": "Location Full Address",
            "example": "Jl. Raya Kutabumi Ruko Pondok Permai blok CA 1 no 6, Kutabaru, Pasar Kemis, Tangerang \\nKec. Pasar Kemis, Kota/Kab. Kab. Tangerang"
          },
          "phone": {
            "type": "string",
            "description": "Location Contact Number",
            "example": "0215442490"
          },
          "province": {
            "type": "string",
            "description": "Location Address Province",
            "example": "Banten"
          },
          "post_code": {
            "type": "string",
            "description": "Location Address Post Code",
            "example": 15560
          },
          "city": {
            "type": "string",
            "description": "Location Address City",
            "example": "Tangerang"
          },
          "email": {
            "type": "string",
            "description": "Location Contact Email",
            "example": "kutabumi.warehouse@example.com"
          },
          "is_fbl": {
            "type": "boolean",
            "description": "Is Location a FBL",
            "example": false
          },
          "is_tcb": {
            "type": "boolean",
            "description": "Is Location a TCB",
            "example": false
          },
          "location_code": {
            "type": "string",
            "description": "Location code",
            "example": null
          },
          "area": {
            "type": "string",
            "description": "Area",
            "example": "Tangerang"
          },
          "warehouse_id": {
            "type": "number",
            "description": "Warehouse ID",
            "example": null
          },
          "warehouse_store_id": {
            "type": "number",
            "description": "Warehouse Store ID",
            "example": null
          },
          "stores": {
            "$ref": "#/components/schemas/stores"
          },
          "registers": {
            "$ref": "#/components/schemas/registers"
          }
        }
      },
      "saveManualJournalRequest": {
        "required": [
          "picklist_id",
          "picklist_no",
          "is_completed",
          "accounts"
        ],
        "type": "object",
        "properties": {
          "journal_id": {
            "type": "number",
            "description": "Journal Id <br>\nTo create new journal => \"journal_id\": 0 <br>\nTo edit journal => \"journal_id\": {journal_id}\n",
            "example": 0
          },
          "notes": {
            "type": "string",
            "description": "The Notes",
            "example": ""
          },
          "source_doc_no": {
            "type": "string",
            "description": "The Source of number document",
            "example": "-1"
          },
          "transaction_date": {
            "type": "string",
            "description": "The transaction date",
            "example": "2020-07-29T07:15:33.768"
          },
          "accounts": {
            "type": "array",
            "description": "List Item in Accounts",
            "items": {
              "required": [
                "account_id",
                "credit",
                "debit",
                "description",
                "journal_detail_id"
              ],
              "type": "object",
              "properties": {
                "account_id": {
                  "type": "number",
                  "description": "Account Id",
                  "example": 5
                },
                "credit": {
                  "type": "number",
                  "description": "Credit",
                  "example": 1000
                },
                "debit": {
                  "type": "number",
                  "description": "Debit",
                  "example": 0
                },
                "description": {
                  "type": "string",
                  "description": "The description",
                  "example": "Example"
                },
                "journal_detail_id": {
                  "type": "number",
                  "description": "Journal detail Id",
                  "example": 0
                }
              }
            }
          }
        }
      },
      "saveOK": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Save Status",
            "example": "ok"
          },
          "id": {
            "type": "number",
            "description": "Object ID",
            "example": 1
          }
        }
      },
      "savePicklistRequest": {
        "required": [
          "picklist_id",
          "picklist_no",
          "is_completed",
          "items",
          "salesorderIds"
        ],
        "type": "object",
        "properties": {
          "picklist_id": {
            "type": "number",
            "required": true,
            "description": "Pick List ID <br>\nTo create new picklist => \"picklist_id\": 0 <br>\nTo edit picklist_id => \"picklist_id\": {picklist_id}\n",
            "example": 0
          },
          "picklist_no": {
            "type": "string",
            "description": "Picklist Number <br>\nTo create new picklist => \"picklist_no\": \"[auto]\" <br>\nTo edit picklist => \"picklist_no\": {picklist_no}\n",
            "example": "[auto]"
          },
          "is_completed": {
            "type": "boolean",
            "description": "Is Item have been Picked",
            "example": true
          },
          "salesorderIds": {
            "type": "array",
            "description": "List Sales Order ID",
            "items": {
              "type": "number",
              "example": 40
            }
          },
          "items": {
            "type": "array",
            "description": "List Item in Pick List",
            "items": {
              "required": [
                "item_id",
                "location_id",
                "qty_ordered",
                "qty_picked",
                "salesorder_detail_id",
                "bundle_item_id",
                "salesorder_id",
                "salesorder_detail_id",
                "picklist_detail_id"
              ],
              "type": "object",
              "properties": {
                "picklist_detail_id": {
                  "type": "number",
                  "description": "Picklist detail ID (set 0 for create new)",
                  "example": 0
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 1
                },
                "location_id": {
                  "type": "number",
                  "description": "Location ID",
                  "example": -1
                },
                "qty_ordered": {
                  "type": "number",
                  "description": "Ordered Quantity",
                  "example": 2
                },
                "qty_picked": {
                  "type": "number",
                  "description": "Picked Quantity",
                  "example": 2
                },
                "salesorder_detail_id": {
                  "type": "number",
                  "description": "Sales Order Detail ID",
                  "example": 25
                },
                "bundle_item_id": {
                  "type": "number",
                  "description": "Bundle Item ID (default 0)",
                  "example": 0
                },
                "salesorder_id": {
                  "type": "number",
                  "description": "Sales order ID",
                  "example": 40,
                  "required": true
                }
              }
            }
          }
        }
      },
      "savePicklistResponse": {
        "type": "object",
        "properties": {
          "picklist_id": {
            "type": "string",
            "description": "Picklist ID",
            "example": 28
          },
          "picklist_no": {
            "type": "string",
            "description": "Picklist Number",
            "example": "PICK-000000028"
          }
        }
      },
      "savePriceListRequest": {
        "type": "array",
        "items": {
          "required": [
            "item_group_id",
            "item_id"
          ],
          "type": "object",
          "properties": {
            "item_group_id": {
              "type": "number",
              "description": "Item Group ID",
              "example": 984
            },
            "item_id": {
              "type": "number",
              "description": "Item ID",
              "example": 2286
            },
            "prices": {
              "type": "array",
              "description": "List Prices for Every Store",
              "items": {
                "required": [
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "number",
                    "description": "Store ID",
                    "example": -1
                  },
                  "price": {
                    "type": "number",
                    "description": "Price",
                    "example": 150000
                  }
                }
              }
            }
          }
        }
      },
      "saveProduct": {
        "type": "object",
        "properties": {
          "item_group_id": {
            "type": "number",
            "description": "Item Group ID",
            "example": 2
          },
          "item_group_name": {
            "type": "string",
            "description": "Item Group Name",
            "example": "10.4 10W40"
          },
          "description": {
            "type": "string",
            "description": "Item Description",
            "example": "semi-synthetic lubricant for 4-stroke motorcycles that ensures"
          },
          "sell_tax_id": {
            "type": "number",
            "description": "Sell Tax ID Default (PPN = -1, No PPN = 1)",
            "example": -1
          },
          "buy_tax_id": {
            "type": "number",
            "description": "Buy Tax ID Default (PPN = -1, No PPN = 1)",
            "example": -1
          },
          "sales_acct_id": {
            "type": "number",
            "description": "Sales Account ID (default = 28)",
            "example": 28
          },
          "cogs_acct_id": {
            "type": "number",
            "description": "Cost of Goods Sold (COGS) Account Account ID (default = 30)",
            "example": 30
          },
          "invt_acct_id": {
            "type": "number",
            "description": "Inventory Account ID (default = 4)",
            "example": 4
          },
          "sell_this": {
            "type": "boolean",
            "description": "Wether Item can be sell",
            "example": true
          },
          "buy_this": {
            "type": "boolean",
            "description": "Wether Item can be bought",
            "example": true
          },
          "stock_this": {
            "type": "boolean",
            "description": "Wether Item can be stock",
            "example": true
          },
          "dropship_this": {
            "type": "boolean",
            "description": "Wether Item can be drop ship",
            "example": false
          },
          "uom_id": {
            "type": "number",
            "description": "Unit of Measure ID",
            "example": -1
          },
          "sell_unit": {
            "type": "string",
            "description": "Sell Unit",
            "example": "Botol"
          },
          "buy_unit": {
            "type": "string",
            "description": "Buy Unit",
            "example": "Botol"
          },
          "is_active": {
            "type": "boolean",
            "description": "Wether Item is active",
            "example": true
          },
          "purch_acct_id": {
            "type": "number",
            "description": "Purchase Account ID (default = NULL)",
            "example": -1
          },
          "item_category_id": {
            "type": "number",
            "description": "Item Category ID",
            "example": 454
          },
          "package_content": {
            "type": "string",
            "description": "Package Content",
            "example": "Plastik and How to Use"
          },
          "package_weight": {
            "type": "number",
            "description": "Package Weight",
            "example": 1000
          },
          "package_height": {
            "type": "number",
            "description": "Package Height",
            "example": 29
          },
          "package_width": {
            "type": "number",
            "description": "Package Width",
            "example": 49
          },
          "package_length": {
            "type": "number",
            "description": "Package Length",
            "example": 39
          },
          "variations": {
            "type": "array",
            "description": "List Item Variations",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Variation Label",
                  "example": "color_family"
                },
                "values": {
                  "type": "array",
                  "description": "List Variation Values",
                  "items": {
                    "type": "string",
                    "example": "Black"
                  }
                }
              }
            }
          },
          "sell_price": {
            "type": "string",
            "description": "Item Sell Price",
            "example": 3600000
          },
          "buy_price": {
            "type": "string",
            "description": "Item Buy Price",
            "example": 1500000
          },
          "brand_id": {
            "type": "number",
            "description": "Brand ID",
            "example": 11087
          },
          "rop": {
            "type": "number",
            "description": "Return of Purchase",
            "example": 10
          },
          "use_single_image_set": {
            "type": "boolean",
            "description": "Wether Item use Single Image Set",
            "example": false
          },
          "use_serial_number": {
            "type": "boolean",
            "description": "Wether Item use Serial Number",
            "example": true
          },
          "brand_name": {
            "type": "string",
            "description": "Another Brand Name",
            "example": "Mikoooo"
          },
          "product_skus": {
            "type": "array",
            "description": "List Item SKUs",
            "items": {
              "type": "object",
              "properties": {
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 2270
                },
                "item_code": {
                  "type": "string",
                  "description": "Item Code",
                  "example": "RIC-COO-MIY-RCM-PIN"
                },
                "variation_values": {
                  "type": "array",
                  "description": "Item Variations",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Variation Label",
                        "example": "color_family"
                      },
                      "value": {
                        "type": "string",
                        "description": "Variation Value",
                        "example": "Black"
                      }
                    }
                  }
                },
                "sell_price": {
                  "type": "number",
                  "description": "Item Sell Price Variant",
                  "example": 240000
                },
                "prices": {
                  "type": "array",
                  "description": "List Price on Channels",
                  "items": {
                    "type": "object",
                    "properties": {
                      "store_id": {
                        "type": "number",
                        "description": "Store ID",
                        "example": 125
                      },
                      "channel_id": {
                        "type": "number",
                        "description": "Channel ID",
                        "example": 4
                      },
                      "sell_price": {
                        "type": "number",
                        "description": "Sell Price on Channel",
                        "example": 260000
                      }
                    }
                  }
                },
                "barcode": {
                  "type": "string",
                  "description": "Barcode",
                  "example": null
                },
                "images": {
                  "type": "array",
                  "description": "List Item Variations",
                  "items": {
                    "type": "object",
                    "properties": {
                      "item_id": {
                        "type": "number",
                        "description": "Item ID",
                        "example": 1
                      },
                      "image_id": {
                        "type": "number",
                        "description": "Image ID",
                        "example": 4
                      },
                      "cloud_key": {
                        "type": "string",
                        "description": "Image URL",
                        "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "thumbnail": {
                        "type": "string",
                        "description": "Image Thumbnail",
                        "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "file_name": {
                        "type": "string",
                        "description": "Image Name",
                        "example": "fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "sequence_number": {
                        "type": "number",
                        "description": "Image Sequence Number",
                        "example": 0
                      },
                      "channel_info": {
                        "type": "array",
                        "description": "List Image URL on Channels",
                        "items": {
                          "type": "object",
                          "properties": {
                            "image_url": {
                              "type": "string",
                              "description": "Image URL",
                              "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                            },
                            "channel_id": {
                              "type": "number",
                              "description": "Channel ID",
                              "example": 4
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "channels": {
            "type": "array",
            "description": "List Channels",
            "items": {
              "type": "object",
              "properties": {
                "channel_id": {
                  "type": "number",
                  "description": "Channel ID",
                  "example": 4
                },
                "sell_here": {
                  "type": "boolean",
                  "description": "Wether Item will be sell in this channel",
                  "example": true
                },
                "store_id": {
                  "type": "number",
                  "description": "Store ID",
                  "example": 125
                },
                "channel_category_id": {
                  "type": "number",
                  "description": "Channel Category ID",
                  "example": 125
                },
                "attributes": {
                  "type": "array",
                  "description": "Item Attributes on Channel",
                  "items": {
                    "type": "object",
                    "properties": {
                      "attribute_name": {
                        "type": "string",
                        "description": "Attribute Name",
                        "example": "warranty_type"
                      },
                      "attribute_value": {
                        "type": "string",
                        "description": "Attribute Value",
                        "example": "No Warranty"
                      }
                    }
                  }
                }
              }
            }
          },
          "min": {
            "type": "number",
            "description": "Minimal Item Purchase",
            "example": 1
          },
          "max": {
            "type": "number",
            "description": "Maximal Item Purchase",
            "example": 10
          },
          "use_batch_number": {
            "type": "string",
            "description": "Use batch number",
            "example": null
          }
        }
      },
      "saveProductBundleRequest": {
        "required": [
          "item_group_id",
          "item_group_name",
          "attributes",
          "uom_id",
          "description",
          "sell_this",
          "sell_tax_id",
          "buy_tax_id",
          "sales_acct_id",
          "cogs_acct_id",
          "invt_acct_id",
          "buy_this",
          "stock_this",
          "dropship_this",
          "sell_unit",
          "buy_unit",
          "is_active",
          "purch_acct_id",
          "item_category_id",
          "store_priority_qty_treshold",
          "package_content",
          "package_weight",
          "package_height",
          "package_width",
          "channels",
          "package_length",
          "variations",
          "sell_price",
          "buy_price",
          "brand_id",
          "brand_name",
          "rop",
          "use_single_image_set",
          "use_serial_number",
          "product_skus",
          "is_bundle",
          "bundles"
        ],
        "type": "object",
        "properties": {
          "item_group_id": {
            "type": "number",
            "description": "Item Group ID <br>\nTo create new prouct => \"item_group_id\": 0 <br>\nTo edit prouct => \"item_group_id\": {item_group_id}\n",
            "example": 0
          },
          "item_group_name": {
            "type": "string",
            "description": "Item Group Name (Unique)\n",
            "example": "10.4 10W40"
          },
          "uom_id": {
            "type": "number",
            "description": "Unit of Measure ID",
            "example": -1
          },
          "description": {
            "type": "string",
            "description": "Item Description",
            "example": "semi-synthetic lubricant for 4-stroke motorcycles that ensures"
          },
          "sell_this": {
            "type": "boolean",
            "description": "Wether Item can be sell",
            "example": true
          },
          "sell_tax_id": {
            "type": "number",
            "description": "Sell Tax ID Default (PPN = -1, No PPN = 1)",
            "example": -1
          },
          "buy_tax_id": {
            "type": "number",
            "description": "Buy Tax ID Default (PPN = -1, No PPN = 1)",
            "example": -1
          },
          "sales_acct_id": {
            "type": "number",
            "description": "Sales Account ID (default = 28)",
            "example": 28
          },
          "cogs_acct_id": {
            "type": "number",
            "description": "Cost of Goods Sold (COGS) Account Account ID (default = 30)",
            "example": 30
          },
          "invt_acct_id": {
            "type": "number",
            "description": "Inventory Account ID (default = 4)",
            "example": 4
          },
          "buy_this": {
            "type": "boolean",
            "description": "Wether Item can be bought",
            "example": true
          },
          "stock_this": {
            "type": "boolean",
            "description": "Wether Item can be stock",
            "example": true
          },
          "dropship_this": {
            "type": "boolean",
            "description": "Wether Item can be drop ship",
            "example": false
          },
          "sell_unit": {
            "type": "string",
            "description": "Sell Unit",
            "example": "Buah"
          },
          "buy_unit": {
            "type": "string",
            "description": "Buy Unit",
            "example": "Botol"
          },
          "is_active": {
            "type": "boolean",
            "description": "Wether Item is active",
            "example": true
          },
          "purch_acct_id": {
            "type": "number",
            "description": "Purchase Account ID (default = NULL)",
            "example": null
          },
          "item_category_id": {
            "type": "number",
            "description": "Item Category ID",
            "example": 454
          },
          "store_priority_qty_treshold": {
            "type": "number",
            "description": "Store Priority Treshold",
            "example": 2
          },
          "attributes": {
            "type": "array",
            "description": "attibutes of the product",
            "example": []
          },
          "channels": {
            "type": "array",
            "description": "channels of the product",
            "example": []
          },
          "package_content": {
            "type": "string",
            "description": "Package Content",
            "example": "Plastik and How to Use"
          },
          "package_weight": {
            "type": "number",
            "description": "Package Weight",
            "example": 1000
          },
          "package_height": {
            "type": "number",
            "description": "Package Height",
            "example": 29
          },
          "package_width": {
            "type": "number",
            "description": "Package Width",
            "example": 49
          },
          "package_length": {
            "type": "number",
            "description": "Package Length",
            "example": 39
          },
          "variations": {
            "type": "array",
            "description": "List Item Variations",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Variation Label",
                  "example": "color_family"
                },
                "values": {
                  "type": "array",
                  "description": "List Variation Values",
                  "items": {
                    "type": "string",
                    "example": "Black"
                  }
                }
              }
            }
          },
          "sell_price": {
            "type": "string",
            "description": "Item Sell Price",
            "example": 3600000
          },
          "buy_price": {
            "type": "string",
            "description": "Item Buy Price",
            "example": 1500000
          },
          "brand_id": {
            "type": "number",
            "description": "Brand ID",
            "example": 11087
          },
          "unlimited_stock_store_ids": {
            "type": "number",
            "description": "The unlimited stock for selected store ids. <br>\nCan be filled with \"empty array\" or \"null\".\n",
            "example": null
          },
          "brand_name": {
            "type": "string",
            "description": "Another Brand Name",
            "example": "Mikoooo"
          },
          "rop": {
            "type": "number",
            "description": "Return of Purchase",
            "example": 0
          },
          "use_single_image_set": {
            "type": "boolean",
            "description": "Wether Item use Single Image Set",
            "example": false
          },
          "use_serial_number": {
            "type": "boolean",
            "description": "Wether Item use Serial Number",
            "example": true
          },
          "product_skus": {
            "type": "array",
            "description": "List Item SKUs",
            "items": {
              "type": "object",
              "properties": {
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 0
                },
                "item_code": {
                  "type": "string",
                  "description": "Item Code (Unique)\n",
                  "example": "RIC-COO-MIY-RCM-PIN"
                },
                "variation_values": {
                  "type": "array",
                  "description": "Item Variations",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Variation Label",
                        "example": "color_family"
                      },
                      "value": {
                        "type": "string",
                        "description": "Variation Value",
                        "example": "Black"
                      }
                    }
                  }
                },
                "sell_price": {
                  "type": "number",
                  "description": "Item Sell Price Variant",
                  "example": 240000
                },
                "prices": {
                  "type": "array",
                  "description": "List Price on Channels",
                  "items": {
                    "type": "object",
                    "properties": {
                      "store_id": {
                        "type": "number",
                        "description": "Store ID",
                        "example": 125
                      },
                      "channel_id": {
                        "type": "number",
                        "description": "Channel ID",
                        "example": 4
                      },
                      "sell_price": {
                        "type": "number",
                        "description": "Sell Price on Channel",
                        "example": 260000
                      }
                    }
                  }
                },
                "images": {
                  "type": "array",
                  "description": "List Item Variations",
                  "items": {
                    "type": "object",
                    "properties": {
                      "image_id": {
                        "type": "number",
                        "description": "Image Id",
                        "example": 0
                      },
                      "thumbnail": {
                        "type": "string",
                        "description": "Image Thumbnail",
                        "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "file_name": {
                        "type": "string",
                        "description": "Image Name",
                        "example": "fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "sequence_number": {
                        "type": "number",
                        "description": "Image Sequence Number",
                        "example": 0
                      }
                    }
                  }
                },
                "is_bundle": {
                  "type": "boolean",
                  "description": "Is Item a Bundle",
                  "example": true
                }
              }
            }
          },
          "min": {
            "type": "number",
            "description": "Minimal Item Purchase",
            "example": 1
          },
          "max": {
            "type": "number",
            "description": "Maximal Item Purchase",
            "example": 10
          },
          "use_batch_number": {
            "type": "string",
            "description": "Use batch number",
            "example": null
          },
          "bom_id": {
            "type": "number",
            "description": "for Bundles (optional)",
            "example": 0
          },
          "bundles": {
            "type": "array",
            "description": "List Item SKUs (optional)",
            "items": {
              "type": "object",
              "properties": {
                "bom_comp_id": {
                  "type": "number",
                  "description": "Bom Comp ID",
                  "example": 1
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 105147
                },
                "qty": {
                  "type": "number",
                  "description": "Quantity",
                  "example": 5
                },
                "uom_id": {
                  "type": "number",
                  "description": "Unit of Measure ID",
                  "example": 5
                },
                "unit": {
                  "type": "string",
                  "description": "Unit",
                  "example": "Buah"
                }
              }
            }
          }
        }
      },
      "saveProductListing": {
        "required": [
          "item_group_id",
          "mp_group_id",
          "item_group_name",
          "channel_category_id",
          "store_id",
          "channel_id",
          "attributes",
          "group_variations",
          "selected_variations"
        ],
        "type": "object",
        "properties": {
          "item_group_id": {
            "type": "number",
            "description": "Item Group ID",
            "example": 10
          },
          "mp_group_id": {
            "type": "number",
            "description": "Marketplace Group ID",
            "example": 125
          },
          "item_group_name": {
            "type": "string",
            "description": "Item Group Name (Can not be null/empty string)",
            "example": "Barang Test"
          },
          "description": {
            "type": "string",
            "description": "Item Description",
            "example": "semi-synthetic lubricant for 4-stroke motorcycles that ensures"
          },
          "channel_category_id": {
            "type": "number",
            "description": "Channel Category ID",
            "example": 660
          },
          "store_id": {
            "type": "number",
            "description": "Store ID",
            "example": 20
          },
          "channel_id": {
            "type": "number",
            "description": "Channel ID",
            "example": 2
          },
          "brand_id": {
            "type": "number",
            "description": "Brand ID",
            "example": 1
          },
          "package_content": {
            "type": "string",
            "description": "Package Content",
            "example": "Plastik and How to Use"
          },
          "package_weight": {
            "type": "number",
            "description": "Package Weight",
            "example": 1000
          },
          "package_height": {
            "type": "number",
            "description": "Package Height",
            "example": 29
          },
          "package_width": {
            "type": "number",
            "description": "Package Width",
            "example": 49
          },
          "package_length": {
            "type": "number",
            "description": "Package Length",
            "example": 39
          },
          "brand_name": {
            "type": "string",
            "description": "Brand Name",
            "example": "3Second"
          },
          "selected_variations": {
            "type": "string",
            "description": "The selected variations",
            "example": "3Second"
          },
          "group_variations": {
            "type": "array",
            "description": "Variations of this group (Can be empty array)",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Label",
                  "example": "Warna"
                },
                "values": {
                  "type": "array",
                  "description": "Label",
                  "items": {
                    "type": "array",
                    "example": "Biru, Hijau"
                  }
                }
              }
            }
          },
          "images": {
            "type": "array",
            "description": "List Item Images",
            "items": {
              "type": "object",
              "properties": {
                "image_id": {
                  "type": "number",
                  "description": "Image ID",
                  "example": 66
                },
                "url": {
                  "type": "string",
                  "description": "Image URL",
                  "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Image Thumbnail",
                  "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                },
                "file_name": {
                  "type": "string",
                  "description": "Image Name",
                  "example": "fde755988e7d8931bea57bdb3c8a64e6"
                },
                "sequence_number": {
                  "type": "number",
                  "description": "Image Sequence Number",
                  "example": 0
                },
                "uid": {
                  "type": "string",
                  "description": "Image Unique ID",
                  "example": "rug-1589963285145-0"
                }
              }
            }
          },
          "attributes": {
            "type": "array",
            "description": "Product Attributes",
            "items": {
              "type": "object",
              "properties": {
                "attribute_name": {
                  "type": "string",
                  "description": "Attribute Name",
                  "example": "ukuran"
                },
                "attribute_value": {
                  "type": "array",
                  "description": "Attribute Value",
                  "items": {
                    "type": "string",
                    "example": "XS"
                  }
                }
              }
            }
          },
          "variation_images": {
            "type": "array",
            "description": "List Item Variations",
            "items": {
              "type": "object",
              "properties": {
                "images": {
                  "type": "array",
                  "description": "List Item Variations",
                  "items": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "Image URL",
                        "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "thumbnail": {
                        "type": "string",
                        "description": "Image Thumbnail",
                        "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "file_name": {
                        "type": "string",
                        "description": "Image Name",
                        "example": "fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "sequence_number": {
                        "type": "number",
                        "description": "Image Sequence Number",
                        "example": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "variations": {
            "type": "array",
            "description": "List Item Variations",
            "items": {
              "type": "object",
              "properties": {
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 1926
                },
                "channel_id": {
                  "type": "number",
                  "description": "Channel ID",
                  "example": 1926
                },
                "store_id": {
                  "type": "number",
                  "description": "Store ID",
                  "example": 1926
                },
                "sell_here": {
                  "type": "boolean",
                  "description": "Sell here",
                  "example": false
                },
                "barcode": {
                  "type": "string",
                  "description": "Barcode (can be empty string)",
                  "example": ""
                },
                "channel_url": {
                  "type": "string",
                  "description": "Channel URL",
                  "example": "https://www.bukalapak.com/p/perlengkapan-bayi/baby-carrier/nama-barang"
                },
                "channel_item_id": {
                  "type": "number",
                  "description": "Channel Item ID",
                  "example": 7125489085
                },
                "channel_group_id": {
                  "type": "string",
                  "description": "Channel Group ID",
                  "example": "39hycaa"
                },
                "sell_price": {
                  "type": "number",
                  "description": "Sell Price",
                  "example": 1000
                },
                "item_code": {
                  "type": "string",
                  "description": "Item Code",
                  "example": "BRG-BY"
                },
                "variation_name": {
                  "type": "string",
                  "description": "Variation Name",
                  "example": "Variation Name"
                },
                "variation_values": {
                  "type": "array",
                  "description": "Item Variations",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Variation Label",
                        "example": "color_family"
                      },
                      "value": {
                        "type": "string",
                        "description": "Variation Value",
                        "example": "Black"
                      }
                    }
                  }
                }
              }
            }
          },
          "channel_url": {
            "type": "string",
            "description": "Channel URL",
            "example": "https://www.bukalapak.com/p/perlengkapan-bayi/baby-carrier/nama-barang"
          }
        }
      },
      "saveProductListingResponse": {
        "type": "object",
        "properties": {
          "mp_group_id": {
            "type": "number",
            "description": "Marketplace Group ID",
            "example": 1245
          },
          "status": {
            "type": "string",
            "description": "Status",
            "example": "ok"
          }
        }
      },
      "saveProductNew": {
        "required": [
          "item_group_id",
          "item_group_name",
          "attributes",
          "uom_id",
          "description",
          "sell_this",
          "sell_tax_id",
          "buy_tax_id",
          "sales_acct_id",
          "cogs_acct_id",
          "invt_acct_id",
          "buy_this",
          "stock_this",
          "dropship_this",
          "sell_unit",
          "buy_unit",
          "is_active",
          "purch_acct_id",
          "item_category_id",
          "store_priority_qty_treshold",
          "package_content",
          "package_weight",
          "package_height",
          "package_width",
          "package_length",
          "variations",
          "sell_price",
          "buy_price",
          "brand_id",
          "brand_name",
          "rop",
          "use_single_image_set",
          "use_serial_number",
          "product_skus"
        ],
        "type": "object",
        "properties": {
          "item_group_id": {
            "type": "number",
            "description": "Item Group ID <br>\nTo create new prouct => \"item_group_id\": 0 <br>\nTo edit prouct => \"item_group_id\": {item_group_id}\n",
            "example": 0
          },
          "item_group_name": {
            "type": "string",
            "description": "Item Group Name (Unique)\n",
            "example": "10.4 10W40"
          },
          "uom_id": {
            "type": "number",
            "description": "Unit of Measure ID",
            "example": -1
          },
          "description": {
            "type": "string",
            "description": "Item Description",
            "example": "semi-synthetic lubricant for 4-stroke motorcycles that ensures"
          },
          "sell_this": {
            "type": "boolean",
            "description": "Wether Item can be sell",
            "example": true
          },
          "sell_tax_id": {
            "type": "number",
            "description": "Sell Tax ID Default (PPN = -1, No PPN = 1)",
            "example": -1
          },
          "buy_tax_id": {
            "type": "number",
            "description": "Buy Tax ID Default (PPN = -1, No PPN = 1)",
            "example": -1
          },
          "sales_acct_id": {
            "type": "number",
            "description": "Sales Account ID (default = 28)",
            "example": 28
          },
          "cogs_acct_id": {
            "type": "number",
            "description": "Cost of Goods Sold (COGS) Account Account ID (default = 30)",
            "example": 30
          },
          "invt_acct_id": {
            "type": "number",
            "description": "Inventory Account ID (default = 4)",
            "example": 4
          },
          "buy_this": {
            "type": "boolean",
            "description": "Wether Item can be bought",
            "example": true
          },
          "stock_this": {
            "type": "boolean",
            "description": "Wether Item can be stock",
            "example": true
          },
          "dropship_this": {
            "type": "boolean",
            "description": "Wether Item can be drop ship",
            "example": false
          },
          "sell_unit": {
            "type": "string",
            "description": "Sell Unit",
            "example": "Buah"
          },
          "buy_unit": {
            "type": "string",
            "description": "Buy Unit",
            "example": "Botol"
          },
          "is_active": {
            "type": "boolean",
            "description": "Wether Item is active",
            "example": true
          },
          "purch_acct_id": {
            "type": "number",
            "description": "Purchase Account ID (default = NULL)",
            "example": null
          },
          "item_category_id": {
            "type": "number",
            "description": "Item Category ID",
            "example": 454
          },
          "store_priority_qty_treshold": {
            "type": "number",
            "description": "Store Priority Treshold",
            "example": 2
          },
          "attributes": {
            "type": "array",
            "description": "attibutes of the product",
            "example": []
          },
          "images": {
            "type": "array",
            "description": "List Item Variations",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "Image URL",
                  "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Image Thumbnail",
                  "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                },
                "file_name": {
                  "type": "string",
                  "description": "Image Name",
                  "example": "fde755988e7d8931bea57bdb3c8a64e6"
                },
                "sequence_number": {
                  "type": "number",
                  "description": "Image Sequence Number",
                  "example": 0
                }
              }
            }
          },
          "variation_images": {
            "type": "array",
            "description": "List Item Variations",
            "items": {
              "type": "object",
              "properties": {
                "item_id": {
                  "type": "number",
                  "description": "Image Item ID",
                  "example": 1
                },
                "images": {
                  "type": "array",
                  "description": "List Item Variations",
                  "items": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "Image URL",
                        "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "thumbnail": {
                        "type": "string",
                        "description": "Image Thumbnail",
                        "example": "http://f.shopee.co.id/file/fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "file_name": {
                        "type": "string",
                        "description": "Image Name",
                        "example": "fde755988e7d8931bea57bdb3c8a64e6"
                      },
                      "sequence_number": {
                        "type": "number",
                        "description": "Image Sequence Number",
                        "example": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "package_content": {
            "type": "string",
            "description": "Package Content",
            "example": "Plastik and How to Use"
          },
          "package_weight": {
            "type": "number",
            "description": "Package Weight",
            "example": 1000
          },
          "package_height": {
            "type": "number",
            "description": "Package Height",
            "example": 29
          },
          "package_width": {
            "type": "number",
            "description": "Package Width",
            "example": 49
          },
          "package_length": {
            "type": "number",
            "description": "Package Length",
            "example": 39
          },
          "variations": {
            "type": "array",
            "description": "List Item Variations",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Variation Label",
                  "example": "color_family"
                },
                "values": {
                  "type": "array",
                  "description": "List Variation Values",
                  "items": {
                    "type": "string",
                    "example": "Black"
                  }
                }
              }
            }
          },
          "sell_price": {
            "type": "string",
            "description": "Item Sell Price",
            "example": 3600000
          },
          "buy_price": {
            "type": "string",
            "description": "Item Buy Price",
            "example": 1500000
          },
          "brand_id": {
            "type": "number",
            "description": "Brand ID",
            "example": 11087
          },
          "unlimited_stock_store_ids": {
            "type": "number",
            "description": "The unlimited stock for selected store ids. <br>\nCan be filled with \"empty array\" or \"null\".\n",
            "example": null
          },
          "brand_name": {
            "type": "string",
            "description": "Another Brand Name",
            "example": "Mikoooo"
          },
          "rop": {
            "type": "number",
            "description": "Return of Purchase",
            "example": 0
          },
          "use_single_image_set": {
            "type": "boolean",
            "description": "Wether Item use Single Image Set",
            "example": false
          },
          "use_serial_number": {
            "type": "boolean",
            "description": "Wether Item use Serial Number",
            "example": true
          },
          "product_skus": {
            "type": "array",
            "description": "List Item SKUs",
            "items": {
              "type": "object",
              "properties": {
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 0
                },
                "item_code": {
                  "type": "string",
                  "description": "Item Code (Unique)\n",
                  "example": "RIC-COO-MIY-RCM-PIN"
                },
                "variation_values": {
                  "type": "array",
                  "description": "Item Variations",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Variation Label",
                        "example": "color_family"
                      },
                      "value": {
                        "type": "string",
                        "description": "Variation Value",
                        "example": "Black"
                      }
                    }
                  }
                },
                "sell_price": {
                  "type": "number",
                  "description": "Item Sell Price Variant",
                  "example": 240000
                },
                "prices": {
                  "type": "array",
                  "description": "List Price on Channels",
                  "items": {
                    "type": "object",
                    "properties": {
                      "store_id": {
                        "type": "number",
                        "description": "Store ID",
                        "example": 125
                      },
                      "channel_id": {
                        "type": "number",
                        "description": "Channel ID",
                        "example": 4
                      },
                      "sell_price": {
                        "type": "number",
                        "description": "Sell Price on Channel",
                        "example": 260000
                      }
                    }
                  }
                },
                "barcode": {
                  "type": "string",
                  "description": "Barcode",
                  "example": null
                }
              }
            }
          },
          "min": {
            "type": "number",
            "description": "Minimal Item Purchase",
            "example": 1
          },
          "max": {
            "type": "number",
            "description": "Maximal Item Purchase",
            "example": 10
          },
          "use_batch_number": {
            "type": "string",
            "description": "Use batch number",
            "example": null
          },
          "bom_id": {
            "type": "number",
            "description": "for Bundles (optional)",
            "example": 0
          },
          "bundles": {
            "type": "array",
            "description": "List Item SKUs (optional)",
            "example": []
          }
        }
      },
      "saveProfileRequest": {
        "required": [
          "area",
          "city",
          "email",
          "name",
          "postcode",
          "province"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Full Name",
            "example": "Abi Darda"
          },
          "email": {
            "type": "string",
            "description": "Contact Email",
            "example": "abi.darba@yahoo.com"
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "description": "Contact Birth Day",
            "example": "2018-10-20T17:00:00.000Z"
          },
          "address": {
            "type": "string",
            "description": "Contact Full Adress",
            "example": "Jln sultan hasanudin gang walet mas rt"
          },
          "area": {
            "type": "string",
            "description": "Contact Adress Area",
            "example": "Pasar Kemis"
          },
          "city": {
            "type": "string",
            "description": "Contact Adress City",
            "example": "Tangerang"
          },
          "province": {
            "type": "string",
            "description": "Contact Adress Province",
            "example": "Banten"
          },
          "postcode": {
            "type": "string",
            "description": "Contact Adress Post Code",
            "example": 11750
          },
          "sex": {
            "type": "string",
            "description": "Contact Gender",
            "example": "L"
          }
        }
      },
      "savePromotionRequest": {
        "required": [
          "end_date",
          "promotion_id",
          "promotion_name",
          "start_date"
        ],
        "type": "object",
        "properties": {
          "promotion_id": {
            "type": "number",
            "description": "Promotion ID",
            "example": 0
          },
          "promotion_name": {
            "type": "string",
            "description": "Promotion Name",
            "example": "BLACK FRIDAY"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "description": "Start Promotion Date",
            "example": "2018-10-02T04:00:00.000Z"
          },
          "end_date": {
            "type": "string",
            "description": "End Promotion Date",
            "example": "2018-10-03T05:00:00.000Z"
          },
          "channels": {
            "type": "array",
            "description": "List Channels where Promotions applied",
            "items": {
              "type": "object",
              "properties": {
                "store_id": {
                  "type": "number",
                  "description": "Store ID",
                  "example": 359
                },
                "channel_id": {
                  "type": "number",
                  "description": "Channel ID",
                  "example": 64
                }
              }
            }
          },
          "details": {
            "type": "array",
            "description": "List Promotion Detail",
            "items": {
              "type": "object",
              "properties": {
                "promotion_detail_id": {
                  "type": "number",
                  "description": "Promotion Detail ID",
                  "example": 0
                },
                "item_group_id": {
                  "type": "number",
                  "description": "Item Group ID",
                  "example": 20
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 105147
                },
                "promotion_price": {
                  "type": "number",
                  "description": "Promotion Price",
                  "example": 250000
                }
              }
            }
          }
        }
      },
      "savePromotionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status",
            "example": "ok"
          },
          "id": {
            "type": "number",
            "description": "Promotion Id",
            "example": 22
          }
        }
      },
      "savePurchaseOrderRequest": {
        "required": [
          "purchaseorder_no",
          "source",
          "supplier_name"
        ],
        "type": "object",
        "properties": {
          "purchaseorder_id": {
            "type": "number",
            "description": "Purchase Order ID <br>\nTo create new purchase order => \"purchaseorder_id\": 0 <br>\nTo edit purchase order => \"purchaseorder_id\": {purchaseorder_id}\n",
            "example": 0
          },
          "purchaseorder_no": {
            "type": "string",
            "description": "Purchase Order Number <br>\nTo create new purchase order => \"purchaseorder_no\": \"[auto]\" <br>\nTo edit purchase order => \"purchaseorder_no\": {purchaseorder_no}\n",
            "example": "[auto]"
          },
          "contact_id": {
            "type": "number",
            "description": "Contact (Supplier) ID",
            "example": 2
          },
          "supplier_name": {
            "type": "string",
            "description": "Supplier Name",
            "example": "PTANYWAY"
          },
          "transaction_date": {
            "type": "string",
            "format": "date-time",
            "description": "Transaction Date",
            "example": "2020-10-02T04:00:00.000Z"
          },
          "is_tax_included": {
            "type": "boolean",
            "description": "Wether Tax Included",
            "example": false
          },
          "note": {
            "type": "string",
            "description": "Purchase Order Note",
            "example": "Note"
          },
          "sub_total": {
            "type": "number",
            "description": "Purchase Order sub Total",
            "example": 154000
          },
          "total_disc": {
            "type": "number",
            "description": "Purchase Order Total Discount",
            "example": 0
          },
          "total_tax": {
            "type": "number",
            "description": "Purchase Order Total Tax",
            "example": 0
          },
          "grand_total": {
            "type": "number",
            "description": "Purchase Order Grand Total",
            "example": 154000
          },
          "ref_no": {
            "type": "string",
            "description": "Reference Number",
            "example": 112233
          },
          "location_id": {
            "type": "number",
            "description": "Location ID",
            "example": -1
          },
          "source": {
            "type": "number",
            "description": "Source",
            "example": 1
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "purchaseorder_detail_id": {
                  "type": "number",
                  "description": "Purchase Order Detail ID",
                  "example": 0
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 1
                },
                "description": {
                  "type": "string",
                  "description": "Item Description",
                  "example": -1
                },
                "tax_id": {
                  "type": "number",
                  "description": "Tax ID",
                  "example": 1
                },
                "price": {
                  "type": "number",
                  "description": "Item Price",
                  "example": 77000
                },
                "unit": {
                  "type": "string",
                  "description": "Unit Name",
                  "example": "Buah"
                },
                "qty_in_base": {
                  "type": "number",
                  "description": "Quantity that will be add",
                  "example": 1
                },
                "disc": {
                  "type": "number",
                  "description": "Discount",
                  "example": 5
                },
                "disc_amount": {
                  "type": "number",
                  "description": "Discount Amount",
                  "example": 3850
                },
                "tax_amount": {
                  "type": "number",
                  "description": "Tax Amount",
                  "example": 0
                },
                "amount": {
                  "type": "number",
                  "description": "Total Amount",
                  "example": 73150
                },
                "location_id": {
                  "type": "number",
                  "description": "Location ID",
                  "example": -1
                }
              }
            }
          }
        }
      },
      "savePurchasePayment": {
        "required": [
          "account_id",
          "amount",
          "contact_id",
          "payment_id",
          "payment_no",
          "payment_type"
        ],
        "type": "object",
        "properties": {
          "payment_id": {
            "type": "number",
            "description": "Purchase Payment ID",
            "example": 2
          },
          "payment_no": {
            "type": "string",
            "description": "Purchase Payment Number",
            "example": 2
          },
          "payment_type": {
            "type": "number",
            "description": "Purchase Payment Type",
            "example": 2
          },
          "contact_id": {
            "type": "number",
            "description": "Contact ID (Supplier)",
            "example": 2
          },
          "contact_name": {
            "type": "string",
            "description": "Contact Name (Supplier)",
            "example": "PTYANYWAY"
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2018-10-02T04:00:00.000Z"
          },
          "account_id": {
            "type": "number",
            "description": "Account ID",
            "example": 1
          },
          "account_name": {
            "type": "string",
            "description": "Account Name",
            "example": "1-1000 - Kas"
          },
          "amount": {
            "type": "number",
            "description": "Payment Amount",
            "example": 100000
          },
          "items": {
            "type": "array",
            "description": "List Payment Detail",
            "items": {
              "type": "object",
              "properties": {
                "payment_detail_id": {
                  "type": "number",
                  "description": "Payment Detail ID",
                  "example": 0
                },
                "payment_id": {
                  "type": "number",
                  "description": "Payment ID",
                  "example": 1
                },
                "bill_id": {
                  "type": "number",
                  "description": "Bill ID",
                  "example": 1
                },
                "payment_amount": {
                  "type": "number",
                  "description": "Payment Amount for Bill",
                  "example": 100000
                },
                "downpayment_amount": {
                  "type": "number",
                  "description": "Down Payment Amount for Bill",
                  "example": 50000
                }
              }
            }
          }
        }
      },
      "savePurchaseReturnRequest": {
        "required": [
          "location_id",
          "return_no",
          "supplier_name"
        ],
        "type": "object",
        "properties": {
          "return_id": {
            "type": "number",
            "description": "Purchase Return ID",
            "example": 0
          },
          "return_no": {
            "type": "string",
            "description": "Purchase Return Number",
            "example": "[auto]"
          },
          "supplier_id": {
            "type": "number",
            "description": "Contact ID (Supplier)",
            "example": 1
          },
          "supplier_name": {
            "type": "string",
            "description": "Contact Name (Supplier)",
            "example": "PTANYWAY"
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2018-10-02T04:00:00.000Z"
          },
          "is_tax_included": {
            "type": "boolean",
            "description": "Wether Tax Included",
            "example": false
          },
          "note": {
            "type": "string",
            "description": "Purchase Return Note",
            "example": "Return"
          },
          "sub_total": {
            "type": "number",
            "description": "Purchase Return Note",
            "example": 77000
          },
          "total_tax": {
            "type": "number",
            "description": "Purchase Return Total Tax",
            "example": 0
          },
          "grand_total": {
            "type": "number",
            "description": "Purchase Return Grand Total",
            "example": 77000
          },
          "location_id": {
            "type": "number",
            "description": "Location ID",
            "example": -1
          },
          "items": {
            "type": "array",
            "description": "List Purchase Return Detail",
            "items": {
              "type": "object",
              "properties": {
                "return_detail_id": {
                  "type": "number",
                  "description": "Purchase Return Detail ID",
                  "example": 0
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 0
                },
                "serial_no": {
                  "type": "string",
                  "description": "Serial Number",
                  "example": "SN001"
                },
                "description": {
                  "type": "string",
                  "description": "Item Description",
                  "example": "Kaos DreamCatcher Born to Be Yours"
                },
                "invt_acct_id": {
                  "type": "number",
                  "description": "Inventory Account ID",
                  "example": 4
                },
                "tax_id": {
                  "type": "number",
                  "description": "Tax ID",
                  "example": 1
                },
                "price": {
                  "type": "number",
                  "description": "Item Price",
                  "example": 77000
                },
                "unit": {
                  "type": "string",
                  "description": "Unit Name",
                  "example": "Buah"
                },
                "qty_in_base": {
                  "type": "number",
                  "description": "Quantity that will be return",
                  "example": 1
                },
                "tax_amount": {
                  "type": "number",
                  "description": "Tax Amount",
                  "example": 0
                },
                "amount": {
                  "type": "number",
                  "description": "Total Amount",
                  "example": 77000
                },
                "location_id": {
                  "type": "number",
                  "description": "Location ID",
                  "example": -1
                }
              }
            }
          }
        }
      },
      "savePurchaseReturnSettlementRefundRequest": {
        "required": [
          "account_id",
          "amount",
          "contact_id",
          "payment_id",
          "payment_no",
          "payment_type"
        ],
        "type": "object",
        "properties": {
          "payment_id": {
            "type": "number",
            "description": "Purchase Return Setttlement Payment ID",
            "example": 0
          },
          "payment_no": {
            "type": "string",
            "description": "Purchase Return Setttlement Payment Number",
            "example": "[auto]"
          },
          "payment_type": {
            "type": "number",
            "description": "Purchase Return Setttlement Payment Type",
            "example": 2
          },
          "contact_id": {
            "type": "number",
            "description": "Contact ID (Supplier)",
            "example": 4
          },
          "contact_name": {
            "type": "string",
            "description": "Contact Name (Supplier)",
            "example": "PTANYWAY"
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2018-10-02T04:00:00.000Z"
          },
          "account_id": {
            "type": "number",
            "description": "Account ID",
            "example": 1
          },
          "note": {
            "type": "string",
            "description": "Transaction Note",
            "example": "Return"
          },
          "amount": {
            "type": "number",
            "description": "Amount",
            "example": 25000
          },
          "items": {
            "type": "array",
            "description": "List Detail Purchase Return Settlement Refund",
            "items": {
              "type": "object",
              "properties": {
                "payment_detail_id": {
                  "type": "number",
                  "description": "Purchase Return Setttlement Payment Detail ID",
                  "example": 0
                },
                "purch_return_id": {
                  "type": "number",
                  "description": "Purchase Return ID",
                  "example": 1
                },
                "payment_amount": {
                  "type": "number",
                  "description": "Payment Amount",
                  "example": 25000
                }
              }
            }
          }
        }
      },
      "saveReceivedDateRequest": {
        "type": "object",
        "properties": {
          "salesorder_id": {
            "type": "number",
            "description": "Sales Order ID",
            "example": 1
          },
          "received_date": {
            "type": "string",
            "format": "date-time",
            "description": "Sales Order Received Date",
            "example": "2018-10-20T17:00:00.000Z"
          }
        }
      },
      "saveRedeemRequest": {
        "required": [
          "email",
          "reward_id"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email Customer",
            "example": "member@loyalty.com"
          },
          "reward_id": {
            "type": "number",
            "description": "Reward ID",
            "example": 2
          }
        }
      },
      "saveReturnSettlementBillRequest": {
        "required": [
          "contact_id",
          "return_id",
          "settlement_no",
          "supplier_name"
        ],
        "type": "object",
        "properties": {
          "settlement_id": {
            "type": "number",
            "description": "Purchase Return Settlement ID",
            "example": 0
          },
          "settlement_no": {
            "type": "string",
            "description": "Purchase Return Settlement Number",
            "example": "[auto]"
          },
          "return_id": {
            "type": "number",
            "description": "Purchase Return ID",
            "example": 2
          },
          "contact_id": {
            "type": "number",
            "description": "Contact ID (Supplier)",
            "example": 3
          },
          "supplier_name": {
            "type": "string",
            "description": "Contact Name (Supplier)",
            "example": "PTANYWAY"
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2018-10-02T04:00:00.000Z"
          },
          "amount": {
            "type": "number",
            "description": "Total Amount",
            "example": 77000
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "settlement_detail_id": {
                  "type": "number",
                  "description": "Purchase Return Settlement Detail ID",
                  "example": 1
                },
                "bill_id": {
                  "type": "number",
                  "description": "Bill ID",
                  "example": 1
                },
                "payment_amount": {
                  "type": "number",
                  "description": "Payment Amount",
                  "example": 77000
                }
              }
            }
          }
        }
      },
      "saveRewardRequest": {
        "required": [
          "points",
          "reward_name"
        ],
        "type": "object",
        "properties": {
          "reward_id": {
            "minimum": 0,
            "type": "number",
            "description": "Reward ID",
            "example": 0
          },
          "reward_name": {
            "type": "string",
            "description": "Reward Name",
            "example": "Indomie"
          },
          "description": {
            "type": "string",
            "description": "Reward Description",
            "example": "Indomie Rasa Kaldu Ayam"
          },
          "points": {
            "type": "string",
            "description": "Needed Points",
            "example": 1
          },
          "images": {
            "type": "array",
            "descriptions": "List Images Reward",
            "items": {
              "type": "object",
              "properties": {
                "reward_image_id": {
                  "type": "number",
                  "description": "Reward Image ID",
                  "example": 1
                },
                "reward_id": {
                  "type": "number",
                  "description": "Reward ID",
                  "example": 1
                },
                "cloud_key": {
                  "type": "string",
                  "description": "Image URL",
                  "example": "https://jubelio.blob.core.windows.net/images/e06f6d63_0c61_48f6_922f_232b73db617c/a3001705-d872-4c0d-b59a-db7908954334.jpeg"
                },
                "file_name": {
                  "type": "string",
                  "description": "Image File Name",
                  "example": "jubelio-A5-front.jpg"
                },
                "sequence_number": {
                  "type": "number",
                  "description": "Sequence Number",
                  "example": 0
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Image Thumbnail URL",
                  "example": "https://jubelio.blob.core.windows.net/images/e06f6d63_0c61_48f6_922f_232b73db617c/a3001705-d872-4c0d-b59a-db7908954334.jpeg"
                }
              }
            }
          }
        }
      },
      "saveSalesOrderRequest": {
        "required": [
          "salesorder_id",
          "salesorder_no",
          "contact_id",
          "customer_name",
          "transaction_date",
          "sub_total",
          "total_disc",
          "total_tax",
          "grand_total",
          "location_id",
          "source",
          "add_fee",
          "add_disc",
          "service_fee",
          "items"
        ],
        "type": "object",
        "properties": {
          "salesorder_id": {
            "type": "number",
            "description": "Sales Order ID <br>\nTo create new sales order => \"salesorder_id\": 0 <br>\nTo edit sales order => \"salesorder_id\": {salesorder_id}\n",
            "example": 0
          },
          "salesorder_no": {
            "type": "string",
            "description": "Sales Order Number <br>\nTo create new sales order => \"salesorder_no\": \"[auto]\" <br>\nTo edit sales order => \"salesorder_no\": {salesorder_no}\n",
            "example": "[auto]"
          },
          "contact_id": {
            "type": "number",
            "description": "Contact ID (Customer)",
            "example": 1
          },
          "customer_name": {
            "type": "string",
            "description": "Contact Name (Customer)",
            "example": "Radit"
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2020-10-20T17:00:00.000Z"
          },
          "is_tax_included": {
            "type": "boolean",
            "description": "Wether Tax Included",
            "example": false
          },
          "note": {
            "type": "string",
            "description": "Purchase Order Note",
            "example": "Tlg packingan yg aman ya kk"
          },
          "sub_total": {
            "type": "number",
            "description": "Sub Total",
            "example": 120000
          },
          "total_disc": {
            "type": "number",
            "description": "Total Discount",
            "example": 0
          },
          "total_tax": {
            "type": "number",
            "description": "Total Tax",
            "example": 0
          },
          "grand_total": {
            "type": "number",
            "description": "Grand Total",
            "example": 120000
          },
          "ref_no": {
            "type": "string",
            "description": "Reference Number",
            "example": "00099"
          },
          "location_id": {
            "type": "number",
            "description": "Location ID",
            "example": -1
          },
          "source": {
            "type": "number",
            "description": "Purchase Source [1 = Internal]",
            "example": 1
          },
          "is_canceled": {
            "type": "boolean",
            "description": "Wether Purchase is canceled",
            "example": false
          },
          "cancel_reason": {
            "type": "string",
            "description": "Cancel Reason",
            "example": "Tidak Punya Uang"
          },
          "cancel_reason_detail": {
            "type": "string",
            "description": "Cancel Reason Detail",
            "example": "Tidak Punya Uang"
          },
          "channel_status": {
            "type": "string",
            "description": "Channel Status",
            "example": "Pending"
          },
          "shipping_cost": {
            "type": "number",
            "description": "Shipping Cost",
            "example": 5000
          },
          "insurance_cost": {
            "type": "number",
            "description": "Insurance Cost",
            "example": 5000
          },
          "is_paid": {
            "type": "boolean",
            "description": "Wether Purchase is paid",
            "example": true
          },
          "shipping_full_name": {
            "type": "string",
            "description": "Shipping Full Name (Receiver Name)",
            "example": "Radit"
          },
          "shipping_phone": {
            "type": "string",
            "description": "Shipping Phone (Receiver)",
            "example": "08227653121"
          },
          "shipping_address": {
            "type": "string",
            "description": "Shipping Address",
            "example": "Kutabumi"
          },
          "shipping_area": {
            "type": "string",
            "description": "Shipping Area",
            "example": "Pasar Kemis"
          },
          "shipping_city": {
            "type": "string",
            "description": "Shipping City",
            "example": "Tangerang"
          },
          "shipping_province": {
            "type": "string",
            "description": "Shipping Province",
            "example": "Banten"
          },
          "shipping_post_code": {
            "type": "string",
            "description": "Shipping Post COde",
            "example": 11750
          },
          "shipping_country": {
            "type": "string",
            "description": "Shipping Country",
            "example": "Indonesia"
          },
          "add_disc": {
            "type": "number",
            "description": "Additional Discount NB: You Need to Calculate the tax for every item if you are using tax like PPN",
            "example": 0
          },
          "add_fee": {
            "type": "number",
            "description": "Additional Fee",
            "example": 0
          },
          "salesmen_id": {
            "type": "number",
            "description": "Salesman ID",
            "example": null
          },
          "store_id": {
            "type": "number",
            "description": "Store ID",
            "example": null
          },
          "service_fee": {
            "type": "number",
            "description": "Service Fee",
            "example": null
          },
          "payment_method": {
            "type": "string",
            "description": "Payment method",
            "example": null
          },
          "items": {
            "type": "array",
            "description": "List Item in Purchase",
            "items": {
              "required": [
                "amount",
                "tax_amount",
                "disc_amount",
                "disc",
                "qty_in_base",
                "unit",
                "price",
                "tax_id",
                "item_id",
                "salesorder_detail_id"
              ],
              "type": "object",
              "properties": {
                "salesorder_detail_id": {
                  "type": "number",
                  "description": "Sales Order Detail ID",
                  "example": 0
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 14
                },
                "serial_no": {
                  "type": "string",
                  "description": "Serial Number",
                  "example": "SN001"
                },
                "description": {
                  "type": "string",
                  "description": "Item Description",
                  "example": "Kaos DreamCatcher Born to Be Yours"
                },
                "tax_id": {
                  "type": "number",
                  "description": "Tax ID",
                  "example": 1
                },
                "price": {
                  "type": "number",
                  "description": "Item Price",
                  "example": 120000
                },
                "unit": {
                  "type": "string",
                  "description": "Unit Name",
                  "example": "Buah"
                },
                "qty_in_base": {
                  "type": "number",
                  "description": "Quantity that will be Purchased",
                  "example": 1
                },
                "disc": {
                  "type": "number",
                  "description": "Item Discount",
                  "example": 0
                },
                "disc_amount": {
                  "type": "number",
                  "description": "Item Discount Amount",
                  "example": 0
                },
                "tax_amount": {
                  "type": "number",
                  "description": "Item Tax Amount NB: You Need to Calculate the tax for every item if you are using tax like PPN",
                  "example": 0
                },
                "amount": {
                  "type": "number",
                  "description": "Item Total Amount",
                  "example": 120000
                },
                "location_id": {
                  "type": "number",
                  "description": "Item Location ID",
                  "example": -1
                },
                "shipper": {
                  "type": "string",
                  "description": "Shipper",
                  "example": "J&T REG"
                },
                "channel_order_detail_id": {
                  "type": "number",
                  "description": "Channel order detail ID",
                  "example": null
                }
              }
            }
          }
        }
      },
      "saveSalesPaymentRequest": {
        "required": [
          "account_id",
          "amount",
          "contact_id",
          "payment_id",
          "payment_no",
          "payment_type"
        ],
        "type": "object",
        "properties": {
          "payment_id": {
            "type": "number",
            "description": "Payment ID",
            "example": 0
          },
          "payment_no": {
            "type": "string",
            "description": "Payment Number",
            "example": "[auto]"
          },
          "payment_type": {
            "type": "number",
            "description": "Payment Type",
            "example": 0
          },
          "contact_id": {
            "type": "number",
            "description": "Payment ID",
            "example": 0
          },
          "contact_name": {
            "type": "string",
            "description": "Contact ID",
            "example": 1
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Tranasction Date",
            "example": "2019-01-13T21:07:13.273Z"
          },
          "account_id": {
            "type": "number",
            "description": "Account ID",
            "example": 1
          },
          "account_name": {
            "type": "string",
            "description": "Account Name",
            "example": "1-1000 - Kas"
          },
          "note": {
            "type": "string",
            "description": "Payment Note",
            "example": "Bayar Faktur INV-00001"
          },
          "amount": {
            "type": "number",
            "description": "Payment Amount",
            "example": 100000
          },
          "items": {
            "type": "array",
            "description": "List Payment Detail",
            "items": {
              "type": "object",
              "properties": {
                "payment_detail_id": {
                  "type": "number",
                  "description": "Payment Detail ID",
                  "example": 1
                },
                "invoice_id": {
                  "type": "number",
                  "description": "Invoice ID",
                  "example": 10
                },
                "payment_amount": {
                  "type": "number",
                  "description": "Invoice Amount",
                  "example": 100000
                }
              }
            }
          }
        }
      },
      "saveSalesReturnInvoiceRequest": {
        "required": [
          "contact_id",
          "customer_name",
          "return_id",
          "settlement_no"
        ],
        "type": "object",
        "properties": {
          "settlement_id": {
            "type": "number",
            "description": "Sales Return Settlement ID",
            "example": 0
          },
          "settlement_no": {
            "type": "string",
            "description": "Sales Return Settlement Number",
            "example": "[auto]"
          },
          "return_id": {
            "type": "number",
            "description": "Sales Return ID",
            "example": 1
          },
          "contact_id": {
            "type": "number",
            "description": "Contact ID (Customer)",
            "example": 1
          },
          "customer_name": {
            "type": "string",
            "description": "Contact Name (Customer)",
            "example": "Mikha"
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2019-01-13T22:03:56.972Z"
          },
          "amount": {
            "type": "number",
            "description": "Settlement Amount",
            "example": 120000
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "settlement_detail_id": {
                  "type": "number",
                  "description": "Sales Return Settlement Detail ID",
                  "example": 0
                },
                "invoice_id": {
                  "type": "number",
                  "description": "Invoice ID",
                  "example": 1
                },
                "payment_amount": {
                  "type": "number",
                  "description": "Invoice Payment Amount",
                  "example": 120000
                }
              }
            }
          }
        }
      },
      "saveSalesReturnRefundRequest": {
        "required": [
          "account_id",
          "amount",
          "contact_id",
          "payment_id",
          "payment_no",
          "payment_type"
        ],
        "type": "object",
        "properties": {
          "payment_id": {
            "type": "number",
            "description": "Sales Return Payment ID",
            "example": 0
          },
          "payment_no": {
            "type": "string",
            "description": "Sales Return Payment Number",
            "example": "[auto]"
          },
          "payment_type": {
            "type": "number",
            "description": "Payment Type",
            "example": 3
          },
          "contact_id": {
            "type": "number",
            "description": "Contact ID (Customer)",
            "example": 1
          },
          "contact_name": {
            "type": "string",
            "description": "Contact Name (Customer)",
            "example": "Mikha"
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2019-01-13T21:52:45.041Z"
          },
          "account_id": {
            "type": "number",
            "description": "Account ID",
            "example": 1
          },
          "amount": {
            "type": "number",
            "description": "Payment Amount",
            "example": 120000
          },
          "items": {
            "type": "array",
            "description": "List Sales Return Payment Detail",
            "items": {
              "type": "object",
              "properties": {
                "payment_detail_id": {
                  "type": "number",
                  "description": "Sales Return Payment Detail ID",
                  "example": 0
                },
                "sales_return_id": {
                  "type": "number",
                  "description": "Sales Return ID",
                  "example": 1
                },
                "payment_amount": {
                  "type": "number",
                  "description": "Payment Amount",
                  "example": 120000
                }
              }
            }
          }
        }
      },
      "saveSalesReturnRequest": {
        "required": [
          "customer_name",
          "location_id",
          "return_no"
        ],
        "type": "object",
        "properties": {
          "return_id": {
            "type": "number",
            "description": "Sales Return ID",
            "example": 0
          },
          "return_no": {
            "type": "string",
            "description": "Sales Return Number",
            "example": "[auto]"
          },
          "customer_id": {
            "type": "number",
            "description": "Contact ID (Customer)",
            "example": 1
          },
          "customer_name": {
            "type": "string",
            "description": "Contact Name (Customer)",
            "example": 1
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Tranasction Date",
            "example": "2019-01-13T21:21:32.261Z"
          },
          "is_tax_included": {
            "type": "boolean",
            "description": "Wether Tax Included",
            "example": false
          },
          "note": {
            "type": "string",
            "description": "Sales Return Note",
            "example": "Barang Cacat"
          },
          "sub_total": {
            "type": "number",
            "description": "Sub Total",
            "example": 120000
          },
          "total_tax": {
            "type": "number",
            "description": "Total Tax",
            "example": 0
          },
          "grand_total": {
            "type": "number",
            "description": "Grand Total",
            "example": 120000
          },
          "invoice_id": {
            "type": "number",
            "description": "Invoice ID",
            "example": 9
          },
          "location_id": {
            "type": "number",
            "description": "Location ID",
            "example": -1
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "return_detail_id": {
                  "type": "number",
                  "description": "Return Detail ID",
                  "example": 0
                },
                "invoice_detail_id": {
                  "type": "number",
                  "description": "Invoice Detail ID",
                  "example": 0
                },
                "serial_no": {
                  "type": "string",
                  "description": "Serial Number",
                  "example": ""
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 5
                },
                "description": {
                  "type": "string",
                  "description": "Item Description",
                  "example": "Kaos DreamCatcher Born to Be Yours"
                },
                "sales_acct_id": {
                  "type": "number",
                  "description": "Sales Account ID",
                  "example": 28
                },
                "tax_id": {
                  "type": "number",
                  "description": "Tax ID",
                  "example": 1
                },
                "price": {
                  "type": "number",
                  "description": "Item Price",
                  "example": 120000
                },
                "unit": {
                  "type": "string",
                  "description": "Unit Name",
                  "example": "Buah"
                },
                "qty_in_base": {
                  "type": "number",
                  "description": "Quantity that will be return",
                  "example": 1
                },
                "tax_amount": {
                  "type": "number",
                  "description": "Tax Amount",
                  "example": 0
                },
                "amount": {
                  "type": "number",
                  "description": "Total Amount",
                  "example": 120000
                },
                "cogs": {
                  "type": "number",
                  "description": "Cost of Goods Sold",
                  "example": 78000
                },
                "location_id": {
                  "type": "number",
                  "description": "Location ID",
                  "example": -1
                },
                "disc": {
                  "type": "number",
                  "description": "Discount",
                  "example": 0
                },
                "disc_amount": {
                  "type": "number",
                  "description": "Total Discount Amount",
                  "example": 0
                }
              }
            }
          }
        }
      },
      "saveTierRequest": {
        "required": [
          "spending_value",
          "tier_name"
        ],
        "type": "object",
        "properties": {
          "tier_name": {
            "type": "string",
            "description": "Loyalty Tier Name",
            "example": "Bronze"
          },
          "spending_value": {
            "type": "string",
            "description": "Spending Value",
            "example": 10
          }
        }
      },
      "saveWebhookRequest": {
        "required": [
          "webhooks"
        ],
        "type": "object",
        "properties": {
          "webhooks": {
            "type": "array",
            "description": "List Items in Webhooks",
            "items": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "description": "Action Type ('secret-key', 'update-product', 'update-salesorder', 'update-purchaseorder', 'new-salesreturn', 'new-stocktransfer', 'update-qty', 'update-price')",
                  "example": "update-product"
                },
                "url": {
                  "type": "string",
                  "description": "Webhook URL",
                  "example": "https://enopl9pouhy4h.x.pipedream.net"
                }
              }
            }
          }
        }
      },
      "schema1": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "setItemToAdjustResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "item_id": {
              "description": "Item ID",
              "type": "number",
              "example": 1
            },
            "item_name": {
              "description": "Item Name",
              "type": "string",
              "example": "Addison Jacket"
            },
            "item_full_name": {
              "description": "Item Full Name",
              "type": "string",
              "example": "DYSW351-Addison Jacket"
            },
            "unit": {
              "description": "Unit",
              "type": "string",
              "example": "Pcs"
            },
            "account_id": {
              "description": "Account ID",
              "type": "number",
              "example": 1
            },
            "account_code": {
              "description": "Account Code",
              "type": "string",
              "example": "1-1200"
            },
            "account_name": {
              "description": "Account Name",
              "type": "string",
              "example": "1-1200 - Persediaan Barang"
            },
            "cost": {
              "description": "Cost",
              "type": "number",
              "example": 371777.7777833333
            },
            "end_qty": {
              "description": "End QTY",
              "type": "number",
              "example": 0
            },
            "resulting_qty": {
              "description": "Resulting QTY",
              "type": "number",
              "example": 0
            }
          }
        }
      },
      "shipmentsOrdersResponse": {
        "type": "array",
        "description": "List Item to Pick",
        "items": {
          "type": "object",
          "properties": {
            "salesorder_id": {
              "type": "number",
              "description": "Sales order ID",
              "example": 1
            },
            "shipment_header_id": {
              "type": "number",
              "description": "Shipment header ID",
              "example": 1
            },
            "salesorder_no": {
              "type": "string",
              "description": "Reff number of Sales order",
              "example": "SO-000000001"
            },
            "shipment_no": {
              "type": "string",
              "description": "Reff number of Shipment",
              "example": "SO-000000001"
            },
            "transaction_date": {
              "type": "string",
              "description": "Transaction date",
              "example": "2020-04-13T04:01:31.399Z"
            },
            "source": {
              "type": "number",
              "description": "Channel ID",
              "example": 1
            },
            "shipment_date": {
              "type": "string",
              "description": "Shipping date",
              "example": "2020-04-13T04:01:31.399Z"
            },
            "shipping_full_name": {
              "type": "string",
              "description": "Shipping full name",
              "example": null
            },
            "shipping_full_address": {
              "type": "string",
              "description": "Shipping full Address",
              "example": "Jl. Jakarta"
            },
            "location_id": {
              "type": "number",
              "description": "Location ID",
              "example": null
            },
            "tracking_no": {
              "type": "string",
              "description": "Tracking number",
              "example": "AWB-00001"
            },
            "shipper": {
              "type": "string",
              "description": "Shipper",
              "example": null
            },
            "ticket_no": {
              "type": "string",
              "description": "Ticker no",
              "example": null
            },
            "marketplace_status": {
              "type": "string",
              "description": "Marketplace status",
              "example": "Pesanan berikut tidak memiliki kurir"
            },
            "courier_id": {
              "type": "number",
              "description": "Courier ID",
              "example": null
            },
            "shipment_type": {
              "type": "string",
              "description": "Shipment type",
              "example": null
            },
            "store_id": {
              "type": "number",
              "description": "Store ID",
              "example": null
            }
          }
        }
      },
      "storeLocationsResponse": {
        "type": "object",
        "description": "Adjustment Items",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in Store Location",
            "items": {
              "type": "object",
              "properties": {
                "channel_name": {
                  "type": "string",
                  "example": "TOKOPEDIA",
                  "description": "The Channel Name"
                },
                "location_id": {
                  "type": "number",
                  "example": -1,
                  "description": "The Location Id"
                },
                "location_name": {
                  "type": "string",
                  "example": "PUSAT",
                  "description": "The Location Name"
                },
                "location_code": {
                  "type": "string",
                  "example": "PST",
                  "description": "The Location Code"
                },
                "store_id": {
                  "type": "number",
                  "example": 6668,
                  "description": "The Store Id"
                },
                "store_name": {
                  "type": "string",
                  "example": "Raicha Store",
                  "description": "The Store Name"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "stores": {
        "type": "array",
        "description": "List Stores ID that connect with Location (Can be filled with empty array [])",
        "items": {
          "type": "number"
        }
      },
      "systemsettingAccountMappingResponse": {
        "type": "object",
        "description": "Adjustment Items",
        "properties": {
          "ar_acct_id": {
            "type": "number",
            "example": 3
          },
          "ap_acct_id": {
            "type": "number",
            "example": 14
          },
          "sales_disc_acct_id": {
            "type": "number",
            "example": 29
          },
          "retained_earning_acct_id": {
            "type": "number",
            "example": 25
          },
          "invt_acct_id": {
            "type": "number",
            "example": 4
          },
          "cogs_acct_id": {
            "type": "number",
            "example": 30
          },
          "sales_acct_id": {
            "type": "number",
            "example": 32
          },
          "purch_acct_id": {
            "type": "number",
            "example": 48
          },
          "shipping_acct_id": {
            "type": "number",
            "example": 46
          },
          "insurance_acct_id": {
            "type": "number",
            "example": 61
          },
          "cash_acct_id": {
            "type": "number",
            "example": 1
          },
          "bank_acct_id": {
            "type": "number",
            "example": 2
          },
          "adjp_acct_id": {
            "type": "number",
            "example": 75
          },
          "adjm_acct_id": {
            "type": "number",
            "example": 72
          },
          "sales_add_disc_account_id": {
            "type": "number",
            "example": 76
          },
          "sales_add_fee_account_id": {
            "type": "number",
            "example": 77
          },
          "supplier_deposit_acct_id": {
            "type": "number",
            "example": 80
          },
          "customer_deposit_acct_id": {
            "type": "number",
            "example": 1
          },
          "service_fee_account_id": {
            "type": "number",
            "example": 83
          },
          "ar_account_name": {
            "type": "string",
            "example": "1-1100 - Piutang Usaha"
          },
          "ap_account_name": {
            "type": "string",
            "example": "2-2000 - Hutang Usaha"
          },
          "sales_disc_account_name": {
            "type": "string",
            "example": "4-4001 - Diskon Penjualan"
          },
          "retained_earning_account_name": {
            "type": "string",
            "example": "3-3001 - Laba Ditahan"
          },
          "historical_bal_account_name": {
            "type": "string",
            "example": "3-3003 - Pengimbang Neraca"
          },
          "invt_account_name": {
            "type": "string",
            "example": "1-1200 - Persediaan Barang"
          },
          "cogs_account_name": {
            "type": "string",
            "example": "5-5000 - Harga Pokok Penjualan (COGS)"
          },
          "sales_account_name": {
            "type": "string",
            "example": "4-4000 - Penjualan"
          },
          "purch_account_name": {
            "type": "string",
            "example": "6-6017 - Biaya Administrasi & Umum Lainnya"
          },
          "shipping_account_name": {
            "type": "string",
            "example": "7-7005 - Ongkos Kirim"
          },
          "insurance_account_name": {
            "type": "string",
            "example": "6-6030 - Asuransi"
          },
          "cash_account_name": {
            "type": "string",
            "example": "1-1000 - Kas"
          },
          "bank_account_name": {
            "type": "string",
            "example": "1-1001 - Bank"
          },
          "adjp_account_name": {
            "type": "string",
            "example": "7-7004 - Penyesuaian Persediaan Barang"
          },
          "adjm_account_name": {
            "type": "string",
            "example": "8-8004 - Penyesuaian Persediaan Barang"
          },
          "sales_add_disc_account_name": {
            "type": "string",
            "example": "4-4002 - Diskon Lainnya"
          },
          "sales_add_fee_account_name": {
            "type": "string",
            "example": "8-8006 - Biaya Penjualan Lainnya"
          },
          "supplier_deposit_account_name": {
            "type": "string",
            "example": null
          },
          "customer_deposit_account_name": {
            "type": "string",
            "example": null
          },
          "service_fee_account_name": {
            "type": "string",
            "example": "8-8035 - Biaya Layanan"
          }
        }
      },
      "systemsettingTaxesResponse": {
        "type": "object",
        "description": "Adjustment Items",
        "properties": {
          "data": {
            "type": "array",
            "description": "List Items that exists in System",
            "items": {
              "type": "object",
              "properties": {
                "rate": {
                  "type": "string",
                  "example": "10.00"
                },
                "tax_id": {
                  "type": "number",
                  "example": -1
                },
                "tax_in": {
                  "type": "string",
                  "example": "1-1303 PPN Masukan"
                },
                "tax_name": {
                  "type": "string",
                  "example": "PPN"
                },
                "tax_out": {
                  "type": "string",
                  "example": "2-2103 PPN Pengeluaran"
                }
              }
            }
          },
          "totalCount": {
            "type": "number",
            "description": "Total Count of All Items",
            "example": 1
          }
        }
      },
      "uploadProductListing": {
        "required": [
          "group_id",
          "channel_id",
          "store_id"
        ],
        "type": "object",
        "properties": {
          "group_id": {
            "type": "number",
            "description": "Item Group ID",
            "example": 10
          },
          "channel_id": {
            "type": "number",
            "description": "Channel ID",
            "example": 2
          },
          "store_id": {
            "type": "number",
            "description": "Store ID",
            "example": 20
          }
        }
      },
      "variation_values": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Model_17"
        }
      },
      "variations": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Model_12"
        }
      },
      "webhookInvoice": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action Name",
            "example": "hook-invoice"
          },
          "return_id": {
            "type": "number",
            "description": "Return ID",
            "example": 1
          },
          "return_no": {
            "type": "string",
            "description": "Return Number",
            "example": "SR-000000001"
          },
          "ref_no": {
            "type": "string",
            "description": "Refference Number",
            "example": "INV-000000001"
          }
        }
      },
      "webhookPrice": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action Name",
            "example": "update-price"
          },
          "item_group_id": {
            "type": "number",
            "description": "Item Group ID",
            "example": 1
          },
          "item_group_name": {
            "type": "string",
            "description": "Item Group Name",
            "example": "Test barang"
          }
        }
      },
      "webhookProduct": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action Name",
            "example": "update-product"
          },
          "item_group_id": {
            "type": "number",
            "description": "Item Group ID",
            "example": 1
          },
          "item_group_name": {
            "type": "string",
            "description": "Item Group Name",
            "example": "Test barang"
          }
        }
      },
      "webhookPurchaseOrder": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action Name",
            "example": "new-purchaseorder"
          },
          "purchaseorder_id": {
            "type": "number",
            "description": "Purchase Order ID",
            "example": 1
          },
          "purchaseorder_no": {
            "type": "string",
            "description": "Purchase Order Number",
            "example": "ORDER-001"
          },
          "status": {
            "type": "string",
            "description": "Status",
            "example": "CREATED"
          }
        }
      },
      "webhookSalesOrder": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action Name",
            "example": "update-salesorder"
          },
          "salesorder_id": {
            "type": "number",
            "description": "Sales Order ID",
            "example": 1
          },
          "salesorder_no": {
            "type": "string",
            "description": "Sales Order Number",
            "example": "WB000000001"
          },
          "source": {
            "type": "string",
            "description": "Source",
            "example": "WEBSTORE"
          },
          "store": {
            "type": "string",
            "description": "Store Name",
            "example": "WEBSTORE"
          },
          "status": {
            "type": "string",
            "description": "Sales Order Status",
            "example": "Created"
          },
          "contact_id": {
            "type": "number",
            "description": "Contact ID (Customer)",
            "example": 1
          },
          "customer_name": {
            "type": "string",
            "description": "Contact Name (Customer)",
            "example": "Radit"
          },
          "customer_phone": {
            "type": "string",
            "description": "Contact Phone (Customer)",
            "example": "08111111111"
          },
          "customer_email": {
            "type": "string",
            "description": "Contact Email (Customer)",
            "example": "test@jubelio.com"
          },
          "transaction_date": {
            "type": "string",
            "format": "date",
            "description": "Transaction Date",
            "example": "2018-10-20T17:00:00.000Z"
          },
          "created_date": {
            "type": "string",
            "format": "date",
            "description": "Created Date",
            "example": "2018-10-20T17:00:00.000Z"
          },
          "invoice_id": {
            "type": "number",
            "description": "Invoice ID",
            "example": 22
          },
          "invoice_no": {
            "type": "string",
            "description": "Invoice Number",
            "example": "INV-000000222"
          },
          "is_tax_included": {
            "type": "boolean",
            "description": "Wether Tax Included",
            "example": false
          },
          "note": {
            "type": "string",
            "description": "Purchase Order Note",
            "example": "Tlg packingan yg aman ya kk"
          },
          "sub_total": {
            "type": "number",
            "description": "Sub Total",
            "example": 120000
          },
          "total_disc": {
            "type": "number",
            "description": "Total Discount",
            "example": 0
          },
          "total_tax": {
            "type": "number",
            "description": "Total Tax",
            "example": 0
          },
          "grand_total": {
            "type": "number",
            "description": "Grand Total",
            "example": 120000
          },
          "ref_no": {
            "type": "string",
            "description": "Reference Number",
            "example": "00099"
          },
          "payment_method": {
            "type": "string",
            "description": "Reference Number",
            "example": "cod"
          },
          "location_id": {
            "type": "number",
            "description": "Header Location ID",
            "example": -1
          },
          "is_canceled": {
            "type": "boolean",
            "description": "Wether Purchase is canceled",
            "example": false
          },
          "cancel_reason": {
            "type": "string",
            "description": "Cancel Reason",
            "example": "Tidak Punya Uang"
          },
          "cancel_reason_detail": {
            "type": "string",
            "description": "Cancel Reason Detail",
            "example": "Tidak Punya Uang"
          },
          "channel_status": {
            "type": "string",
            "description": "Channel Status",
            "example": "Pending"
          },
          "shipping_cost": {
            "type": "number",
            "description": "Shipping Cost",
            "example": 5000
          },
          "insurance_cost": {
            "type": "number",
            "description": "Insurance Cost",
            "example": 5000
          },
          "is_paid": {
            "type": "boolean",
            "description": "Wether Purchase is paid",
            "example": true
          },
          "shipping_full_name": {
            "type": "string",
            "description": "Shipping Full Name (Receiver Name)",
            "example": "Radit"
          },
          "shipping_phone": {
            "type": "string",
            "description": "Shipping Phone (Receiver)",
            "example": "087788124444"
          },
          "shipping_address": {
            "type": "string",
            "description": "Shipping Address",
            "example": "Kutabumi"
          },
          "shipping_area": {
            "type": "string",
            "description": "Shipping Area",
            "example": "Pasar Kemis"
          },
          "shipping_city": {
            "type": "string",
            "description": "Shipping City",
            "example": "Tangerang"
          },
          "shipping_province": {
            "type": "string",
            "description": "Shipping Province",
            "example": "Banten"
          },
          "shipping_post_code": {
            "type": "string",
            "description": "Shipping Post COde",
            "example": 11750
          },
          "shipping_country": {
            "type": "string",
            "description": "Shipping Country",
            "example": "Indonesia"
          },
          "last_modified": {
            "type": "string",
            "description": "Last Modified",
            "example": "2020-04-08T13:30:05.319Z"
          },
          "register_session_id": {
            "type": "number",
            "description": "Register Session ID",
            "example": 1
          },
          "user_name": {
            "type": "string",
            "description": "User Name",
            "example": "user"
          },
          "ordprdseq": {
            "type": "string",
            "description": null,
            "example": null
          },
          "store_id": {
            "type": "string",
            "description": "Store ID",
            "example": 1
          },
          "marked_as_complete": {
            "type": "string",
            "description": "Mark as Complete",
            "example": null
          },
          "is_tracked": {
            "type": "string",
            "description": "Is Tracked",
            "example": null
          },
          "store_so_number": {
            "type": "string",
            "description": "Store SO Number",
            "example": null
          },
          "is_deleted_from_picklist": {
            "type": "boolean",
            "description": "Deleted from picklist",
            "example": false
          },
          "deleted_from_picklist_by": {
            "type": "string",
            "description": "Deleted from picklist by",
            "example": "username"
          },
          "dropshipper": {
            "type": "string",
            "description": "Dropshipper",
            "example": null
          },
          "dropshipper_note": {
            "type": "string",
            "description": "Dropshipper Note",
            "example": null
          },
          "dropshipper_address": {
            "type": "string",
            "description": "Dropshipper Address",
            "example": null
          },
          "is_shipped": {
            "type": "string",
            "description": "Is Shipped",
            "example": null
          },
          "due_date": {
            "type": "string",
            "description": "Due date",
            "example": null
          },
          "received_date": {
            "type": "string",
            "description": "Received date",
            "example": "2020-04-08T13:30:05.319Z"
          },
          "salesmen_id": {
            "type": "number",
            "description": "Salesmen ID",
            "example": 1
          },
          "salesmen_name": {
            "type": "string",
            "description": "Salesmen Name",
            "example": "salesname"
          },
          "escrow_amount": {
            "type": "string",
            "description": "Escrow amount",
            "example": null
          },
          "is_acknowledge": {
            "type": "boolean",
            "description": "Is acknowledge",
            "example": true
          },
          "acknowledge_status": {
            "type": "string",
            "description": "Acknowledge status",
            "example": null
          },
          "is_label_printed": {
            "type": "boolean",
            "description": "Label printed",
            "example": true
          },
          "is_invoice_printed": {
            "type": "boolean",
            "description": "Invoice printed",
            "example": false
          },
          "total_amount_mp": {
            "type": "number",
            "description": "Total Amount Marketplace",
            "example": null
          },
          "internal_do_number": {
            "type": "string",
            "description": "Internal DO number",
            "example": null
          },
          "internal_status": {
            "type": "string",
            "description": "Internal Status",
            "example": "PROCESSING"
          },
          "internal_so_number": {
            "type": "string",
            "description": "Internal SO number",
            "example": null
          },
          "tracking_number": {
            "type": "string",
            "description": "Tracking number",
            "example": null
          },
          "courier": {
            "type": "string",
            "description": "Courier",
            "example": "J&T REG"
          },
          "username": {
            "type": "string",
            "description": "Username",
            "example": "user"
          },
          "is_po": {
            "type": "boolean",
            "description": "Is PO",
            "example": false
          },
          "picked_in": {
            "type": "string",
            "description": "Picked In",
            "example": null
          },
          "district_cd": {
            "type": "string",
            "description": "District CD",
            "example": null
          },
          "sort_code": {
            "type": "string",
            "description": "Sort Code",
            "example": null
          },
          "shipment_type": {
            "type": "string",
            "description": "Shipment Type",
            "example": null
          },
          "status_details": {
            "type": "string",
            "description": "Status detail",
            "example": null
          },
          "service_fee": {
            "type": "string",
            "description": "Service fee",
            "example": "0.0000"
          },
          "source_name": {
            "type": "string",
            "description": "Channel name",
            "example": "INTERNAL"
          },
          "store_name": {
            "type": "string",
            "description": "Store name",
            "example": "Store Name"
          },
          "location_name": {
            "type": "string",
            "description": "Header Location Name",
            "example": "Pusat"
          },
          "shipper": {
            "type": "string",
            "description": "Shipper",
            "example": "J&T REG"
          },
          "tracking_no": {
            "type": "string",
            "description": "Tracking Number / AWB",
            "example": 2958792875272589000
          },
          "add_disc": {
            "type": "number",
            "description": "Additional Discount",
            "example": 0
          },
          "add_fee": {
            "type": "number",
            "description": "Additional Fee",
            "example": 0
          },
          "total_weight_in_kg": {
            "type": "string",
            "description": "The weight of order in KG",
            "example": "0.30"
          },
          "is_cod": {
            "type": "boolean",
            "description": "Wether COD or not",
            "example": false
          },
          "items": {
            "type": "array",
            "description": "List Item in Purchase",
            "items": {
              "type": "object",
              "properties": {
                "salesorder_detail_id": {
                  "type": "number",
                  "description": "Sales Order Detail ID",
                  "example": 0
                },
                "item_id": {
                  "type": "number",
                  "description": "Item ID",
                  "example": 14
                },
                "serial_no": {
                  "type": "string",
                  "description": "Serial Number",
                  "example": "SN001"
                },
                "description": {
                  "type": "string",
                  "description": "Item Description",
                  "example": "Kaos DreamCatcher Born to Be Yours"
                },
                "tax_id": {
                  "type": "number",
                  "description": "Tax ID",
                  "example": 1
                },
                "price": {
                  "type": "number",
                  "description": "Item Price",
                  "example": 120000
                },
                "unit": {
                  "type": "string",
                  "description": "Unit Name",
                  "example": "Buah"
                },
                "qty_in_base": {
                  "type": "number",
                  "description": "Quantity that will be Purchased",
                  "example": 1
                },
                "disc": {
                  "type": "number",
                  "description": "Item Discount",
                  "example": 0
                },
                "disc_amount": {
                  "type": "number",
                  "description": "Item Discount Amount",
                  "example": 0
                },
                "tax_amount": {
                  "type": "number",
                  "description": "Item Tax Amount",
                  "example": 0
                },
                "amount": {
                  "type": "number",
                  "description": "Item Total Amount",
                  "example": 120000
                },
                "location_id": {
                  "type": "number",
                  "description": "Item Location ID",
                  "example": -1
                },
                "shipper": {
                  "type": "string",
                  "description": "Shipper",
                  "example": "J&T REG"
                },
                "qty": {
                  "type": "number",
                  "description": "Quantity",
                  "example": 1
                },
                "uom_id": {
                  "type": "number",
                  "example": -1
                },
                "shipped_date": {
                  "type": "date",
                  "example": null
                },
                "channel_order_detail_id": {
                  "type": "number",
                  "example": null
                },
                "is_return_resolved": {
                  "type": "boolean",
                  "description": "Return is resolved",
                  "example": false
                },
                "reject_return_reason": {
                  "type": "string",
                  "description": "Reject return reason",
                  "example": ""
                },
                "awb_created_date": {
                  "type": "date",
                  "description": "Awn Created date",
                  "example": null
                },
                "ticket_no": {
                  "type": "string",
                  "example": null
                },
                "pack_scanned_date": {
                  "type": "date",
                  "example": null
                },
                "pick_scanned_date": {
                  "type": "date",
                  "example": null
                },
                "destination_code": {
                  "type": "string",
                  "example": null
                },
                "origin_code": {
                  "type": "string",
                  "example": null
                },
                "status": {
                  "type": "string",
                  "example": null
                },
                "item_code": {
                  "type": "string",
                  "description": "Item code",
                  "example": "brg001"
                },
                "item_name": {
                  "type": "string",
                  "description": "Item name",
                  "example": "Barang 1"
                },
                "sell_price": {
                  "type": "string",
                  "description": "Sell price",
                  "example": "Barang 1"
                },
                "original_price": {
                  "type": "string",
                  "description": "Original price",
                  "example": "10.000"
                },
                "rate": {
                  "type": "string",
                  "example": "0.00"
                },
                "tax_name": {
                  "type": "string",
                  "description": "Tax name",
                  "example": "No Tax"
                },
                "item_group_id": {
                  "type": "number",
                  "description": null,
                  "example": 1
                },
                "loc_id": {
                  "type": "number",
                  "description": null,
                  "example": null
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Thumbnail link",
                  "example": "https://truzteedev.blob.core.windows.net/images/rxayuyour32vvi5jygo4eq/cc05d0ef-9e0a-4a49-b617-d430819fa724_thumb.jpg"
                },
                "fbm": {
                  "type": "string",
                  "description": null,
                  "example": null
                }
              }
            }
          }
        }
      },
      "webhookSalesReturn": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action Name",
            "example": "new-salesreturn"
          },
          "return_id": {
            "type": "number",
            "description": "Return ID",
            "example": 1
          },
          "return_no": {
            "type": "string",
            "description": "Return Number",
            "example": "SR-000000001"
          }
        }
      },
      "webhookStock": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action Name",
            "example": "update-qty"
          },
          "item_group_id": {
            "type": "number",
            "description": "Item Group ID",
            "example": 1
          },
          "item_group_name": {
            "type": "string",
            "description": "Item Group Name",
            "example": "Test barang"
          }
        }
      },
      "webhookStockTransfer": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action Name",
            "example": "new-stocktransfer"
          },
          "item_transfer_id": {
            "type": "number",
            "description": "Item Transfer ID",
            "example": 1
          },
          "item_transfer_no": {
            "type": "string",
            "description": "Item Transfer Number",
            "example": "TRF-000000001"
          },
          "status": {
            "type": "string",
            "description": "Status",
            "example": "CREATED"
          },
          "created_by": {
            "type": "string",
            "description": "Created By (Name)",
            "example": "support team"
          }
        }
      }
    },
    "parameters": {
      "authorization": {
        "name": "authorization",
        "in": "header",
        "required": true,
        "style": "simple",
        "explode": false,
        "description": "Authentication Token",
        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJTU0NjY3NDk2MH0.KVt...",
        "schema": {
          "type": "string"
        }
      },
      "createdSince": {
        "name": "createdSince",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "description": "Created Since",
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      "csv": {
        "name": "csv",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "description": "Get Response as CSV File",
        "example": true,
        "schema": {
          "type": "string"
        }
      },
      "dateFrom": {
        "name": "dateFrom",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "description": "The Date From",
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      "dateTo": {
        "name": "dateTo",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "description": "The Date To",
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      "email": {
        "name": "email",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "description": "Contact Email",
        "example": "member@loyalty.com",
        "schema": {
          "type": "string"
        }
      },
      "lastModifiedSince": {
        "name": "lastModifiedSince",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "description": "Last Modified Since",
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2020-03-04T00:00:00.000Z"
        }
      },
      "page": {
        "name": "page",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "description": "Page",
        "schema": {
          "minimum": 1,
          "type": "number",
          "format": "int32"
        }
      },
      "pageSize": {
        "name": "pageSize",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "description": "Page Size",
        "schema": {
          "minimum": 1,
          "type": "number",
          "format": "int32"
        }
      },
      "q": {
        "name": "q",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "description": "Filter Query",
        "schema": {
          "type": "string"
        }
      },
      "sortBy": {
        "name": "sortBy",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "description": "Sort By Field",
        "example": "name",
        "schema": {
          "type": "string"
        }
      },
      "sortDirection": {
        "name": "sortDirection",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "description": "Sort Direction [ASC/DESC]",
        "example": "ASC",
        "schema": {
          "type": "string"
        }
      },
      "transactionDateFrom": {
        "name": "transactionDateFrom",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "description": "The Transaction Date From",
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      "transactionDateTo": {
        "name": "transactionDateTo",
        "in": "query",
        "required": false,
        "style": "form",
        "explode": true,
        "description": "The Transaction Date To",
        "schema": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "requestBodies": {
      "deleteNumberRequest": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "description": "List Object ID that will be deleted",
                  "items": {
                    "type": "number",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      },
      "deleteStringRequest": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "description": "List Object Number that will be deleted",
                  "items": {
                    "type": "string",
                    "example": "PO-000000005"
                  }
                }
              }
            }
          }
        }
      },
      "itemIdsRequest": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "description": "List Item ID",
                  "items": {
                    "type": "number",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      },
      "markCompleteRequest": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "description": "List Object ID that will be marked",
                  "items": {
                    "type": "number",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      },
      "Model_50": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Model_50"
            }
          }
        }
      },
      "Model_73": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Model_73"
            }
          }
        }
      },
      "rejectReturnRequest": {
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "description": "List Item",
              "items": {
                "type": "object",
                "properties": {
                  "salesorder_detail_id": {
                    "type": "number",
                    "description": "Salesorder Detail ID",
                    "example": 2993
                  },
                  "reject_return_reason": {
                    "type": "string",
                    "description": "Reject Return Request",
                    "example": "Barang sudah di pakai"
                  }
                }
              }
            }
          }
        }
      },
      "salesorderIdsRequest": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "description": "List Sales Order ID",
                  "items": {
                    "type": "number",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
